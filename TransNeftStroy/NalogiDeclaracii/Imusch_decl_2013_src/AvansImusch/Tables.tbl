// Авансовый расчет по налогу на имущество
table Struct TabOkato
(
  _NrecOkato     : comp,
  _sCode         : string,
  
  _INN           : string,
  _nRecKatOS     : comp,
  
  _Sum           : double,
  _SummR1_040    : double,
  _SummR1_050    : double,
  _SummR1_060    : double,
  

  _KVI2_k3_020   : double,
  _KVI2_k3_030   : double,
  _KVI2_k3_040   : double,
  _KVI2_k3_050   : double,
  _KVI2_k3_060   : double,
  _KVI2_k3_070   : double,
  _KVI2_k3_080   : double,
  _KVI2_k3_090   : double,
  _KVI2_k3_100   : double,
  _KVI2_k3_110   : double,

  _KVI2_k4_020   : double,
  _KVI2_k4_030   : double,
  _KVI2_k4_040   : double,
  _KVI2_k4_050   : double,
  _KVI2_k4_060   : double,
  _KVI2_k4_070   : double,
  _KVI2_k4_080   : double,
  _KVI2_k4_090   : double,
  _KVI2_k4_100   : double,
  _KVI2_k4_110   : double,

  _KVI2_120      : double,
  _KVI2_130      : string,
  _KVI2_140      : double,
  _KVI2_150_ch   : double,
  _KVI2_150_zn   : double,
  _KVI2_160      : string,
  _KVI2_170      : double,
  _KVI2_180      : double,
  _KVI2_190      : string,
  _KVI2_200      : double,

  _KVI3_k3_020   : double,
  _KVI3_k3_030   : double,
  _KVI3_k3_040   : double,
  _KVI3_k3_050   : double,
  _KVI3_k3_060   : double,
  _KVI3_k3_070   : double,
  _KVI3_k3_080   : double,
  _KVI3_k3_090   : double,
  _KVI3_k3_100   : double,
  _KVI3_k3_110   : double,

  _KVI3_k4_020   : double,
  _KVI3_k4_030   : double,
  _KVI3_k4_040   : double,
  _KVI3_k4_050   : double,
  _KVI3_k4_060   : double,
  _KVI3_k4_070   : double,
  _KVI3_k4_080   : double,
  _KVI3_k4_090   : double,
  _KVI3_k4_100   : double,
  _KVI3_k4_110   : double,

  _KVI3_120      : double,
  _KVI3_130      : string,
  _KVI3_140      : double,
  _KVI3_150      : double,
  _KVI3_160      : string,
  _KVI3_170      : double,
  _KVI3_180      : double,
  _KVI3_190      : string,
  _KVI3_200      : double
)
with index
(
  TabOkato0 = _NrecOkato,
  TabOkato1 = _sCode + _INN,
  TabOkato2 = _NRECOKATO + _INN
);

// сделал вторую таблицу, т.к. нужно универсально по кодам вида имущества, любого из кодов может не быть, следовательно не нужно выводить инфу
table Struct TabOkato_KVI
(
  _NrecOkato     : comp,
  _sCode         : string, // ОКАТО
  
  _nRecKatOS     : comp,
  _INN           : string,

  _Sum           : double,
  _SummR1_040    : double,
  _SummR1_050    : double,
  _SummR1_060    : double,

  _KVI      : string, // '2' / '3' пока только два кода вида имущества

  _k3_020   : double,
  _k3_030   : double,
  _k3_040   : double,
  _k3_050   : double,
  _k3_060   : double,
  _k3_070   : double,
  _k3_080   : double,
  _k3_090   : double,
  _k3_100   : double,
  _k3_110   : double,

  _k4_020   : double,
  _k4_030   : double,
  _k4_040   : double,
  _k4_050   : double,
  _k4_060   : double,
  _k4_070   : double,
  _k4_080   : double,
  _k4_090   : double,
  _k4_100   : double,
  _k4_110   : double,

  _120      : double,
  _130      : string,
  _140      : double,
  _150_ch   : double,
  _150_zn   : double,
  _160      : string,
  _170      : double,
  _180      : double,
  _190      : string,
  _200      : double
)
with index
(
  TabOkato00 = _KVI + _sCode,
  TabOkato01 = _NrecOkato,
  TabOkato02 = _sCode + _INN,
  TabOkato03 = _KVI + _NRECOKATO + _INN
);


// для первого раздела
table Struct Okato_Razdel1
(
  _NrecOkato     : comp,
  _sCode         : string,
  _Kod           : string,
  _Summ          : double,
  _Summ_040      : double
)
with index
(
  TabOkato01 = _sCode
);

// тестовая таблица для проверки формул наглядно
table Struct Formuly
(
  KVI            : string,
  kolonka        : string,
  data           : string,
  formulja       : string,
  INNOS          : string,
  OKATO          : string,
  summ           : double,
  ch             : double,
  zn             : double
)
with index
(
  Tab0 = formulja
);
