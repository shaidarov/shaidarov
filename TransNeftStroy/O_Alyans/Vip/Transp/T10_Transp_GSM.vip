#DEFINE Transp_GSM_FLT
Interface Transp_GSM_10 '10.Ведомость заправки ГСМ' EscClose ;
var
#include transp_var.vpp

create view 
//select from
#include transp_table.vpp
//where ((
//#include transp_link.vpp
//))
;

#include excel_fun.vpp
#include transp_fun.vpp
//include transp_putlst.vpp
#include transp_gsm.vpp
//==================================
// сохранение параметров
//==================================
Procedure SaveParam ;
{ SaveMyDsk(dtb,'T10_GSM_10_dtb')
  SaveMyDsk(dte,'T10_GSM_10_dte')
  SaveMyDsk(tp_period,'T10_GSM_10_tp_period')
  SaveMyDsk(filtr_tp,'T10_GSM_10_filtr')
  SaveMyDsk(logfilekl,'T10_GSM_10_logfilekl')
  
} //Procedure SaveParam ;
//==================================
// чтение параметров
//==================================
Procedure ReadParam ;
var wwkl :boolean ;
{ if Not ReadMyDsk(dtb,'T10_GSM_10_dtb',wwkl) dtb:=date(1,month(cur_date),year(cur_date))
  if Not ReadMyDsk(dte,'T10_GSM_10_dte',wwkl) dte:=date(last_day(cur_date),month(cur_date),year(cur_date))
  if Not ReadMyDsk(tp_period,'T10_GSM_10_tp_period',wwkl) tp_period:=0 ;
  if Not ReadMyDsk(filtr_tp,'T10_GSM_10_filtr',wwkl) filtr_tp:=0 ;
  if Not ReadMyDsk(logfilekl,'T10_GSM_10_logfilekl',wwkl) logfilekl:=false ;

} //Procedure ReadParam ;

//==================================
// печать
//==================================
Function PrintDoc : boolean ;
var werr:word ;
    wstr,wpodr:string ; 
    wnpp :longint ;
    wkol :double;
{ PrintDoc:=false ;
  nmtemplate:='Avto_LZK_Ved.xls';
  if getfirst My_transp_spis<>0
  { message('не нашли подходящих транспортных средств')
    exit ;
  }
  for(i:=1;i<=200;i:=i+1) dmsu[i]:=0 ;
  werr:=ExcelInit(nmtemplate,true,year(dtb))
  if werr>0
  { message('Ошибка инициализации Excel по шаблону '+nmtemplate) ;
    exit ;
  }
  
  if not xlSetActiveSheetByName('Gal_TblSheet')
  { message('Не найден лист "Gal_TblSheet"') ; 
   exit
  } 
  //вывод данных
  HeaderStrCount :=1 ;
  wexrow:=HeaderStrCount+1 ;
  MyXlCreaMatrix(10000,100)
  wexrow:=wexrow-1 ;
  wnpp:=0;
  update My_WorkGsm where (( 0 == My_WorkGsm.pa )) 
    set My_WorkGsm.sortname:=DateToStr(My_WorkGsm.Putgsm_Zaprdn,'YYYYMMDD')+' '+My_WorkGsm.PUTLST_NPL;
  wkol:=0;
  vorg.wc_org:=cogettune('myorg')
  _loop My_WorkGsm where (( 0 == My_WorkGsm.pa))  ordered by index Index4  
  {  if not nextvisual then exit;
     if  My_WorkGsm.LIMZAPH_TYPE=1 then continue;
     if My_WorkGsm.Zarpl_Vidt+My_WorkGsm.PutGsm_VidT  =0 then continue;//  только ведь по ЛЗК
     mylogwrite(false,' '+My_WorkGsm.PUTLST_NPL)
     wexrow:=wexrow+1;wexcol:=1 ;
     wnpp:=wnpp+1;
     MyPutExcelNumber(wnpp,0,8,0,-1,-1);//1     //№ п/п
     MyPutExcel(DateToStr(My_WorkGsm.Putgsm_Zaprdn,'`DD/MM/YYYY'),8,0,-1,-1);//Дата выдачи
     MyPutExcel(My_WorkGsm.PUTLST_NPL,8,0,-1,-1);//№ путевого листа
     MyPutExcelNumber(My_WorkGsm.Zarpl_Vidt+My_WorkGsm.PutGsm_VidT,2,8,0,-1,-1);//"Количествотоплива"
     MyPutExcel(My_WorkGsm.Kolonka ,8,0,-1,-1);//№ колонки
     MyPutExcel(iPodrFilterDef.MyGetInitial(My_WorkGsm.Save_Drv_Fio,false),8,0,-1,-1);//Ф.И.О. водителя									
     wkol:=wkol+My_WorkGsm.Zarpl_Vidt+My_WorkGsm.PutGsm_VidT;
  } //_loop My_WorkGsm where (( 1 == My_WorkGsm.pa))  ordered by index Index4  
  wexrow:=wexrow+1 ;
  
  MyxlWriteMatrix(wexrow);
  xlFreeMatrix;
  matrixkl:=False;
  if not xlSetActiveSheetByName('Gal_VarSheet')
  { message('Не найден лист "Gal_VarSheet"') ; 
    exit;
  }
  vorg.wc_org:=cogettune('myorg')
  if vorg.getfirst katorg=0 {}
  xlSetCellStringValue(chr(39)+' Новая, восстановленная, бывшая в употреблении (нужное подчеркнуть)',2,3,2,3)//Title
  xlSetCellStringValue(chr(39)+DateToStr(cur_date, 'DD mon YYYY г'),3 , 3 ,3 ,3 );//DateRep
  xlSetCellStringValue(chr(39)+vorg.Katorg.name,4 , 3 ,4 ,3 );//KatOrg.Name
  xlSetCellStringValue(chr(39)+vorg.Katorg.UNN,5 , 3 ,5 ,3 );//KatOrg.UNN
  xlSetCellStringValue(chr(39)+vorg.KatOrg.OKPO,6, 3 ,6,3 );//KatOrg.OKPO
  xlSetCellStringValue(chr(39)+vorg.KatOrg.OKONH,7, 3 ,7,3 );//KatOrg.OKONH
  xlSetCellStringValue(chr(39)+vorg.KatOrg.Addr,8, 3 ,8,3 );//KatOrg.Addr
  xlSetCellStringValue(chr(39)+'',9, 3 ,9,3 );//KatPodr.Name
  xlSetCellStringValue(chr(39)+DateTostr(DTB,'DD/MM/YYYY'),10,3,10,3)
  xlSetCellStringValue(chr(39)+DateTostr(DTE,'DD/MM/YYYY'),11,3,11,3)
  xlSetCellStringValue(chr(39)+sGetTune('USER.FIO'),12,3,12,3)
  xlSetCellStringValue(chr(39)+if((filtr_tp_dop and 1)>0,FILTR_GSM,if((filtr_tp_dop and 2)>0,FILTR_GSMVID,'')),13,3,13,3)
  xlSetCellStringValue(string(wkol,0,2),14,3,14,3)

  do {
    if not xldelrangename(1)
    { break 
    }
  } while true 
  MyxlAddRangeNameVar('GalDBVar_Title',2)
  MyxlAddRangeNameVar('GalDBVar_DateRep',3)
  MyxlAddRangeNameVar('GalDBVar_KatOrg.Name',4)
  MyxlAddRangeNameVar('GalDBVar_KatOrg.UNN',5)
  MyxlAddRangeNameVar('GalDBVar_KatOrg.OKPO',6)
  MyxlAddRangeNameVar('GalDBVar_KatOrg.OKONH',7)
  MyxlAddRangeNameVar('GalDBVar_KatOrg.Addr',8)
  MyxlAddRangeNameVar('GalDBVar_KatPodr.Name',9)
  MyxlAddRangeNameVar('GalDBVar_DTB',10)
  MyxlAddRangeNameVar('GalDBVar_DTE',11)
  MyxlAddRangeNameVar('GalDBVar_Podpis',12)
  MyxlAddRangeNameVar('GalDBVar_Vid_topliva',13)
  MyxlAddRangeNameVar('GalDBVar_Itogo',14)
  
 // формируем диапазрны для таблицы 
 if not xlSetActiveSheetByName('Gal_TblSheet')
 { message('Не найден лист "Gal_TblSheet"') ; 
   exit
 }
 
  do {
    if not xldelrangename(1)
    { break 
    }
 } while true    
 xlAddRangeName('GalDBTbl_Shinaf', 1, 1, wnpp+1, 17);
//для полей  xlAddRangeName('GalDBTblFld_'+'', 1, npp, str, npp);
 xlAddRangeName('GalDBTblFld_'+'noma',1,1,wnpp+1,1)	
 xlAddRangeName('GalDBTblFld_'+'nomb',1,2,wnpp+1,2)
 xlAddRangeName('GalDBTblFld_'+'nomc',1,3,wnpp+1,3)
 xlAddRangeName('GalDBTblFld_'+'nomd',1,4,wnpp+1,4)
 xlAddRangeName('GalDBTblFld_'+'nome',1,5,wnpp+1,5)
 xlAddRangeName('GalDBTblFld_'+'nomf',1,6,wnpp+1,6)
 xlAddRangeName('GalDBTblFld_'+'nomg',1,7,wnpp+1,7)
 xlAddRangeName('GalDBTblFld_'+'nomh',1,8,wnpp+1,8)
 xlAddRangeName('GalDBTblFld_'+'nomi',1,9,wnpp+1,9)
 xlAddRangeName('GalDBTblFld_'+'nomj',1,10,wnpp+1,10)
 xlAddRangeName('GalDBTblFld_'+'nomk',1,11,wnpp+1,11)
 xlAddRangeName('GalDBTblFld_'+'noml',1,12,wnpp+1,12)
 xlAddRangeName('GalDBTblFld_'+'nomm',1,13,wnpp+1,13)
 xlAddRangeName('GalDBTblFld_'+'nomn',1,14,wnpp+1,14)
 xlAddRangeName('GalDBTblFld_'+'nomo',1,15,wnpp+1,15)
 xlAddRangeName('GalDBTblFld_'+'nomp',1,16,wnpp+1,16)
 xlAddRangeName('GalDBTblFld_'+'nomq',1,17,wnpp+1,17)
 

 if (not xlAddInsInstal(TranslatePath('%ClientStartPath%') +'XLS\F_XlsRep\', 'GalRepBuilder') )
 {
   Message('Не найдена сервисная надстройка Excel '+'"GalRepBuilder"', Error);
 }
 else
 { xlRunMacro('LoadReport') ;
 }  
 if not xlSetActiveSheetByName('Отчет')
 { //message('Не найден лист "Отчет"') ; 

 }


  // вывод итогов

  PrintDoc:=true ;

} //Function PrintDoc : boolean ;

//==================================
// отбор данных
//==================================
Function FormDoc : boolean ;
{ FormDoc:=false ;
  SaveParam ;
  GetTranspSpis ;
  delete all My_WorkGsm;
  if not GetGSMData(1) then exit ;
  delete My_WorkGsm where (( 0 == My_WorkGsm.pa and 10<<=My_WorkGsm.LIMZAPH_TYPE(noindex)));

//  if not GetPutLstData then exit ;
//  if not GroupByPutLst(2) then exit ;
  if not TranspSpis_chk then exit ;
  FormDoc:=PrintDoc ;
  MyXlEnd ;
} //Function FormDoc : boolean ;
//==================================
// экранная форма задания параметров
//==================================
#include transp_scr1.vpp
//==================================
// дополнит.функция инициализации
//==================================
Function Dop_Init :boolean ;
{  Dop_Init:=true ;
   nmtemplate:='Avto_LZK_Ved.xls';
   ReadParam ;
}
//==================================
// дополнит.функция выбора
//==================================
Function Dop_Pick :boolean ;
{  Dop_Pick:=true ;
}
//==================================
// дополнит.функция завершения
//==================================
Function Dop_Done :boolean ;
{  Dop_Done :=true ;
   SaveParam ;
}
//==================================
// дополнит.функция отработки enter
//==================================
Function Dop_Default :boolean ;
{  Dop_Default:=true ;
}
//==================================
// обработчик событий
//==================================
#include transp_handle.vpp
end.
#UNDEF Transp_GSM_FLT
