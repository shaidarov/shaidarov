/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║ Система       : Основные средства                                         ║
 ║ Назначение    : Работа с дополнительными изменяемыми параметрами ИК       ║
 ║                 по операциям ОС, НМА                                      ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/
#ifdef __OsChgPar__
#ifndef __CHGPAR_VIH__
#define __CHGPAR_VIH__

#ifdef __OsChgParConverter__
// Функция загрузки данных из хранилища в таблицу доступна если в словаре нет
// такой таблицы, а есть только таблица в памяти, либо если используем ее для
// конвертера базы данных.
  #define __NeedLoadOsChgPar__
#end

#include RecTypes.vpp

#ifdef ComponentVersion
#Component "F_OS"
#end

const
  // варианты значения поля OsChgPar.wType
  cgOsChg_OldVal   : word = 1;  // значение до проведения операции
  cgOsChg_NewVal   : word = 2;  // значение после проведения операции
  // варианты значения поля OsChgPar.ParCode
  cgOSChg_None     : word = 0;  // Тип не задан
  cgOsChg_Podr     : word = 1;  // Подразделение
  cgOsChg_Mol      : word = 2;  // МОЛ
  cgOsChg_Isp      : word = 3;  // Признак использования
  cgOsChg_HozOper  : word = 4;  // Операция начисления амортизации
  cgOsChg_Metod    : word = 5;  // Алгоритм начисления амортизации
  cgOsChg_SrokIsp  : word = 6;  // Срок полезного использования
  cgOsChg_PoprKoef : word = 7;  // Поправочный коэффициент
  cgOsChg_GrAm     : word = 8;  // Амортизационная группа
  cgOsChg_OKOF     : word = 9;  // Группировка ОКОФ
  cgOsChg_PrSb     : word = 10; // Признак собственности
  cgOsChg_CO       : word = 11; // Центр ответственности
  cgOsChg_Sposob   : word = 12; // Тип объекта
  cgOsChg_Grup     : word = 13; // Группа ОС
  cgOsChg_StoimPs  : word = 14; // Стоимость при поступлении
  cgOsChg_IznosPs  : word = 15; // Износ при поступлении
  cgOsChg_KauReff  : word = 16; // Внешние КАУ
  cgOsChg_DateK    : word = 17; // Дата ввода в эксплуатацию
  cgOsChg_Norma    : word = 18; // Норма амортизации
  cgOsChg_Stoim    : word = 19; // Стоимость объекта ОС/НМА
  cgOsChg_BaseStoim: word = 20; // Стоимость базовая/остаточная на 31.12.2001
  cgOsChg_StoimL   : word = 21; // Ликвидационная стоимость
  cgOsChg_NalogGR  : word = 22; // Налоговая группа
  cgOsChg_Kol      : word = 23; // Количество
  // !!! При добавлении новых полей стоит также посмотреть заполнение
  // истории изменения значений в печати списка операций по карточке в
  // P_KatOs.vpp.
end;

#ifdef __NeedLoadOsChgPar__
#include FpOAF.Inc
#include FpOAF.Vih      // универсальное хранилище
const
  // Имя таблицы и полей в хранилище
  cgChgParTbl      = 'OCP';
  cgChgParWType    = 'WType';
  cgChgParCMoveOs  = 'CMoveOs';
  cgChgParCNastrOs = 'CNastrOs';
  cgChgParCKatOs   = 'CKatOs';
  cgChgParParCode  = 'ParCode';
  cgChgParCValue   = 'CValue';
  cgChgParDValue   = 'DValue';
end;
#end // #ifdef __NeedLoadOsChgPar__
#doc
  Работа с дополнительными изменяемыми параметрами ИК по операциям ОС, НМА
#end
ObjInterface ObjMoveOsChgPar;
// -----------------------------------------------------------------------------
#doc
  Установка текущей операции
#end
  Procedure SetMoveOsRec(pcMoveOsNRec : comp);
// -----------------------------------------------------------------------------
#doc
  Установка текущего метода учета
#end
  Procedure SetNastrOsRec(pcNastrOsNRec : comp);
// -----------------------------------------------------------------------------
#doc
  Установка текущей инвентарной карточки
#end
  Procedure SetKatOsRec(pcKatOsNRec : comp);
// -----------------------------------------------------------------------------
#doc
  Удаление данных по заданной операции
#end
  Function DelMoveOs(pcMoveOsNRec : comp) : boolean;
// -----------------------------------------------------------------------------
#doc
  Создание данных по заданному методу учета для текущей операции на основе
  данных текущего метода учета.
#end
  Function AddNastrOsForMoveOs(pcNastrOsNRec : comp) : boolean;
// -----------------------------------------------------------------------------
#doc
  Удаление данных по заданному методу учета по всем операциям
#end
  Function DelNastrOs(pcNastrOsNRec : comp) : boolean;
// -----------------------------------------------------------------------------
#doc
  <brief>Сохранение старых значений (до проведения операции) полей таблицы KatOs</brief>
  Сохраняет старые значения (до проведения операции) полей KatOs для
  текущей операции по заданному списку параметров<br>
  Если данные по какой-то причине уже сохранены, то повторное сохранение не делается.
#end
  Function SaveKatOsOldValues( pbKatOs : type$KatOs ) : boolean;
// -----------------------------------------------------------------------------
#doc
  <brief>Сохранение старых значений (до проведения операции) полей таблицы SpKatOs</brief>
  Сохраняет старые значения (до проведения операции) полей SpKatOs для
  текущей операции по заданному списку параметров<br>
  Если данные по какой-то причине уже сохранены, то повторное сохранение не делается.<br>
  WARNING !!! Данные о значениях до проведения операции могут появиться
  не только в результате отработки этого метода, но и в случае создания
  данных для нового метода учета, если в исходном методе такие данные были
  сохранены.
#end
  Function SaveSpKatOsOldValues( pbSpKatOs : type$SpKatOs ) : boolean;
// -----------------------------------------------------------------------------
#doc
  Удаляет сохраненные старые значения для заданного KatOs по операции
#end
  Function DelKatOsOldValues(pcKatOsNRec : comp) : boolean;
// -----------------------------------------------------------------------------
#doc
  Удаляет сохраненные старые значения для заданного SpKatOs по операции
#end
  Function DelSpKatOsOldValues(pcKatOsNRec : comp; pcNastrOsNRec : comp) : boolean;
// -----------------------------------------------------------------------------
#doc
  Флаг того, что операция содержит изменение значений в KatOs.
#end
  Function isPresentKatOsData : boolean;
// -----------------------------------------------------------------------------
#doc
  Флаг того, что операция содержит изменение значений в SpKatOs.
#end
  Function isPresentSpKatOsData : boolean;
// -----------------------------------------------------------------------------
#doc
  Флаг того, что операция содержит изменение указанного параметра
#end
  Function isPresentParameter( pwParCode : word ) : boolean;
// -----------------------------------------------------------------------------
#doc
  Заполняет в буфере KatOs новые значения дополнительных параметров по текущей операции.
#end
  // Необходима, например, при проведении операции.
  // Возвращает true если произошло изменение значений в переданном буфере.
  Function PutKatOsNewValues( var vbKatOs : type$KatOs ) : boolean;
// -----------------------------------------------------------------------------
#doc
  Заполняет в буфере SpKatOs новые значения дополнительных параметров по текущей
  операции и текущему методу учета.
#end
  // Необходима, например, при проведении операции.
  // Возвращает true если произошло изменение значений в переданном буфере.
  Function PutSpKatOsNewValues( var vbSpKatOs : type$SpKatOs ) : boolean;
// -----------------------------------------------------------------------------
#doc
  Заполняет в буфере KatOs старые значения дополнительных параметров по текущей
  операции и текущей карточке
#end
  // Необходима, например, при отмене проведения операции.
  // Возвращает true если произошло изменение значений в переданном буфере.
  Function PutKatOsOldValues( var vbKatOs : type$KatOs ) : boolean;
// -----------------------------------------------------------------------------
#doc
  Заполняет в буфере SpKatOs старые значения дополнительных параметров по
  текущей операции, текущему методу учета и карточке.
#end
  // Необходима, например, при отмене проведения операции.
  // Возвращает true если произошло изменение значений в переданном буфере.
  Function PutSpKatOsOldValues( var vbSpKatOs : type$SpKatOs ) : boolean;
// -----------------------------------------------------------------------------
#doc
  // Удаляет сохраненные старые значения для определенного типа параметра
#end
  Function DelOsChgParOldValues(pcKatOsNRec : comp; pcNastrOsNRec : comp; pwPrevParam: word) : boolean;
// -----------------------------------------------------------------------------
#doc
  // Удаление данных по карточке при удалении позиции операции
#end
  Function DelKatOsAllValues(pcMoveOsNRec : comp; pcKatOsNRec : comp) : boolean;
// -----------------------------------------------------------------------------
#doc
  Восстановление значений внешних КАУ в ИК на основании операции перемещения ОС/НМА
#end
  Procedure RestoreKauReffByDate(pwTiDk: word; pcKatOS: comp; dStartDate, dDate: date);
// -----------------------------------------------------------------------------
#doc
  Ссылка на значение внешнего КАУ на основании операции перемещения ОС/НМА до проведения операции
#end
  // pwKau - код внешнего КАУ
  Function GetKauReffOldValues(pwKau : word) : comp;
// -----------------------------------------------------------------------------
#doc
  Ссылка на значение внешнего КАУ на основании операции перемещения ОС/НМА после проведения операции
#end
  // pwKau - код внешнего КАУ
  Function GetKauReffNewValues(pwKau : word) : comp;
// -----------------------------------------------------------------------------
#doc
  Флаг того, что операция содержит изменение Внешнего КАУ заданного кода
#end
  Function isPresentKauReff(pwKau : word): boolean;
// -----------------------------------------------------------------------------
#doc
  Наименование изменяемого параметра
#end
  Function GetNameParCode(pwParCode: word) : string;
// -----------------------------------------------------------------------------
#doc
  Флаг того, что операция содержит указанный параметр
#end
  Function isPresentParameterInOperation( pwParCode : word ) : boolean;
// -----------------------------------------------------------------------------
end;

ObjInterface ObjMoveOsChgPar1;
#doc
  Приведение в соответствие "предыдущих" значений изменяемых параметров<br>
  для операции ОС/НМА для карточки.</brief><br>
#end
  Function RefreshChgParForSpMoveOS(pcMoveOS, pcKatOS, pcNastrOS: comp; var pMsgKind : longint) : boolean;
// -----------------------------------------------------------------------------
end;

ObjInterface ObjMoveOsChgPar2;
#doc
  Проверка различия "предыдущих" значений изменяемых параметров в операции ОС/НМА
#end
  Function ChkPrevValuesInMoveOS(pcMoveOS, pcNastrOS: comp; pwMode: word) : word;
// -----------------------------------------------------------------------------
#doc
  Сохранить значения полей SpKatOs для текущей операции для заданного параметра
#end
  Function SaveSpKatOsValues_ParCode(pbSpKatOs: type$SpKatOs; pwType, pwParCode: word) : boolean;
// -----------------------------------------------------------------------------
end;

// -----------------------------------------------------------------------------
ObjInterface ObjMoveOsChgPar3;
#doc
  Получить значение налоговой группы для карточки ОС из операции ОС/НМА
#end
  Function GetKatNalGrValue(pwType : word; pcKatOS: comp) : comp;
// -----------------------------------------------------------------------------
#doc
  Установить налоговую группу для карточки ОС
#end
  Function SetNalGrOSValue(pwType: word; pcKatOS: comp): comp;
// -----------------------------------------------------------------------------
end;

const
  // Для метода ObjChgParEdit.SetMayEdit
  cgChgParMayNotEdit         : word = 0; // Запрещено редактирование данных
  cgChgParMayEditAllMeth     : word = 1; // Разрешено редактирование данных для всех методов учета
  cgChgParMayEditOnlyCurMeth : word = 2; // Разрешено редактирование только для текущего метода учета
  cgChgParMayEditOnlyCurOS   : word = 4; // Разрешено редактирование только для текущей карточки
end

#doc
  Редактирование значений параметров.
#end
ObjInterface ObjChgParEdit;
//------------------------------------------------------------------------------
#doc
  Перерисовка окна редактирования значений параметров.
#end
  Procedure RescanChgPar;
//------------------------------------------------------------------------------
#doc
  Перечитывает все значения параметров в окне редактирования.
#end
  // !!! Рекомендую методом RereadChgPar пользоваться осторожно. !!!
  // При тестировании использования его вызовов в перемещениях между
  // записями операций (MoveOs) обнаружено, что если операция проведена (то ли
  // по текущему методу, то ли по любому, точно не знаю) и список
  // дополнительных параметров карточки для изменения по операции пуст, то при
  // позиционировании на такую запись, по какой-то странной причине, возникает
  // событие, приводящее к закрытию текущего окна (по крайней мере тогда когда
  // встроенная панель этого интерфейса видима).
  Procedure RereadChgPar;
//------------------------------------------------------------------------------
#doc
   Установка разрешения на редактирование данных.
#end
  // В случае запрета - задается строка сообщения (psReason) о причине
  // запрета, которая будет дополнять сообщения пользователю.
  //   Необходимо устанавливать при каждом переключении между операциями и
  // переключении методов учета в интерфейсе редактирования.
  // Например запрет редактирования при проведенности операции или при
  // нахождении операции в закрытом отчетном периоде (при соответствующей
  // настройке).
  // cgChgParMayNotEdit         = 0; // Запрещено редактирование данных
  // cgChgParMayEditAllMeth     = 1; // Разрешено редактирование данных для всех методов учета
  // cgChgParMayEditOnlyCurMeth = 2; // Разрешено редактирование только для текущего метода учета
  Procedure SetMayEdit(pwMayEdit : word; psReason : string);
//------------------------------------------------------------------------------
#doc
  Событие по изменению метода учета
#end
  event Procedure OnChangeNastrOs;
//------------------------------------------------------------------------------
end;

#doc
  Работа с операциями по восстановлению значений в карточках измененных операциями изменения параметров
#end
ObjInterface ObjMoveOsChgParRev;
#doc
  Формирование операций обратного возвращения значений параметров,
  модифицированных операцией изменения параметров.
#end
  // -------------------------------------------------------------------------
  // Передаваемые параметры:
  //     pcMoveOs - ссылка на исходную операцию.
  //     pcKatOs  - ссылка на карточку по которой необходимо сформировать
  //                операцию.
  //                0, если формировать по всем карточкам операции.
  //     pdDatOb  - дата для создаваемой операции
  // -------------------------------------------------------------------------
  procedure CreateReversOperations(pcMoveOs : comp; pcKatOs : comp; pdDatOb : date);
// -----------------------------------------------------------------------------
#doc
  Просмотр списка операций обратной корректировки.
#end
  // -------------------------------------------------------------------------
  // Передаваемые параметры:
  //     pcMoveOs - ссылка на исходную операцию
  // -------------------------------------------------------------------------
  procedure ViewReversOperations(pcMoveOs : comp);
// -----------------------------------------------------------------------------
#doc
  Формирование операций обратного возвращения значений параметров,<br>
  модифицированных операциями изменения параметров, действие которых<br>
  завершается в заданном периоде.</brief><br>
  Период задается пользователем в соответствующем окне ввода.
  <ul> Передаваемые параметры:
  <li><ul>   pwTiDk - тип документов для которых осуществляется операция:
      <li>      15 - ОС,
      <li>      16 - НМА </ul></ul>
#end
  public procedure CreateOperationsForPeriod(pwTiDk : word);
// -----------------------------------------------------------------------------
end;


VipInterface OsChgPar
  implements ObjMoveOsChgPar, ObjMoveOsChgPar1, ObjMoveOsChgPar2, ObjMoveOsChgPar3, ObjChgParEdit
  Licensed   (Free)
;

VipInterface OsChgParRev
  implements ObjMoveOsChgParRev
  Licensed   (Free)
;

#end // __CHGPAR_VIH__
#end // __OsChgPar__
