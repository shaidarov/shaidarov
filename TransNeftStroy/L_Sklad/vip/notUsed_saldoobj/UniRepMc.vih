table struct collist(
  r : word,
  n : string,
  t : word,
  i : word
) with index (
  collist0=r(unique)
);

table struct tmp_group(
  nRec     : comp,
  cRec     : comp,
  level    : word,
  name     : string,
  wValue   : array [1..5] of word,
  cValue   : array [1..5] of comp,
  sValue   : array [1..5] of string,
  kValue   : array [1..5] of string,
  eValue   : array [1..5] of string,
  kol      : array [1..5] of double,
  summa    : array [1..5] of double
) with index (
  tmp_group0=nRec(unique),
  tmp_group1=level+cRec+name,
  tmp_group2=level+cValue[1]+cValue[2]+cValue[3]+cValue[4]+cValue[5]
);

table struct tmp_data(
  nRec       : comp,
  isNoSaldo  : byte,
  pDooc     : byte,
  cGroup     : comp,
  wValue     : array [1..16] of word,
  cValue     : array [1..16] of comp,
  kValue     : array [1..16] of string,
  nValue     : array [1..16] of string,
  sOther     : array [1..16] of string,
//pavel  kol        : array [1..5] of double,
  kol        : array [1..6] of double,
  price      : array [1..5] of double,
  summa      : array [1..5] of double,
  isEmpty  : byte
) with index (
  tmp_data0=nRec(unique),
  tmp_data1=cGroup+kValue[1]+kValue[2]+kValue[3]+kValue[4]+kValue[5]+kValue[6]+kValue[7]+kValue[8]+kValue[9]+kValue[10]+kValue[11]+kValue[12]+isNoSaldo+sOther[2],
  tmp_data2=isNoSaldo+pDooc+cValue[1]+cValue[2]+cValue[3]+cValue[4]+cValue[5]+cValue[6]+cValue[7]+cValue[8]+cValue[9]+cValue[10]+cValue[11]+cValue[12]+cValue[13]+cValue[14]+cValue[15]+cValue[16],
  tmp_data21=isNoSaldo+cValue[1]+cValue[2]+cValue[3]+cValue[4]+cValue[5]+cValue[6]+cValue[7]+cValue[8]+cValue[9]+cValue[10]+cValue[11]+cValue[12]+cValue[13]+cValue[14]+cValue[15]+cValue[16],
  tmp_data22=isNoSaldo+cValue[1]+cValue[2]+cValue[3]+cValue[4]+cValue[5]+cValue[6]+cValue[7]+cValue[8]+cValue[9]+cValue[10]+cValue[11]+cValue[12]+cValue[16],//агрегация
  tmp_data3=isEmpty
);
