//********************************************************************************
//
// Галактика 8.1 - Отчеты пользователя
// Отчеты на DSQL запросах
// Автор Стрельцов С.А. (отдел ПНР) 2012 год
//********************************************************************************
#include SQLFilts.vih
#include GetNotKAUFiltr.vih
#include GetKau.vih            // Обьектный интерфес выбора КАУ
#include SQLBuildReport.vih
Interface SQLFilts 'Настройка фильтров', EscClose,cyan;
  Show at (,,,20);

const
#include fldColor.inc;
end

var
    iGetNotKAUFiltr : GetNotKAUFiltr;
//include BuhRep.vpp
#declare SetFieldInVisible(num)
  if OborCFG.WFILTER[#num] <> word(0) or LongInt(OborCFG.iDouble[#num]) <> word(0)
  {
//    SetFieldState(#num, sfVisible);
    SetFieldState(#OborCFG.sRep[#num], sfVisible);
    SetFieldState(#DlgKauD#Num, sfVisible);
  }
  else
  {
 //   ClearFieldState(#num, sfVisible);
    ClearFieldState(#OborCFG.sRep[#num], sfVisible);
    ClearFieldState(#DlgKauD#Num, sfVisible);
  }
#end
//------------------------------------------------------------------------------
type
TParams = record
    mKauOs1, mKauOs2, mKauOs3, mKauOs4, mKauOs5, mKauOs6, mKauOs7 : word;    // кол-во выбранных
    cKauOs1, cKauOs2, cKauOs3, cKauOs4, cKauOs5, cKauOs6, cKauOs7 : tKodKau; // Перевести на массив
    wKauOs1, wKauOs2, wKauOs3, wKauOs4, wKauOs5, wKauOs6, wKauOs7 : LongInt;    // Перевести на массив
end;

const
  MultiStr           = 'множественный выбор';
end;
#declare MultiString(count)
  MultiStr + ' (' + string(#count) + ')'
#end
#declare MultiKauShow(mKau, wKau, cKau)
    if (VipParams.#mKau = 0, 'Не установлен',
      if (#wKau < cgiPickNotKAU,
        if (VipParams.#mKau = 1, if (GetAnyKAU(cgAkNoDef, #wKau, VipParams.#cKau),
          GivenAnName(1), ''),
            MultiStr + ' (' + string(VipParams.#mKau) + ')')
         ,if (VipParams.#mKau = 1, iGetNotKAUFiltr.GetValByNrec(#wKau, VipParams.#cKau) ,MultiStr + ' (' + string(VipParams.#mKau) + ')'))
       )

#end
//------------------------------------------------------------------------------
//include ShowKau.vpp
var
  wMode      : word;
  wKau       : LongInt;
  VipParams  : TParams;
  mCount :   word;
  cKau    : comp;
  s, po :string;
  wSQLBuildReport : SQLBuildReport;

 // VipParams   : TVipReportParams;



  Marker, tmpMarker,num, gliPickedCount, k : longint;
  MarkerName, tmpMarkerName: string;

#include GetKau.var     // Переменная типа "Интерфеса выбора КАУ"

create view
 var cOborCFG : comp;
As select
   #MultiKauShow(mKauOs1,if (OborCFG.WFILTER[1]<>0,OborCFG.WFILTER[1],LongInt(OborCFG.iDouble[1])),cKauOs1) (FieldName = DlgKauD1)
  ,#MultiKauShow(mKauOs2,if (OborCFG.WFILTER[2]<>0,OborCFG.WFILTER[2],LongInt(OborCFG.iDouble[2])),cKauOs2) (FieldName = DlgKauD2)
  ,#MultiKauShow(mKauOs3,if (OborCFG.WFILTER[3]<>0,OborCFG.WFILTER[3],LongInt(OborCFG.iDouble[3])),cKauOs3) (FieldName = DlgKauD3)
  ,#MultiKauShow(mKauOs4,if (OborCFG.WFILTER[4]<>0,OborCFG.WFILTER[4],LongInt(OborCFG.iDouble[4])),cKauOs4) (FieldName = DlgKauD4)
  ,#MultiKauShow(mKauOs5,if (OborCFG.WFILTER[5]<>0,OborCFG.WFILTER[5],LongInt(OborCFG.iDouble[5])),cKauOs5) (FieldName = DlgKauD5)
  ,#MultiKauShow(mKauOs6,if (OborCFG.WFILTER[6]<>0,OborCFG.WFILTER[6],LongInt(OborCFG.iDouble[6])),cKauOs6) (FieldName = DlgKauD6)
  ,#MultiKauShow(mKauOs6,if (OborCFG.WFILTER[7]<>0,OborCFG.WFILTER[7],LongInt(OborCFG.iDouble[7])),cKauOs7) (FieldName = DlgKauD7),
 *
From
  OborCFG,
  UserDeskRep,
  PickRep,
  Pick,
  KatOrgDescr
where
((
   cOborCFG      == OborCFG.Nrec  and
   UserName      == UserDeskRep.OwnName and
   OborCFG.Nrep + cgReport_30000  == UserDeskRep.nRep

))
;
#include pmarker.vpp
procedure MyInit;  forward;

procedure SaveOneFiltr(_nField : word);
{
  var cOneSel : comp;
  var MarkerName: string;
  if OborCFG.WFILTER[_nField] <> word(0) or OborCFG.IDouble[_nField] <> LongInt(0)
  {
    if OborCFG.WFILTER[_nField] <> word(0)
      MarkerName := iGetKau.GetMarkerName(OborCFG.WFILTER[_nField]);
    else
      MarkerName := iGetNotKAUFiltr.GetMarkerName(OborCFG.IDouble[_nField]);

    DelPickRep(_nField);
    Marker2PickRepEx(MarkerName, _nField,0);
    Marker := InitMarker(MarkerName, 8, 100, 5);
    ClearMarker(Marker);
    DoneMarker(Marker, MarkerName);
  }
}


function ReadOneFiltValueToMarker(_cOborCFG : comp; nField : integer): boolean;
{
  var cOneSel : comp;
  var MarkerName: string;
  cOborCFG := _cOborCFG;
  If GetFirst OborCFG = tsOk
    if GetFirst UserDeskRep = tsOk
      if OborCFG.WFILTER[nField] <> word(0) or OborCFG.IDouble[nField] <> LongInt(0)
      {
        if OborCFG.WFILTER[nField] <> word(0)
          MarkerName := iGetKau.GetMarkerName(OborCFG.WFILTER[nField]);
        else
          MarkerName := iGetNotKAUFiltr.GetMarkerName(OborCFG.IDouble[nField]);

        ReadOneFiltValueToMarker := true;
        MarkerName := iGetKau.GetMarkerName(OborCFG.WFILTER[nField]);
        PickRep2Marker(MarkerName, nField, 0);
        DoneMarker(Marker, MarkerName);
      }
}

function GetFiltMarkerName(_cOborCFG : comp; nField : integer): string;
{
  var cOneSel : comp;
  var MarkerName: string;
  cOborCFG := _cOborCFG;
  If GetFirst OborCFG = tsOk
    if OborCFG.WFILTER[nField] <> word(0) or OborCFG.IDouble[nField] <> LongInt(0)
    {
      if OborCFG.WFILTER[nField] <> word(0)
        GetFiltMarkerName := iGetKau.GetMarkerName(OborCFG.WFILTER[nField]);
      else
        GetFiltMarkerName := iGetNotKAUFiltr.GetMarkerName(OborCFG.IDouble[nField]);
    }
}

procedure ReadFiltValue(_cOborCFG : comp);
{
  var cOneSel : comp;
  var MarkerName: string;
  var nField : integer;
  cOborCFG := _cOborCFG;
  If GetFirst OborCFG = tsOk
    if GetFirst UserDeskRep = tsOk
      for (nField := 1; nField<=7;nField++)
      {
        if OborCFG.WFILTER[nField] <> word(0) or OborCFG.IDouble[nField] <> LongInt(0)
        {
          if OborCFG.WFILTER[nField] <> word(0)
            MarkerName := iGetKau.GetMarkerName(OborCFG.WFILTER[nField]);
          else
            MarkerName := iGetNotKAUFiltr.GetMarkerName(OborCFG.IDouble[nField]);

          MarkerName := iGetKau.GetMarkerName(OborCFG.WFILTER[nField]);
          PickRep2Marker(MarkerName, nField, 0);
          DoneMarker(Marker, MarkerName);
        }
      }
}

procedure SetViewFields;
{
  var Marker, num, gliPickedCount, k : longint;
  var MarkerName: string;
  var nField : integer;
  var cKau : comp;

  #SetFieldInVisible(1);
  #SetFieldInVisible(2);
  #SetFieldInVisible(3);
  #SetFieldInVisible(4);
  #SetFieldInVisible(5);
  #SetFieldInVisible(6);
  #SetFieldInVisible(7);

  if (OborCfg.WFILTER[8] and 1)<> 0
  {
    s  := 'с';
    po := 'по';
    SetFieldState(#OborCFG.sRep[8], sfVisible);
    SetFieldState(#s, sfVisible);
    SetFieldState(#UserDeskRep.RESDATE[1], sfVisible);
    SetFieldState(#po, sfVisible);
    SetFieldState(#UserDeskRep.RESDATE[2], sfVisible);

    if Day(UserDeskRep.RESDATE[1])=0
    {
      UserDeskRep.RESDATE[1] :=Date(1,1,1900);
      update current UserDeskRep;
    }
    if Day(UserDeskRep.RESDATE[2])=0
    {
      UserDeskRep.RESDATE[2] :=Cur_Date;
      update current UserDeskRep;
    }
  }
  else
  {
    ClearFieldState(#OborCFG.sRep[8], sfVisible);
    ClearFieldState(#s, sfVisible);
    ClearFieldState(#UserDeskRep.RESDATE[1], sfVisible);
    ClearFieldState(#po, sfVisible);
    ClearFieldState(#UserDeskRep.RESDATE[2], sfVisible);
  }

  if (OborCfg.WFILTER[8] and 2)<> 0
  {
    SetFieldState(#OborCFG.sRep[0], sfVisible);
    SetFieldState(#UserDeskRep.RESDATE[3], sfVisible);

    if Day(UserDeskRep.RESDATE[3])=0
    {
      UserDeskRep.RESDATE[3] :=Cur_Date;
      update current UserDeskRep;
    }
  }
  else
  {
    ClearFieldState(#OborCFG.sRep[0], sfVisible);
    ClearFieldState(#UserDeskRep.RESDATE[3], sfVisible);
  }

  for (nField := 1; nField<=7;nField++)
  {
/*    MarkerName := iGetKau.GetMarkerName(OborCFG.WFILTER[nField]);
    Marker := InitMarker(MarkerName, 8, 100, 5);
    gliPickedCount := GetMarkerCount(Marker);  */
     gliPickedCount:=0;
     _loop PickRep where ((UserName         == PickRep.OwnName and
                           UserDeskRep.NRec == PickRep.cUserDeskRep and
                           nField           == PickRep.wList
                                   ))
          gliPickedCount++;

    if (gliPickedCount > 0)
    {
      cKau := PickRep.cRec;
      //GetMarker(Marker, 0, cKau);
        case (nField) of
          1: { VipParams.mKauOs1 := gliPickedCount; VipParams.cKauOs1 := cKau }
          2: { VipParams.mKauOs2 := gliPickedCount; VipParams.cKauOs2 := cKau }
          3: { VipParams.mKauOs3 := gliPickedCount; VipParams.cKauOs3 := cKau }
          4: { VipParams.mKauOs4 := gliPickedCount; VipParams.cKauOs4 := cKau }
          5: { VipParams.mKauOs5 := gliPickedCount; VipParams.cKauOs5 := cKau }
          6: { VipParams.mKauOs6 := gliPickedCount; VipParams.cKauOs6 := cKau }
          7: { VipParams.mKauOs7 := gliPickedCount; VipParams.cKauOs7 := cKau }
        end; // case
    }
  }
  //DoneMarker(Marker, MarkerName);
}
Procedure ReInit(_cOborCFG : comp);
{
  cOborCFG := _cOborCFG;
  if GetFirst OborCFG = tsOk
    myInit;
}
screen scSetFilts 'Фильтр'('',,sci134Esc);
table OborCFG;
 fields
 OborCFG.sRep[8] : skip, Left;
 s : skip, Left;
 UserDeskRep.RESDATE[1] : NoProtect, Left;
 po : skip, Left;
 UserDeskRep.RESDATE[2](''): NoProtect,Left,
      {Font = {BackColor = if( UserDeskRep.RESDATE[1]>UserDeskRep.RESDATE[2],ColorError,0)}};
OborCFG.sRep[0] : skip, Left;
UserDeskRep.RESDATE[3] : NoProtect, Left;
#declare FldKauNum(Num)
 // '#Num:' : {Font = {Bold = true}}, Skip, Centered;
   OborCFG.sRep[#num] : Skip, Left;
  DlgKauD#Num     ('',,)  : Protect, QuickChoice, PickButton, {Font = {BackColor = 0}};
#end
  #FldKauNum(1)
  #FldKauNum(2)
  #FldKauNum(3)
  #FldKauNum(4)
  #FldKauNum(5)
  #FldKauNum(6)
  #FldKauNum(7)
<<

   .@@@@@@@@@@@@@@@@   .@@@ .@@@@@@@@@@@@@@ .@@@ .@@@@@@@@@@@@@@@
   .@@@@@@@@@@@@@@@@@@@@@   .@@@@@@@@@@@@@@

   .@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
   .@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
   .@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
   .@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
   .@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
   .@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
   .@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end; // screen
HandleEvent
cmInit:
{
  myInit;
}
cmCheckField:
{
  case (CurField) of
    #UserDeskRep.RESDATE[1], #UserDeskRep.RESDATE[2],#UserDeskRep.RESDATE[3]:
    {
      update current UserDeskRep;
    }
  end; // case
}
cmEdit:
{
  wSQLBuildReport.SQLEdit(OborCFG.Nrec);
}

cmPick:
{
  case CurField of
    // кау
    #DlgKauD1,
    #DlgKauD2,
    #DlgKauD3,
    #DlgKauD4,
    #DlgKauD5,
    #DlgKauD6 :
    {

      //if (QuickChoiceName <> '')
      QuickChoiceName := 'qcKau_Needed';

      var NumField : word;
      case (CurField) of
        #DlgKauD1 : { NumField := 1; wKau := if (OborCFG.WFILTER[1]<>0,OborCFG.WFILTER[1],OborCFG.iDouble[1]) ; mCount := VipParams.mKauOs1; cKau := VipParams.cKauOs1 }
        #DlgKauD2 : { NumField := 2; wKau := if (OborCFG.WFILTER[2]<>0,OborCFG.WFILTER[2],OborCFG.iDouble[2]) ; mCount := VipParams.mKauOs2; cKau := VipParams.cKauOs2 }
        #DlgKauD3 : { NumField := 3; wKau := if (OborCFG.WFILTER[3]<>0,OborCFG.WFILTER[3],OborCFG.iDouble[3]) ; mCount := VipParams.mKauOs3; cKau := VipParams.cKauOs3 }
        #DlgKauD4 : { NumField := 4; wKau := if (OborCFG.WFILTER[4]<>0,OborCFG.WFILTER[4],OborCFG.iDouble[4]) ; mCount := VipParams.mKauOs4; cKau := VipParams.cKauOs4 }
        #DlgKauD5 : { NumField := 5; wKau := if (OborCFG.WFILTER[5]<>0,OborCFG.WFILTER[5],OborCFG.iDouble[5]) ; mCount := VipParams.mKauOs5; cKau := VipParams.cKauOs5 }
        #DlgKauD6 : { NumField := 6; wKau := if (OborCFG.WFILTER[6]<>0,OborCFG.WFILTER[6],OborCFG.iDouble[6]) ; mCount := VipParams.mKauOs6; cKau := VipParams.cKauOs6 }
        #DlgKauD7 : { NumField := 7; wKau := if (OborCFG.WFILTER[7]<>0,OborCFG.WFILTER[7],OborCFG.iDouble[7]) ; mCount := VipParams.mKauOs7; cKau := VipParams.cKauOs7 }
      end; // case
      if (wKau = 0) exit;
//      SetKauFilters;
//      if (wReport <> cgRepBuh_UserRep02) and (wReport <> cgRepBuh_UserRep03)
        if wKau < cgiPickNotKAU
        {
          ReadFiltValue(OborCFG.Nrec);
          mCount := iGetKau.GetCodeKau(cgiPickMult or if (mCount>0, cgiNotClear, 0), wKau, cKau);
        }
        else
        {
          iGetNotKAUFiltr.RunFiltrDialog(wKau);
          mCount := iGetNotKAUFiltr.GetPickCount(wKau);
          cKau   := iGetNotKAUFiltr.GetNrecFirstPick(wKau);
        }
//      else
//        mCount := iGetKau.GetCodeKau(cgiPick, wKau, cKau);

//      iPickBuhNew.GetPickBuh(lEntity);
      if (mCount > 0) {
        case (NumField) of
          1: { VipParams.mKauOs1 := mCount; VipParams.cKauOs1 := cKau }
          2: { VipParams.mKauOs2 := mCount; VipParams.cKauOs2 := cKau }
          3: { VipParams.mKauOs3 := mCount; VipParams.cKauOs3 := cKau }
          4: { VipParams.mKauOs4 := mCount; VipParams.cKauOs4 := cKau }
          5: { VipParams.mKauOs5 := mCount; VipParams.cKauOs5 := cKau }
          6: { VipParams.mKauOs6 := mCount; VipParams.cKauOs6 := cKau }
          7: { VipParams.mKauOs7 := mCount; VipParams.cKauOs7 := cKau }
        end; // case
        SaveOneFiltr(NumField);

      }
    }
   end;
   ReReadRecord;
} // cmPick
cmOpenSearch:
{
  ProcessCommand(cmPick);
}
cmDelOnProtect:
{
#declare FldClear(Num)
  delete PickRep where ((UserName         == PickRep.OwnName and
                         UserDeskRep.NRec == PickRep.cUserDeskRep and
                           #num           == PickRep.wList
                                   ))

 /* MarkerName := iGetKau.GetMarkerName(OborCFG.WFILTER[#num]);
  Marker := InitMarker(MarkerName, 8, 100, 5);
  gliPickedCount := GetMarkerCount(Marker);
  ClearMarker(Marker);
  DoneMarker(Marker, MarkerName);   */
#end


  mCount:= 0;
  cKau := comp(0);
  case (CurField) of
    #DlgKauD1: { VipParams.mKauOs1 := mCount; VipParams.cKauOs1 := cKau;
                #FldClear(1)}
    #DlgKauD2: { VipParams.mKauOs2 := mCount; VipParams.cKauOs2 := cKau;
                #FldClear(2)}
    #DlgKauD3: { VipParams.mKauOs3 := mCount; VipParams.cKauOs3 := cKau;
                #FldClear(3)}
    #DlgKauD4: { VipParams.mKauOs4 := mCount; VipParams.cKauOs4 := cKau;
                #FldClear(4)}
    #DlgKauD5: { VipParams.mKauOs5 := mCount; VipParams.cKauOs5 := cKau;
                #FldClear(5)}
    #DlgKauD6: { VipParams.mKauOs6 := mCount; VipParams.cKauOs6 := cKau;
                #FldClear(6)}
    #DlgKauD7: { VipParams.mKauOs7 := mCount; VipParams.cKauOs7 := cKau;
                #FldClear(7)}
  end; // case
  ReReadRecord;
} //cmDelOnProtect
cmClose:
{
 // message('cmClose');

}
cmDone:
{
 // message('cmDone');

}

end;
procedure myInit;
{
  if boGetTune('USERTUNE.AccessToCreateSQlRep')=false
    SetHelpAndStatusContext (scSetFilts,-1, sci1EnEsc, '');
  if GetFirst UserDeskREP <> tsOk
  {
    UserDeskRep.OwnName := UserName;
    UserDeskRep.nRep := OborCFG.Nrep + cgReport_30000;
    Insert Current UserDeskRep;
  }
  SetViewFields;
  ReReadREcord;
}
end.
