#include NalFunc.vih
// ==============================  Получение имени организации-налогоплательщика и ее ИНН =======================================
Interface UserRep_NalVdr_32 'Расходы прошлых лет, выявленные в отчетном периоде';
table struct mtoborot = oborot;
create view vdr31
var
  dFrom
 ,dTo: date;
  iNalFunc: NalFunc;
  sp1, sp2 : tNrec;
//var
//  OrgName, INN:string;
as select
*
from
  mtoborot, oborot, buhschet, synonym spkau spkaua, synonym spkau spkaualt, katdoc, soprhoz, attrval,
  synonym attrval analitik,  synonym attrval analitikalt, synonym attrval schetnd, synonym attrval schetnk,
  synonym buhschet buhschetnd, synonym buhschet buhschetnk,
  synonym attrnam attrnamnd, synonym attrnam attrnamnk, synonym attrnam attrnaman1, synonym attrnam attrnaman2,
!
  synonym attrval attrval1, synonym attrval attrval2, synonym attrval attrval3, synonym attrval attrval4, synonym attrval attrval5,
  synonym attrval attrval6, synonym attrval attrval7, synonym attrval attrval8, synonym attrval attrval9,
!
  synonym attrnam attrnam1, synonym attrnam attrnam2, synonym attrnam attrnam3, synonym attrnam attrnam4, synonym attrnam attrnam5,
  synonym attrnam attrnam6, synonym attrnam attrnam7, synonym attrnam attrnam8, synonym attrnam attrnam9,
!
  synonym spkau spkau1, synonym spkau spkau2, synonym spkau spkau3, synonym spkau spkau4, synonym spkau spkau5,
  synonym spkau spkau6, synonym spkau spkau7, synonym spkau spkau8, synonym spkau spkau9,
  synonym spkau spkauF, synonym spkau spkauFF
  ,PodrFilter
where
((
  //root== oborot.nrec            20025
  //and '91'=oborot.krschetk
  '20057' == spkauF.KodGrKau
  and '0551' == spkauF.code   //Убытки прошлых лет
//  and ('001001' = spkauFF.code or '001003' = spkauFF.code )     //Входимость в налогооблагаемую базу
//    sp1, sp2 : tNrec;
  //ограничения на основную таблицу
 // and spkauFF.nrec = oborot.kauos[2]
  and 'T91'== oborot.schetO  and '05'  == oborot.SUBOSSCH
  and dFrom      <<= oborot.datob and dTo >>= oborot.datob
  and spkauF.nrec == oborot.kauos[1](NoIndex)
  //and oborot.KodSpo /== PodrFilter.cPodr
  and (sp1 = oborot.kauos[2] or sp2 = oborot.kauos[2] )
  //and  oborot.dataot <= oborot.datob)
  and date(01,01,1900) <<= oborot.dataot(NoIndex)


  and coOborot == ATTRNAM.WTABLE                                  //Вн.атр. - колонка 9
  and 'Счет-субсчет прошлого периода'==ATTRNAM.NAME
  and ATTRNAM.NREC == ATTRVAL.CATTRNAM
  and coOborot     == ATTRVAL.WTABLE
  and mtOBOROT.NREC  == ATTRVAL.CREC
  and ATTRVAL.VCOMP== BUHSCHET.nrec
!
  and coOborot == attrnamnd.WTABLE                                //Вн.атр. - колонка 11
  and 'Дебет счета налогового учета'==attrnamnd.NAME
  and attrnamnd.NREC==schetnd.CATTRNAM
  and coOborot      == schetnd.WTABLE
  and mtOBOROT.NREC   == schetnd.CREC
  and schetnd.vcomp == BUHSCHETnd.nrec
!
  and coOborot==attrnamnk.WTABLE                                //Вн.атр. - колонка 12
  and 'Кредит счет налогового учета'==attrnamnk.NAME
  and attrnamnk.NREC== schetnk.CATTRNAM
  and coOborot      == schetnk.WTABLE
  and mtOBOROT.NREC   == schetnk.CREC
  and schetnk.vcomp == BUHSCHETnk.nrec
!
  and coOborot==attrnaman1.WTABLE                                //Вн.атр. - колонка 10 - Прочие доходы и расходы
  and 'Аналитика прошлого периода - Прочие доходы и расходы'==attrnaman1.NAME
  and attrnaman1.NREC == analitik.CATTRNAM
  and coOborot        == analitik.WTABLE
  and mtOBOROT.NREC     == analitik.CREC
  and analitik.vcomp  == SPKAUa.nrec
!
  and coOborot==attrnaman2.WTABLE                                //Вн.атр. - колонка 10 - Виды продукции, работ, услуг
  and 'Аналитика прошлого периода - Виды продукции, работ, услуг'==attrnaman2.NAME
  and attrnaman2.NREC  == analitikalt.CATTRNAM
  and coOborot         == analitikalt.WTABLE
  and mtOBOROT.NREC      == analitikalt.CREC
  and analitikalt.vcomp== SPKAUalt.nrec
!
  // Череда внешних атрибутов для столбца 13
!
  and coOborot==attrnam1.WTABLE                                //Вн.атр. 1 - колонка 13
  and 'Аналитика по счету 968 - Договоры'==attrnam1.NAME
  and attrnam1.NREC == attrval1.CATTRNAM
  and coOborot      == attrval1.WTABLE
  and mtOBOROT.NREC   == attrval1.CREC
  and attrval1.vcomp== spkau1.nrec
!
  and coOborot==attrnam2.WTABLE                                //Вн.атр. 2 - колонка 13
  and 'Аналитика по счету 968 - Доходы и внереализационные расходы НУ'==attrnam2.NAME
  and attrnam2.NREC == attrval2.CATTRNAM
  and coOborot      == attrval2.WTABLE
  and mtOBOROT.NREC   == attrval2.CREC
  and attrval2.vcomp== spkau2.nrec
!
  and coOborot==attrnam3.WTABLE                                //Вн.атр. 3 - колонка 13
  and 'Аналитика по счету 968 - Доходы и расходы при реализации ОС, НМА и прав на з.у.'==attrnam3.NAME
  and attrnam3.NREC == attrval3.CATTRNAM
  and coOborot      == attrval3.WTABLE
  and mtOBOROT.NREC   == attrval3.CREC
  and attrval3.vcomp== spkau3.nrec
!
  and coOborot==attrnam4.WTABLE                                //Вн.атр. 4 - колонка 13
  and 'Аналитика по счету 968 - Инвентарные номера объектов ОС'==attrnam4.NAME
  and attrnam4.NREC == attrval4.CATTRNAM
  and coOborot      == attrval4.WTABLE
  and mtOBOROT.NREC   == attrval4.CREC
  and attrval4.vcomp== spkau4.nrec
!
  and coOborot==attrnam5.WTABLE                                //Вн.атр. 5 - колонка 13
  and 'Аналитика по счету 968 - Контрагенты'==attrnam5.NAME
  and attrnam5.NREC == attrval5.CATTRNAM
  and coOborot      == attrval5.WTABLE
  and mtOBOROT.NREC   == attrval5.CREC
  and attrval5.vcomp== spkau5.nrec
!
  and coOborot==attrnam6.WTABLE                                //Вн.атр. 6 - колонка 13
  and 'Аналитика по счету 968 - Объекты НМА, НИОКР, ТР'==attrnam6.NAME
  and attrnam6.NREC == attrval6.CATTRNAM
  and coOborot      == attrval6.WTABLE
  and mtOBOROT.NREC   == attrval6.CREC
  and attrval6.vcomp== spkau6.nrec
!
  and coOborot==attrnam7.WTABLE                                //Вн.атр. 7 - колонка 13
  and 'Аналитика по счету 968 - Объекты финансовых вложений'==attrnam7.NAME
  and attrnam7.NREC == attrval7.CATTRNAM
  and coOborot      == attrval7.WTABLE
  and mtOBOROT.NREC   == attrval7.CREC
  and attrval7.vcomp== spkau7.nrec
!
  and coOborot==attrnam8.WTABLE                                //Вн.атр. 8 - колонка 13
  and 'Аналитика по счету 968 - Уступка прав требования'==attrnam8.NAME
  and attrnam8.NREC == attrval8.CATTRNAM
  and coOborot      == attrval8.WTABLE
  and mtOBOROT.NREC   == attrval8.CREC
  and attrval8.vcomp== spkau8.nrec
!
  and coOborot==attrnam9.WTABLE                                //Вн.атр. 9 - колонка 13
  and 'Аналитика по счету 991 - Прочие доходы и расходы'==attrnam9.NAME
  and attrnam9.NREC == attrval9.CATTRNAM
  and coOborot      == attrval9.WTABLE
  and mtOBOROT.NREC   == attrval9.CREC
  and attrval9.vcomp== spkau9.nrec
!
  and mtoborot.tidkgal  == katdoc.tidkgal        //Отбор названия документа - колонка 2
  and mtoborot.csoprhoz == soprhoz.nrec         //Отбор для получения номера и даты документа - колонка 2
))
//  and '001001' = spkauFF.code //or  spkauFF.code='001003'  )      //Входимость в налогооблагаемую базу

  //      and month(oborot.dataot) < month(oborot.datob)
order by mtoborot.datob, mtoborot.csoprdoc
;
function AddSpKau(str1, str2: string): string;
{
  Result := if(trim(str1) != '' or trim(str2) != '', str1 + ' ' + str2 + '\','');
}
procedure PrintReport;
var
  CurIndex
 ,NPP, i: word;
  Sum :double;
  numCol: word;
  OrgName, OrgInn: string;
  SchetK: string;
  KatStroyNrec: tNrec;
  Summ1, Summ21
 ,XX, Summ01
 ,Summ0899all, Summ0899
 ,Summ3, Summ4
 ,Summ22, Summ2
 ,Summ8a, gr9new, gr9
 ,itogo, itogo5
 ,itogo6, itogo7
 ,itogo8a, itogoNalStoim
 ,itogo9, itogo9new : double;
{
  numCol := 14;

  iNalFunc.GetOrgInfo(OrgName, OrgInn);
  xlCreateExcel('report.xls',true);
  xlCreateMatrix(5000, numCol);

  xlSetColumnWidth(25,1,2,1,2);
  xlSetColumnWidth(25,1,4,1,4);
  xlSetColumnWidth(11,1,3,1,3);
  xlSetColumnWidth(13,1,7,1,10);
  xlSetColumnWidth(13,1,14,1,14);
  xlSetColumnWidth(25,1,13,1,13);
 // xlSetColumnWidth(20,1,2,1,2);
 // xlSetColumnWidth(25,1,3,1,3);
 // xlSetColumnWidth(10,1,4,1,8);

  CurIndex:=1;

  xlAlignCellsEx(3,2,CurIndex,1,CurIndex,numCol);
  xlSetFontStyle(1,CurIndex,1,CurIndex,numCol);
  xlSTWriteToMatrix(CurIndex,1,'ВДР 3.2');
  CurIndex ++;
  xlSetFontStyle(1,CurIndex,1,CurIndex + 3,numCol);
  xlSetFontSize(8, CurIndex, 1, CurIndex + 3, 1);
  xlSTWriteToMatrix(CurIndex,1,'Наименование организации-налогоплательщика: '+ OrgName);
  CurIndex ++;
  xlSTWriteToMatrix(CurIndex, 1,'ИНН налогоплательщика: ' + OrgInn);
  CurIndex ++;
  xlSTWriteToMatrix(CurIndex,1,'Дата составления: ' + dateToStr(Cur_Date,'DD Mon YYYY г.'));
  CurIndex ++;


  xlMergeCells(CurIndex, 1, CurIndex, numCol);
  xlSetFontStyle(1, CurIndex, 1, CurIndex + 4, numCol);
  xlAlignCellsEx(3, 2, CurIndex, 1, CurIndex + 4, numCol);
  xlSetFontSize(12, CurIndex, 1, CurIndex + 3, 1);
  xlSTWriteToMatrix(CurIndex,1,'Регистр № ВДР 3.2 "Расходы прошлых лет, выявленные в отчетном периоде"');
  CurIndex += 2;

  xlMergeCells(CurIndex,1,CurIndex, numCol);
  xlSetFontStyle(1,CurIndex,1,CurIndex,numCol);
  //xlAlignCellsEx(2,2,CurIndex,1,CurIndex, numCol);
  //xlSetFontSize(12,1,1,1,1);
  xlSTWriteToMatrix(CurIndex, 1, 'за период с '+dateToStr(dFrom,'DD/MM/YYYY')+' по '+dateToStr(dTo,'DD/MM/YYYY'));
  CurIndex ++;
  xlMergeCells(CurIndex,1,CurIndex, numCol);
  xlSetFontStyle(1,CurIndex,1,CurIndex,numCol);
  xlSTWriteToMatrix(CurIndex, 1, 'отчетный (налоговый) период');
  CurIndex ++;

  xlAlignCellsEx(3,2,CurIndex,1,CurIndex,numCol);
  xlSetFontStyle(1,CurIndex,1,CurIndex,numCol);
  xlSTWriteToMatrix(CurIndex,1,'№ п/п');
  xlSTWriteToMatrix(CurIndex,2,'Документ - основание');
  xlSTWriteToMatrix(CurIndex,3,'Дата отражения операции');
  xlSTWriteToMatrix(CurIndex,4,'Содержание операции');
  xlSTWriteToMatrix(CurIndex,5,'Дебет счета');
  xlSTWriteToMatrix(CurIndex,6,'Кредит счета');
  xlSTWriteToMatrix(CurIndex,7,'Сумма выявленного расхода в бухгалетрском учете');
  xlSTWriteToMatrix(CurIndex,8,'Дата, по которой должен был быть отражен расход');
  xlSTWriteToMatrix(CurIndex,9,'Счет БУ, на котором должна была быть отражена сумма выявленного расхода');
  xlSTWriteToMatrix(CurIndex,10,'Коды и наименования позиций справочников, по которым должна была быть отражена сумма выявленного расхода');
  xlSTWriteToMatrix(CurIndex,11,'Дебет счета налогового учета');
  xlSTWriteToMatrix(CurIndex,12,'Кредит счета налогового учета');
  xlSTWriteToMatrix(CurIndex,13,'Аналитика по счетам 968, 991');
  xlSTWriteToMatrix(CurIndex,14,'Сумма записи по счетам НУ');
  CurIndex++;

  xlAlignCellsEx(3,2,CurIndex,1,CurIndex,numCol);
   for(i := 0; i <= numCol; i++)
    xlSTWriteToMatrix(CurIndex, i, string(i));

  CurIndex++;

  Npp:=1;

  StartNewVisual(vtNumericVisual, vfTimer + vfBreak + vfConfirm, 'Формирование отчета', 0);
   if getfirst spkauF = tsok  {}
 //  and ('001001' = spkauFF.code or '001003' = spkauFF.code )     //Входимость в налогооблагаемую базу
    if getfirst spkauFF where (('20054' == spkauFF.KodGrKau and '001001' == spkauFF.code)) = tsOk
      sp1 :=  spkauFF.Nrec;

   if getfirst spkauFF where (('20054' == spkauFF.KodGrKau and '001003' == spkauFF.code)) = tsOk
      sp2 :=  spkauFF.Nrec;

 // _loop PodrFilter
//  {
   //  mtSetTableOrder(#mtoborot, mtoborot.datob + mtoborot.csoprdoc);
    _loop oborot
    {
     mtoborot.buffer := type$mtoborot(oborot.buffer);
     insert current mtoborot;
    }

    _loop mtoborot

 //   and date(01,01,1900) <<= oborot.dataot(NoIndex)
//   /and (year(oborot.dataot) < year(oborot.datob))   ))
    {

      if not NextVisual
        break;
      if (mtoborot.dataot > mtoborot.datob)
        continue;
      if not iNalFunc.CheckOborotCO(mtoborot.KodSpo)
        continue;
      if (GetFirst katdoc = tsOk){}
      if (GetFirst soprhoz = tsOk){}
//      if (GetFirst spkaua = tsOk){}
//      if (GetFirst spkaualt = tsOk){}
//      if (GetFirst buhschetnd = tsOk){}
//      if (GetFirst buhschetnk = tsOk){}
//      if (GetFirst spkau1 = tsOk){}
//      if (GetFirst spkau2 = tsOk){}
//      if (GetFirst spkau3 = tsOk){}
//      if (GetFirst spkau4 = tsOk){}
//      if (GetFirst spkau5 = tsOk){}
//      if (GetFirst spkau6 = tsOk){}
//      if (GetFirst spkau7 = tsOk){}
//      if (GetFirst spkau8 = tsOk){}
//      if (GetFirst spkau9 = tsOk){}
      xlSTWriteToMatrix(CurIndex, 1, Npp);
      xlSTWriteToMatrix(CurIndex, 2, katdoc.name +' № ' + soprhoz.nodoc +' от ' + DateToStr(soprhoz.datob,'DD/MM/YYYY'));
      iNalFunc.WriteDate(CurIndex, 3, mtoborot.datob);
      xlSTWriteToMatrix(CurIndex, 4, mtoborot.sodpr);
      xlSTWriteToMatrix(CurIndex, 5, if(trim(mtoborot.subossch) != '', mtoborot.dbscheto + '.' + mtoborot.subossch, mtoborot.dbscheto));
      xlSTWriteToMatrix(CurIndex, 6, if(trim(mtoborot.subschk) != '', mtoborot.krschetk + '.' + mtoborot.subschk, mtoborot.krschetk));
      iNalFunc.WriteSum(CurIndex, 7, mtoborot.sumob);
      iNalFunc.WriteDate(CurIndex, 8, mtoborot.dataot);
      xlSTWriteToMatrix(CurIndex, 9, if(GetFirst buhschet = tsOk, buhschet.code,''));
#declare sp(num)
 if(getfirst spkau#num = tsOk, AddSpKau(spkau#num.code, spkau#num.name),'')
#end
      xlSTWriteToMatrix(CurIndex, 10, #sp(a) + #sp(alt));
      xlSTWriteToMatrix(CurIndex, 11, if(GetFirst buhschetnd = tsOk,buhschetnd.code,''));
      xlSTWriteToMatrix(CurIndex, 12, if(GetFirst buhschetnk = tsOk, buhschetnk.code, ''));
      xlSTWriteToMatrix(CurIndex, 13, #sp(1) + #sp(2) + #sp(3) + #sp(4) + #sp(5) + #sp(6) + #sp(7) + #sp(8) + #sp(9));
      iNalFunc.WriteSum(CurIndex, 14, mtoborot.sumob);
      itogo += mtoborot.sumob;
      Npp++;
      CurIndex++;
    }
//  }
  xlSetFontStyle(1,CurIndex, 1, CurIndex, numCol);
  xlMergeCells(CurIndex, 1, CurIndex, 2);
  xlSTWriteToMatrix(CurIndex, 1, 'ИТОГО:');

  xlMergeCells(CurIndex,6,CurIndex,7);
  iNalFunc.WriteSum(CurIndex, 6, itogo);//DoubleToStr(itogo4, '[|-]366 666 666 666,88'));

  xlMergeCells(CurIndex, 13, CurIndex, 14);
  iNalFunc.WriteSum(CurIndex, 13, itogo);//DoubleToStr(itogo4, '[|-]366 666 666 666,88'));

  xlWrapText(9,1,CurIndex,numCol);
  xlFrameCells(1 or 2 or 4 or 8 or 16 or 32, 3,0,0,9,1,CurIndex,numCol);
  CurIndex += 2;
  xlMergeCells(CurIndex,1,CurIndex,numCol);
  xlAlignCellsEx(2,2,CurIndex,1,CurIndex,numCol);
  xlSTWriteToMatrix(CurIndex,1,'Составил_________________________/_______________________');
  CurIndex ++;

  xlMergeCells(CurIndex,1,CurIndex,numCol);
  xlAlignCellsEx(2,2,CurIndex,1,CurIndex,numCol);
  xlSTWriteToMatrix(CurIndex,1,'                     (должность,подпись)              Фамилия, И.О.  ');
  CurIndex++;

  xlWriteMatrixToExcel(1,1);
  xlFreeMatrix;
  xlKillExcel;
  StopVisual('',0);

}
function CreatePodrFilter: boolean;
var
  KodSpo: string;
{
  delete all PodrFilter;
  Result := false;
  _loop PickBuh where ((cgKau_FpCO == PickBuh.KodTable ))
  {
    if GetFirst FPCO where ((PickBuh.PickRec == FPCO.NRec)) = tsOK
      if ( SubStr(FPCO.LevelCode,1,1) <> 'Ф' )
      {
         message('Выбран не филиал');
         delete all PodrFilter;
         exit;
      }
    KodSpo := SubStr(PickBuh.PickKod,5, 2);
    _loop KatPodr where (KodSpo = SubStr(KatPodr.Kod,1,2))
    {
      ClearBuffer(#PodrFilter);
      PodrFilter.cPodr := KatPodr.NRec;
      PodrFilter.sName := KatPodr.Name;
      insert current PodrFilter;
      //update PickBuh set PickBuh.PickKod := SubStr(PickBuh.PickKod,5,2);
    }
  }
  Result := true;
}
procedure Run;
{
//  MtClear(#TabVeksl, mfNormal);
//  FillTable;
//  CreatePodrFilter;
  PrintReport;
}

HandleEvent
cmInit:
{
  delete all PickBuh;
  if iNalFunc.RunTuneNoMess(dFrom, dTo)
    Run;
}
end;



end.


















!-------------------------------------------------------------------------------
// подключение в меню отчетов
!-------------------------------------------------------------------------------

#include UserReport.vih

VipInterface UserReport_NalVdr_32 Implements IUserReport Licensed(Free);

Interface UserReport_NalVdr_32  ;
Create View;

//-------------------------------------------------------------------------------
// Запуск отчета на выполнение при выборе его из списка отчетов
procedure Run;
//var
//  RepParams: TVipReportParams;
begin
  RunInterface('UserRep_NalVdr_32');//, RepParams);;
end;

//-------------------------------------------------------------------------------
// Наименование отчета в списке
function GetReportName: String;
begin
  GetReportName := 'ВДР 3.2 Расходы прошлых лет, выявленные в отчетном периоде';
end;

!-------------------------------------------------------------------------------
// Наименования групп, в которые входит отчет
// Группа n+1 делается подчиненной группе n
// В данном случае будет иерархия:
// [+] Группа 1
//     [+] Группа 2
//         Отчет 1
function GetGroupName (Level : Word) : String;
begin
  GetGroupName := '';
  case Level of
    1 : GetGroupName := 'Налоговые регистры';
    2 : GetGroupName := 'ВДР';
  end;
end;

!-------------------------------------------------------------------------------
// Приоритет отчета - сортировка внутри группы выполняется сначала
// по приоритету, а затем по наименованию
function GetPriority : Integer;
begin
  GetPriority := 0;
end;

!-------------------------------------------------------------------------------
// ModuleID модулей, в которых будет виден отчет
// '*' - отчет будет виден в любом модуле
function VisibleInModule(Ind : Byte) : String;
begin
  VisibleInModule := '';
  case Ind of
    1 : VisibleInModule := '*';
  end;
end;

end. // interface
