table struct tmp_USERRIGHTS
( crecds :comp
 ,cgroup :comp
)
with index 
( tmp_USERRIGHTS01 = crecds
 ,tmp_USERRIGHTS02 = cgroup
) ;

table struct My_AvtoItog
( pa :word ,
  name :string[200] ,
  name2:string ,
  dmsu :array [1..10] of double
)
with index
( My_Avtoitog01 = pa+ name
) ;

table Struct My_Podrazdelenie
 (Katpodr_Nrec : Comp   , //Nrec Подразделения
  Katpodr_Name : String   //Наименование Подразделения
 )
with index ( Index1 = Katpodr_Name ,
               Index2 = Katpodr_Nrec );
               
table Struct My_Podr_Main
 (Katpodr_Nrec  : Comp   , //Nrec Подразделения
  Katpodr_cPodr :Comp    , //Nrec вышестоящего
  Katpodr_Name  : String   //Наименование Подразделения
 ) with index ( Index1 = Katpodr_Nrec );
               
table struct My_AZS
 ( Katorg_Name : String )
   with index ( Index1 = Katorg_Name );

table struct My_AZS1
 (KatPodr_Nrec : comp   ,  KatPodr_Name : String )
with index (  Index1 = KatPodr_Nrec );

table struct My_AZS2
 (Katorg_Name : String )
with index ( Index1 = Katorg_Name );

table struct My_AZS3
 (  Katorg_Name : String )
with index (  Index1 = Katorg_Name );

table struct My_AZS4
 ( Katorg_Name : String )
   with index (  Index1 = Katorg_Name );

Table struct My_TipTexVib
(
 TipTex_Nrec    : Comp   , //nrec ТС
 TipTex_NAME    : String , //наименование типа ТС
 TipTex_KODTIP  : String , //наименование кода ТС
 TipTex_CTIPTEX : Comp   , //ссылка на ТС
 TipTex_isLeaf  : Word
)
 with index ( index1 = TipTex_cTipTex , index2 = TipTex_nrec);
// для выборки подразделений 
Table Struct My_transpsred
 (
  Transp_nrec     : Comp   , //nrec Автомобиля
  Transp_nomer    : String , //Гос.Номер Автомобиля
  Transp_marka    : String , //Марка Автомобиля (Или Прицеп)
  Transp_tiptc    : Word   , //Тип Тс 0-Осн, 1-Приц, 3-Списано
  Transp_passport : String , //Номер Паспорта Техсредства
  Transp_postnrec : Comp   , //Подразделение- Баланса
  Transp_innum    : String , //Инвентарный Номер
  Transp_godv     : Date   , //Дата Выпуcка
  Transp_nomdvig  : String , //Учетный Номер Двигателя
  Transp_speedexi : Double , //Показания Спидометра
  Transp_zavnom   : String   //Заводской Номер
 )
   with index
 (
  Index1 = Transp_Nomer ,
  Index2 = Transp_nrec
 )
;
//
table struct My_Norma
 (
  NORMGSM_CMARKA    : Comp   , //ссылка на марку ТС CMARKA
  NORMGSM_CTRANSP   : Comp   , //Сссылка на ТС
  NORMGSM_LINNRM    : Double , //Основная Нормма PutLst.PROBEGV = 0 если внутри SYSTRAN.BEGSUMMER SYSTRAN.BEGWINTER
  NORMGSM_KOFFNGSM3 : Double , //Доп. норма      PutLst.PROBEGV = 0 если вне SYSTRAN.BEGSUMMER SYSTRAN.BEGWINTER
  NORMGSM_SPWRK     : Double , //PutLst.PROBEGV = 1
  NORMGSM_WRKDRV    : Double , //PutLst.PROBEGV = 2
  NORMGSM_DOP1      : Double , //Часы простоя с включенным двигателем
  NORMGSM_UNLOAD    : Double , //Часы автономного оборудования
  NORMGSM_SPOBR     : Double , //Часы спецоборудования
  NORMGSM_DATBEG    : Date   ,
  NORMGSM_DATEND    : Date
 )
   with index
 (
  Index1 = NORMGSM_CTRANSP ,
  Index2 = NORMGSM_CMARKA
 )
;

table Struct My_WorkTable
 (
//20080410
    PA :word ,
    sortname:string[200] ,
    PutGsm_TIPINFO    : word   , // 0 путевой
    Putlst_Nrec       : Comp   , //Nrec Пл
    PutLst_NPL        : string[20] ,
    PutGsm_TipGsm     : word   , //0 - 1 бак,1 - 2 и так далее
    PutGsm_NPP        : word   , // порядковый номер
    PutGsm_Nrec       : comp   , //nrec записи gsm
//20080410    
    Putlst_Exitdn     : date   , //Выезд День
    PUTLST_EXITCH     : time   , //Выезд время
    Putlst_Returndn   : Date   , //Возврат День
    Putlst_Probegv    : Double , // 0, 1, 2
    Putlst_Probegall  : Double , //Пробег
    Putlst_Timeengine : Double , //Часы Простоя С Включенным Двигателем Normgsm.Dop1
    Putlst_Timeheat   : Double , //Часы Автономного Оборудования Normgsm.Unload
    Putlst_Nomer      : String[150] , //Гос.Номер Ам
    Putlst_Timespec   : Double , //Мото-Часы
    Putlst_Gruztn     : Double , //Перевезено Тонн
    Putlst_Gruztnkm   : Double , //Тоннокилометры
    PuTlst_Timemove   : Double , //Время В Наряде
    PuTlst_Timestop   : Double , //Время В Наряде
    Putlst_Volume0    : Double , //Внутригаражный Простой
    Putlst_Dppokaz6   : Double , //Автомобиле Дни В Работе
    Putlst_Dppokaz7   : Double , //Автомобиле Дни В Ремонте
    Transp_nrec       : Comp   , //Nrec ТС
    Transp_CMARKA     : Comp   , //Nrec Марка Ам
    Transp_Marka      : String[100] , //Марка Ам
    KatOs_InNum       : String[100], //инв. номер
    Tiptex_nrec       : comp , // tiptex.nrec
    Tiptex_Name       : String[100] , //Тип Тс
    Katpodr_Nrec      : Comp   , //Nrec Подразделения
    Katpodr_Name      : String[100] , //Наименование Подразделения
    Katorg_Name       : String[100] , //Азс
    Toplivo_Nrec      : Comp   , //Nrec Топлива
    Toplivo_Name      : String[100] , //Наименование Топлива
    Toplivo_CKATMC    : Comp   , //Nrec ЦМ
    Vidgsm_Kodvid     : String[20] , //Код вида ГСМ
    VidGsm_name       : string[20], // наименования вида
    Putgsm_Ow         : Double , //Остаток В Баке
    PutGsm_Owv        : Double , //Остаток В Баке При Возвращении
    Putgsm_Vidt       : Double , //Выдано Топлива
    Putgsm_Normt      : Double , //Нормативный Расход
    Putgsm_Faktt      : Double , //Фактически Израсходовано
    Putgsm_Sdant      : Double , //Сдано
    Putgsm_Zaprdn     : Date   , //День Заправки
    Putgsm_Zaprch     : Time   , //Время Заправки
    Putgsm_dppokaz6   : Comp   , //Nrec Подразделения Ооо"Балтнефтепровод"
    Save_Drv_Fio      : String[50] , //ФИО основного водителя
    NORMGSM_LINNRM    : Double , //PutLst.PROBEGV = 0 если внутри SYSTRAN.BEGSUMMER SYSTRAN.BEGWINTER
    NORMGSM_KOFFNGSM3 : Double , //PutLst.PROBEGV = 0 если вне SYSTRAN.BEGSUMMER SYSTRAN.BEGWINTER
    NORMGSM_SPWRK     : Double , //PutLst.PROBEGV = 1
    NORMGSM_WRKDRV    : Double , //PutLst.PROBEGV = 2
    NORMGSM_DOP1      : Double , //Часы простоя с включенным двигателем
    NORMGSM_UNLOAD    : Double , //Часы автономного оборудования
    NORMGSM_SPOBR     : Double   //Часы спецоборудования
//ED 20080423 для подсчета остатка по другим бакам !
    ,Putgsm_Ow1: Double
    ,Putgsm_Ow2: Double
    ,Putgsm_Ow3: Double
    ,PutGsm_Owv1: Double
    ,PutGsm_Owv2: Double
    ,PutGsm_Owv3: Double
    ,Putgsm_Vidt1       : Double , //Выдано Топлива
    Putgsm_Normt1      : Double , //Нормативный Расход
    Putgsm_Faktt1      : Double , //Фактически Израсходовано
    Putgsm_Sdant1      : Double , //Сдано
    Putgsm_Vidt2       : Double , //Выдано Топлива
    Putgsm_Normt2      : Double , //Нормативный Расход
    Putgsm_Faktt2      : Double , //Фактически Израсходовано
    Putgsm_Sdant2      : Double , //Сдано
    Putgsm_Vidt3       : Double , //Выдано Топлива
    Putgsm_Normt3      : Double , //Нормативный Расход
    Putgsm_Faktt3      : Double , //Фактически Израсходовано
    Putgsm_Sdant3      : Double  //Сдано
    ,Putgsm_OwPr :word  // признак что бак обнаружен
//ED 20080423
   ,PUTLST_PROBEGGR :double // пробег с грузом
   ,Timespec_kol : double   // число случаев работы по моточасам
   ,Timeheat_kol : double   // число случаев работы автономного оборудования
   ,PUTLST_SPEEDEXI:double //спидометр пробег на начало
   ,PUTLST_SPEEDRET:double //спидометр пробег на возвращение
   ,PUTLST_NPVIRVAL:double // счетчик на начало
   ,PUTLST_FKVIRVAL:double// счетчик на конец
   ,AZS_NM :string[20]
   ,AZS1 :double
   ,AZS2 :double
   ,AZS3 :double
   ,AZS4 :double
   ,Toplivo_CVidgsm:comp    //Vidgsm
   ,PutGsm_CGSMALG:comp // ссылка на алгоритм
 )
   with index
 (
  Index1 = PA+Transp_Marka+Putlst_Nomer+Putgsm_Zaprch
           +Putgsm_Zaprdn+Katorg_Name+Toplivo_Name  ,
//20080410  Index2 = Putlst_Nrec                              ,
  Index2 = PA+Putlst_Nrec+PutGsm_TipGsm+PutGsm_NPP+Putgsm_Zaprdn + Putgsm_Zaprch+ PutGsm_Nrec,
  Index3 = PA+Putgsm_Zaprdn + Putgsm_Zaprch ,
  index4 = pa +sortname ,
  Index5 = pa +transp_nrec + sortname ,
  Index6 = pa +PutLst_nomer,
  Index7 = PA +Putlst_Exitdn+Putlst_ExitCh+ Putgsm_Zaprdn + Putgsm_Zaprch 
 )
;


table struct My_WorkGsm
 (
  pa:word,
  sortname:string[200],
  PutLst_Nrec     :comp   , //1 nrec ПЛ
  PUTLST_NPL      :String , //2 Номер Путевого Листа
  TRANSP_MARKA    :String[50] , //3 Марка АМ
  KATPODR_NAME    :String , //4 Наименование Подразделения
  PutGsm_Rashod     :Double , //5 выдано топлива
  Zarpl_Vidt      :Double , //6 выдано топлива по ЛЗК
  Putgsm_PROBEGALL:double , //7 пробег всего
  Putgsm_Zaprdn   :date   , //8 Дата заправки
  Toplivo_Name    :String , //9 Наименование Топлива
  KatMc_BARKOD    :String , //10 Код Топлива
  PUTLST_NOMER    :String[150] , //11 Гос.Номер АМ
  Save_Drv_Fio    :String , //12 ФИО Водителя
  Save_Drv_Tabn   :String ,  //13 ТН Водителя
  INV_NOM         :STring , //14 инв.номер
  toplivo_CVIDGSM :comp , //15 вид гсм
  toplivo_nrec    :comp , //16
  transp_nrec   :comp   ,  //17
  TOPLIVO_NMED  :string[20], //18
  PutGsm_VidT   :double  , //19
  Kolonka       :word ,//20
  LIMZAPH_NUM  :string[20], //21 
  LIMZAPH_NOMDOVE :string[50], //22 номер доверености = номер колонки
  PUTGSM_ZAPRCH   :time , //23 время заправки
  LIMZAPH_CORG : comp,  // 24
  LIMZAPH_TYPE : word  ,//25 тип -0 собственная, 1 внешныы
  TOPLIVO_KODGSM:string[20], //26 - код топливо
  LIMZAPL_TEMP4:double, //27 счетчик на начало заправки
  LIMZAPL_NREC :comp//28 LIMZAPL.NREC
 )
 (
  Index1 = pa+KATPODR_NAME+PUTLST_Nrec   ,
  Index2 = pa+PUTLST_nrec,
  Index3 = pa+PUTLST_NOMER + TRANSP_MARKA,
  Index4 = pa+sortname ,
  Index5 = pa+PUTLST_NOMER + TRANSP_MARKA + putlst_nrec
 ,index6 = pa +transp_nrec
 ,Index7 = pa+KATPODR_NAME+TOPLIVO_KODGSM +Kolonka+Putgsm_Zaprdn+PUTGSM_ZAPRCH+LIMZAPL_TEMP4
 )
;


table struct My_Toplivo
 (
  PUTLST_NOMER :string[150] ,
  TRANSP_MARKA :string[50] ,
  Column       : integer ,
  PutGsm_Rashod  : Double  , //выдано топлива
  Toplivo_Name : String[100]  , //Наименование Топлива
  Norma :double , 
  Vid   :double ,
  Rasx  :double ,
  TOPLIVO_NMED :string[20]  ,
  TOPLIVO_KOD  :string[100],  
  toplivo_CVIDGSM :comp , //15 вид гсм
  toplivo_nrec    :comp , //16
  Toplivo_NameAlg : String
 )
   with index
 (
  My_Toplivo_Index1 = PUTLST_NOMER+TRANSP_MARKA+Toplivo_Name+Column ,
  My_Toplivo_Index2 = Toplivo_name
 )
;

table struct My_Toplivo_PL
 (
  PUTLST_nrec  : Comp   , //Nrec PutLst
  PUTLST_NOMER :string[150] ,
  TRANSP_MARKA :string[50] ,
  Column       : integer ,
  PutGsm_Rashod  : Double  , //выдано топлива
  Toplivo_Name : String[100]  , //Наименование Топлива
  Norma :double , 
  Vid   :double ,
  Rasx  :double ,
  TOPLIVO_NMED :string[20]  ,
  TOPLIVO_KOD  :string[100],  
  toplivo_CVIDGSM :comp , //15 вид гсм
  toplivo_nrec    :comp  //16
 )
   with index
 (
  My_Toplivo_Index1 = PUTLST_NREC+Toplivo_Name+Column ,
  My_Toplivo_Index2 = Toplivo_name
 )
;


// для сканирования по машинам
table struct My_transp_spis 
(   sortname :string[200],
    Transp_Nomer :string [20],
    Transp_nrec       : Comp   , //Nrec ТС
    Transp_CMARKA     : Comp   , //Nrec Марка Ам
    Transp_Marka      : String[100] , //Марка Ам
    KatOs_InNum       : String[100] , //инв. номер
    Tiptex_nrec       : comp , // tiptex.nrec
    Tiptex_ctiptex    : comp ,
    Tiptex_Name       : String[100] , //Тип Тс
    Katpodr_Nrec      : Comp   , //Nrec Подразделения
    Katpodr_Name      : String , //Наименование Подразделения
    godv :date ,    // год выпуска
    datok :Date ,  //дата поступления
    datv :date  ,  // дата выбытия
    toplivo_name :string[80] ,
    vidgsm_name  :string[40] ,
    toplivo_name1 :string[80] ,
    vidgsm_name1  :string[40] ,
    toplivo_name2 :string[80] ,
    vidgsm_name2  :string[40] ,
    KLASSDRIVE_NAME :string[40]     //transp.KLASSIF5 == morale.nrec 'M_TRANSP::KAR_WPS.WIN_ANALITIC.SWIN_ANALITIC.KLASSDRIVE.NAME - аналитический разрез, тип двигателя
)
with index
(  index1 = sortname + transp_cmarka + transp_nomer
  ,index2 = sortname +  transp_nomer
  ,index3 = Transp_nrec
  ,index4 = Tiptex_ctiptex
) ;  

table struct My_transp_zatr
(   katorg_code:string[20],
    katorg_name:string[150],
    katzak_nrec:comp,
    putlst_npl:string[20],
    katusl_name:string[80],
    katzak_exitdn:date,
    kndriver_name:string[50],
    kndriver_tabn:longint,
    putlst_probegall:double,
    putlst_probeggr:double,
    PUTLST_GRUZTNKM:double, 
    spzakaz_tarif:double,
    putlst_timespec:double,
    spzakaz_kol:double,
    spzakaz_sumusl:double
)
with index
( index1 = katorg_name ) ;

table struct My_Card_GSM
(   autodoc_nrec:comp,
    autodoc_nom_doc:string[30],
    putlst_npl:string[20],
    putgsm_nrec:comp,
    putgsm_vidt:double,
    toplivo_name:string[80],
    toplivo_kodgsm:string[20],
    putgsm_pricegsm:double,
    putgsm_pricetop:double,
    katpodr_name:string,
    katpodr_kod:string[20],
    katpodr_nrec:comp   
)
with index
( index1 = autodoc_nom_doc+katpodr_name,
  index2 = katpodr_name );

table struct My_pricep
(   putlst_nrec:comp,
    transp_nrec:comp,
    pricep_nrec:comp,
    tiptex_nrec:comp,
    pricep_nomer:string,
    pricep_marka:string,
    pricep_tip:string,
    pricep_probeg:double,
    pricep_GRUZTNPRI:double,
    pricep_GRUZTNKMPRI:double,
    katpodr_nrec:comp,
    pricep_datok:date,
    pricep_datv:date
)
with index
( index1 = pricep_nrec, 
  index2 = tiptex_nrec+pricep_nrec 
);