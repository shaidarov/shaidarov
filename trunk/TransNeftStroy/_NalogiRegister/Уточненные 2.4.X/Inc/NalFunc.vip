#include NalFunc.vih
#include GetKau.vih            // Обьектный интерфес выбора КАУ
Interface NalFunc_For_24XU;
table Struct PodrFilter
(
  cPodr:tNrec,
  sName: string
)
with index(
  PF01=cPodr
);

var
  OrgName, INN:string;
  dFrom
 ,dTo: date;

 Filter_CO: tNRec;
 mFilter_CO: word;
 Filter_tidk: word;
 Filter_OS: tNrec;
 mFilter_OS: word;
 VidDecl : word;
 DataProv : date;

#include GetKau.var     // Переменная типа "Интерфеса выбора КАУ"
#include PickBuh.var

const
  MultiStr           = 'множественный выбор';
  numCol=11;
end;


#declare MultiKauShow(mKau, wKau, cKau)
  if (#mKau = 0, '',
    if (#mKau = 1, if (GetAnyKAU(cgAkNoDef, #wKau, #cKau),
      GivenAnName(1), ''),
      MultiStr + ' (' + string(#mKau) + ')'))
#end


create view
as select
  #MultiKauShow(mFilter_CO, cgKau_FpCO, Filter_CO) (FieldName = DlgCO)
  ,#MultiKauShow(mFilter_OS, Filter_tidk, Filter_OS) (FieldName = DlgOS)
  ,if(Filter_tidk = cgKau_OS, 'Основные средства',
     if(Filter_tidk = cgKau_NMA, 'Нематериальные активы','')) (FieldName = DlgKatOSName)
  ,PickBuh.*
  ,KatPodr.*
  ,Refin.*
  ,KatOrg.*
from
  PodrFilter
  ,KatOS
  ,SpKatOS
  ,PickBuh
  ,KatPodr
  ,Refin
  ,KatOrg
where
((
  Filter_tidk == KatOS.Tidk
  and KatOS.Nrec==SpKatOS.cKatOS
))
bounds ByKatOSCO = Filter_CO == KatOS.cCO(NoIndex)
//where
//((

//))
;
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
function GetOrgInfo(var OrgName: string; var INN: string): boolean;
{
  OrgName:='';
  INN:='';

  if (GetFirst  KatOrg where ((coGetTune('MYORG')==KatOrg.Nrec)) = tsOk)
  {
    OrgName:=KatOrg.Name;
    INN:=KatOrg.Unn;
  }
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
function MyShowKau(wKau: word; cKau: tNRec): string;
{
  Result := if(GetAnyKAU(cgAkNoDef, wKau, cKau), GivenAnName(1),'');
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
function MyShowKauCode(wKau: word; cKau: tNRec): string;
{
  Result := if(GetAnyKAU(cgAkNoDef, wKau, cKau), GivenAnName(cgAnCode),'');
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
function GetBackColor(FieldNum: integer): integer;
{
  Result := 0;
  case FieldNum of
    #dFrom  : Result := if (longint(dFrom ) = 0, ColorNeed, 0);
    #dTo    : Result := if (longint(dTo) = 0, ColorNeed, 0);
  end; // case
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
window wTuneKatOS doAccept,cyan;
show at (1,1,90,24);
 browse brKatOS ;
 table KATOS;
     fields
       KATOS.INNUM 'инв №' ('инв №') : [15], Protect;
       KATOS.NAMEOS 'наименование' ('наименование') : [35], Protect;
       KATOS.DATEK 'дата' ('дата') : [10], Protect;
       SPKATOS.STOIM 'стоимость' ('стоимость') : [20, '[|-]366`666`666`666`666.88'], Protect;
  end;

  HandleEvent
    cmInit:
      DisableCommand(cmValue1);
    cmDefault:
       Filter_OS := KatOS.Nrec;
    cmHotkeys:
      PutHotCommand(RunMenu('katos_HotKeys'));
    cmFilterSave:
    {
      if iGetKau.GetCodeKau(cgiPick, cgKau_FpCO, Filter_CO) <> 0
      {
        set Filter_CO := Filter_CO;
        if (not BoundActive(tbByKatOSCO))
        {
          AddBounds(tbByKatOSCO);
          EnableCommand(cmValue1);
        }
      }
      ReReadRecord;
    }
    cmValue1:
    {
      if (BoundActive(tbByKatOSCO))
      {
        SubBounds(tbByKatOSCO);
        DisableCommand(cmValue1);
      }
      ReReadRecord;
    }
  end;
/*screen scTune ('',,sci13EnEsc)
fields
  DlgKatOSName: Skip;
  DlgOS : Protect, PickButton;
buttons
  cmOk,Default,,'Обработка данных',hcAllBOk,sci1Esc;
  cmCancel,,,'Отмена',hcAllBCancel,sci1Esc;
<<
 .@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

          <.Сформировать.> <.   Отмена   .>
>>
end;                       ii'/ 666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
HandleEvent
cmInit:
{
  dFrom := date(1, 01, year(cur_date));
  dTo := cur_date;
}
cmOk:
  PutCommand(cmDefault);
cmPick:
{
  case CurField of
    #DlgCO:
    {
      mFilter_CO := iGetKau.GetCodeKau(cgiPickMult or if (mFilter_CO>0, cgiNotClear, 0), cgKau_FpCO, Filter_CO);
    }
    #DlgOS:
    {
   //   mFilter_OS := iGetKau.GetCodeKau(cgiPickMult or if (mFilter_OS>0, cgiNotClear, 0), Filter_tidk, Filter_OS);
      mFilter_OS := iGetKau.GetCodeKau(cgiPick, Filter_tidk, Filter_OS);

    }
  end;
  RereadRecord;
}
end;          */

end; //window


!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
window wTune doAccept ;
show at(,,65,10);
!-------------------------------------------------------------------------------
screen scTune ('',,sci13EnEsc)
fields
  dFrom    : ['DD/MM/YYYY'], NoProtect;
  dTo      : ['DD/MM/YYYY'], NoProtect;
  DlgCO    : Protect, PickButton;
  VidDecl  ('Вид декларации') :NoProtect;
  DataProv : ['DD/MM/YYYY'], NoProtect;
buttons
  cmOk,Default,,'Обработка данных',hcAllBOk,sci1Esc;
  cmCancel,,,'Отмена',hcAllBCancel,sci1Esc;
<<
`За период`        с  .@@@@@@@@@@ `по`.@@@@@@@@@@
`Центр ответственности`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

   (.) Для первичной декларации`
   (.) Для уточненной декларации`
    `Дата с которой считать проводки уточняющими` .@@@@@@@@@

          <.Сформировать.> <.   Отмена   .>
>>
end;
HandleEvent
cmInit:
{
  dFrom := date(1, 01, year(cur_date));
  dTo := cur_date;
  if VidDecl=0
    ClearFieldState(#DataProv, sfVisible);
  else
    SetFieldState(#DataProv, sfVisible);
}
cmOk:
  if VidDecl<>0
  {
    if DataProv = Date(0,0,0)
    {
       message('Необходимо указать дату с которой считать проводки уточняющими!');
    }
    else
      PutCommand(cmDefault);
  }
  else
    PutCommand(cmDefault);
cmPick:
{
  case CurField of
    #DlgCO:
    {
      mFilter_CO := iGetKau.GetCodeKau(cgiPickMult or if (mFilter_CO>0, cgiNotClear, 0), cgKau_FpCO, Filter_CO);
    }
  end;
  RereadRecord;
}
end;

end; //window
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
procedure CreatePodrFilter;
var
  KodSpo: string;
{
  delete all PodrFilter;
  _loop PickBuh where ((cgKau_FpCO == PickBuh.KodTable ))
  {
    KodSpo := SubStr(PickBuh.PickKod,5, 2);
    _loop KatPodr where (KodSpo = SubStr(KatPodr.Kod,1,2))
    {
      ClearBuffer(#PodrFilter);
      PodrFilter.cPodr := KatPodr.NRec;
      PodrFilter.sName := KatPodr.Name;
      insert current PodrFilter;
      //update PickBuh set PickBuh.PickKod := SubStr(PickBuh.PickKod,5,2);
    }
  }
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
function RunTune(var dBeg: date; var dEnd: date; var VidDecl1 : word; var DataProv1 : date): boolean;
{
  if RunWindowModal(wTune)  <> cmCancel
  {
    CreatePodrFilter;
    dBeg     := dFrom;
    dEnd     := dTo;
    VidDecl1  := VidDecl;
    DataProv1 := DataProv;
    Result :=true;
  }
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
function RunTuneWKatOS(tidk: word): tNrec;
{
  Result := 0;
  Filter_tidk := tidk;
  if RunWindowModal(wTuneKatOS) <> cmCancel
    Result := Filter_OS;
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
procedure WriteDate(Row, Column: word; d: date);
{
  if (d != date(0,0,0))
    xlSTWriteToMatrix(Row, Column, ' '+DateToStr(d,'DD/MM/YYYY'));
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
procedure WriteNum(Row, Column: word; sum: double);
{
  xlSetNumberFormat('# ##0', Row, Column, Row, Column);
  xlSTWriteToMatrix(Row, Column, sum);
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
procedure WriteSum(Row, Column: word; sum: double);
{
  xlSetNumberFormat('# ##0,00', Row, Column, Row, Column);
  xlSTWriteToMatrix(Row, Column, sum);
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
function GetSRefin(dRefin: date):double;
{
  Result := 0;
  if (GetFirst Refin where ((dRefin >>= Refin.DATREC)) = tsOk)
    Result := Refin.Proc;
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
function GetDays(d1, d2: date): date;
{
  Result := 0;
  if( (d1 != date(0,0,0)) and (d2 != date(0,0,0)) )
    Result := CalcDaysBetweenDates(d1, d2, FALSE);
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
function CheckOborotCO(KodSpo: tNRec): boolean;
{
  if (mFilter_CO > 0)
    Result := RecordExists PodrFilter where ((KodSpo == PodrFilter.cPodr)) = tsOk;
  else
    Result := true;
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
function CheckCO(CO: tNRec): boolean;
{
  if (mFilter_CO > 0)
    Result := iPickBuh.FoundInPickByRec(cgKau_FpCO, CO);
  else
    Result := true;
}
!-------------------------------------------------------------------------------------------------------------
!
!-------------------------------------------------------------------------------------------------------------
function CheckKatOs(cRec: tNRec): boolean;
{
  if (mFilter_OS > 0)
    Result := iPickBuh.FoundInPickByRec(Filter_tidk, cRec);
  else
    Result := true;
}

HandleEvent
cmCheckField:
{
  case curfield of
  #VidDecl:
  {
    if VidDecl=0
      ClearFieldState(#DataProv, sfVisible);
    else
      SetFieldState(#DataProv, sfVisible);
  }
  end;
}
end;
end.

katos_HotKeys Menu
{
- 'Установка ограничений по центру ответственности',cmFilterSave,'Установка ограничений по центру ответственности.',hcOsVFiltr,'Alt-B',kbAltB,sci1Esc;
- 'Снятие ограничений по центру ответственности',cmValue1,'Снятие ограничений по центру ответственности.',hcOsVFiltr,'Alt-B',kbAltB,sci1Esc;
}
