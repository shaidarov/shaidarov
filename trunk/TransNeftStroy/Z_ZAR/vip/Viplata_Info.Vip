/*
  использование в расчтеных листках для получения номеров платежных ведомостей/реестров
  Для поиска информации по плтежным ведомостям и реестрам по человеку
 ПИР 	180.5514 -  Информация по платежным документам в расчетных листках
 
 Чего то сделал. Но есть ограничения. 
1. Табельный номер должен быть уникальный
2. В спецификации реестров/ведомостей не осталось даты, точно указывающей на расчетный месяц. Поэтому беру за расчетный + 1
3. В расчетке должна быть отключена группировка по видам оплат
4. Если в одном и том же периоде будет несколько ведомстей по одному и тому же виду удержаний Ц то номера будут продублированы.
5. Если в принципе устроит могу сделать тоже в FastReport.


*/
#include Viplata_Info.Vih
Interface Viplata_InFo 'Получить информацию о выплатах заработной платы';
create view vViplata_InFo
var 
  wc_lschet : comp;
  w_dtb,
  w_dte     : date;

  w_vidud   : word;
  w_sumud,

  w_sumud1  : double
  w_viduds,

  w_viduds1 : word;
  wstr      : string;
  logfilenm : string;
  kl_ved    : boolean;
  kl_bank   : boolean;

  CurMonth  : word;
  CurYear   : integer;

as select lschet.nrec
from 
     LSCHET, SPPLVED  , SPPLBAN 
   , SBBAN , DOCPODOT , PLPOR
where
((  wc_lschet == lschet.nrec
and w_vidud == klvidud.vidudp
//and lschet.nrec == spplved.clsch
and wc_lschet ==  spplved.clsch
//and w_dtb     <<= spplved.LASTDATE(noindex)
//and w_dte     >>= spplved.LASTDATE(noindex)
and w_dtb     <<= spplved.Dform(noindex)
and w_dte     >>= spplved.Dform(noindex)
and w_sumud   <<= spplved.sumopl(noindex)
and w_sumud1  >>= spplved.sumopl(noindex)
//and w_viduds  <<= spplved.vidud(noindex)
//and w_viduds1 >>= spplved.vidud(noindex)
and spplved.cplatved == platved.nrec

//and lschet.nrec == spplban.clsch
and wc_lschet ==  spplban.clsch
//and w_viduds  <<= spplban.vidud(noindex)
//and w_viduds1 >>= spplban.vidud(noindex)
and w_dtb     <<= spplban.DFORM (noindex)
and w_dte     >>= spplban.DFORM (noindex)
//and w_dtb     <<= spplban.DATAN (noindex)
//and w_dte     >>= spplban.DATAN (noindex)

and w_sumud   <<= spplban.sumopl(noindex)
and w_sumud1  >>= spplban.sumopl(noindex)
and (spplban.vidud <> 110 and spplban.vidud <> 177 and spplban.vidud <> 179 and spplban.vidud <> 182
and spplban.vidud <> 183 and spplban.vidud <> 184)
and spplban.csbban == sbban.nrec

//==============
// найти привызку к платежке
//==============
    and  cgLink_ReesPlDoc == DOCPODOT.TIPDOC 
    and  sbban.nrec       == DOCPODOT.CVTDOC 
    and  DOCPODOT.CPRDOC == PLPOR.NREC
 

// Сальдо на начало месяца
and wc_lschet ==  PrMonth.clsch
and CurMonth  ==  PrMonth.MesN
and CurYear   ==  PrMonth.YearN

));   
Procedure mylog(const ww:string);
{// logstrtofile(logfilenm,ww)
}                       
Function GetNameVed:string;
{ if getfirst fastfirstrow platved =0 {}

  GetNameVed:=datetostr(platved.dform,'DD/MM/YY')
}
//=========================   
Function GetNameBank:string;
{ GetNameBank:=''
  if getfirst fastfirstrow sbban =0 {}
 // GetNameBank:=datetostr(SBBAN.DFORM,'DD/MM/YY')
    if getfirst fastfirstrow plpor =0 
     if PlPor.Datob<>0
      GetNameBank:=datetostr(PlPor.DATOB,'DD/MM/YY')
  
}
//=========================   
Function GetSaldoSum(wwc_lschet:comp; wmes: word; iyear: integer; var doSumma: double): string;
{
  doSumma        := 0;
  wc_lschet      := wwc_lschet;
  CurMonth       := wMes;
  CurYear        := iYear;
  GetSaldoSum    := '                ДОЛГ НА НАЧАЛО....';

  if getfirst fastfirstrow PrMonth = tsOk
  {
    if round(PrMonth.Dolg, 2) > 0
    {
      GetSaldoSum := '  ДОЛГ ЗА РАБОТНИКОМ НА НАЧАЛО....';
      doSumma := round(PrMonth.Dolg, 2);
    }
    if round(PrMonth.NoZar, 2) > 0
    {
      GetSaldoSum := 'ДОЛГ ЗА ПРЕДПРИЯТИЕМ НА НАЧАЛО....';
      doSumma := round(PrMonth.NoZar, 2);
    }

  }
}
//=========================   
Function GetViplataInfo(wwc_lschet: comp; ww_dt: date; ww_vidud: word; ww_sumud: double): string;
{
  GetViplataInfo := '';
  wc_lschet      := wwc_lschet;
  w_dtb          := date(1,month(ww_dt),year(ww_dt));
  w_dte          := date(last_day(ww_dt),month(ww_dt),year(ww_dt));

  w_vidud  := ww_vidud;
  w_sumud  := trunc(ww_sumud,0);
  w_sumud1 := w_sumud + 1;

  if getfirst fastfirstrow lschet <> tsOk
    exit;

  if w_vidud > 0
  {
    if getfirst fastfirstrow klvidud <> tsOk
    exit;

    if klvidud.VHVO3 = '+'
      exit;

    w_viduds  := klvidud.vidud;
    w_viduds1 := klvidud.vidud;
  }  

  mylog(string(lschet.tabn)+'/'+lschet.strtabn+'/'+datetostr(ww_dt,'DD-MM-YYYY')
    +'/'+string(ww_vidud)+'/'+string(ww_sumud,0,2)+'/'+klvidud.VHVO3);

  GetViplataInfo := 'плат.документ';
  wstr := '';

  if (w_vidud > 0 and klvidud.VHVO3 = '-') or (w_vidud = 0)
  {
    _loop fullcache spplved
    {
      //mylog('вед. ' + string(spplved.nrec))

      if getfirst fastfirstrow platved = tsOk
        wstr := wstr + if(trim(wstr) <> '', LPad('', 10), '') + GetNameVed;
    } //_loop fullcache spplved
  }
  // перечисление
  if (w_vidud > 0 and klvidud.VHVO3 = '0')
  {
    _loop fullcache spplban
    {
      //mylog('реестр ' + string(spplban.nrec));

      if getfirst fastfirstrow sbban = tsOk
        wstr := wstr + if(trim(wstr) <> '', LPad('', 10), '') + GetNameBank;
    } //_loop fullcache spplban
  }

  GetViplataInfo := wstr;
} //GetViplataInfo
//==============
//Получить первыую запись о выплатах
//==============
Function GetViplataFirst(wwc_lschet :comp;ww_dt :date) : string;
{
  kl_ved  := true;
  kl_bank := true
  w_dtb   := date(1,month(ww_dt),year(ww_dt))
  w_dte   := date(last_day(ww_dt),month(ww_dt),year(ww_dt))
  //message('Даты '+datetostr(w_dtb,'DD/MM/YYYY') + ' ' +datetostr(w_dte,'DD/MM/YYYY'));
  w_sumud :=0;
  w_sumud1:=99999999999;
  w_viduds:=0;
  w_viduds1:=10000;
  wc_lschet :=wwc_lschet;
  GetViplataFirst:=''
  if getfirst spplban<>0 
  { kl_bank:=false;
  }
  if getfirst spplved<>0
  { kl_ved:=false;
    if kl_bank
    { GetViplataFirst:=GetNameBank+' на сумму '+string(spplban.sumopl,0,2);
    }
  }
  else
  { GetViplataFirst:=GetNameVed+' на сумму '+string(spplved.sumopl,0,2);
  }
} //GetViplataFirst
//=================
Function GetViplataNext : string;
{ GetViplataNext:='';
  if kl_ved=false and kl_bank=false then exit;
  if kl_ved
  {
    if getnext spplved<>0
    {
      kl_ved:=false
      if kl_bank
      {
        GetViplataNext:=GetNameBank+' на сумму '+string(spplban.sumopl,0,2);
        exit;
      }
    }
    else
    {
      GetViplataNext:=GetNameVed+' на сумму '+string(spplved.sumopl,0,2);
      exit;
    }
  }

  if getnext spplban<>0
  {
    kl_bank:=false;
  }
  else
  {
     GetViplataNext:=GetNameBank+' на сумму '+string(spplban.sumopl,0,2);
  }
  
} //Function GetViplataNext : string;

//==============
HandleEvent
cmOnVipLoad:
{ logfilenm:=GetStringParameter('Files','OutputFilesDirectory',0)
        +'\!Viplata_info.log'
  if fileexist(logfilenm) then deletefile(logfilenm);
} //cmOnVipLoad:
end;
end.