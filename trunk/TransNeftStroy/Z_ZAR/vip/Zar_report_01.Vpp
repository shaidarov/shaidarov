//by ABSOLUTO
//=====================================
//Сводный отчет о начисленной заработной плате
//, dbo.toInt64(katsopr.f$corg) as k2
//=====================================
window wnReport01 'Отчет';
//--------------------------------------------------------------------------------
//-------------------------'Первая панель (группы)'-------------------------------

Tree trTmpTree01('Ctrl+P - Печать всего отчета, Alt+P - Печать с текущего уровня',, sci1EscTree);
//  Show at (,,, 10);
  Table TempDescr;

Fields

  TempDescr.Name    'Наименование'    ('Наименование',,)
                    : [50], Protect;
  TempDescr.Sum[1]  'Кол-во дней'    ('Явочные дни',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[2]  'Кол-во часов' ('Явочные дни',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[3]  'Сумма'    ( 'Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[11]  'Стр.взносы 1'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[12]  'Стр.взносы 2'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[13]  'Стр.взносы 3'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[14]  'Стр.взносы 4'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[15]  'Стр.взносы 5'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[16]  'Стр.взносы 6'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[17]  'Стр.взносы 7'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[18]  'Стр.взносы 8'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[19]  'Стр.взносы 9'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[20]  'Стр.взносы 10'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[21]  'Итого Стр.взносы'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[31]  'База.взносы 1'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[32]  'База.взносы 2'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[33]  'База.взносы 3'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[34]  'База.взносы 4'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[35]  'База.взносы 5'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[36]  'База.взносы 6'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[37]  'База.взносы 7'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[38]  'База.взносы 8'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[39]  'База.взносы 9'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
  TempDescr.Sum[40]  'База.взносы 10'   ('Сумма',,)
                    : [16.2,'\2p[|-]366`666`666`666.88'], Protect;
end;
HandleEvent
cmDone:
{ if message('Закрыть окно с отчетом?',YESNO)<>cmYes
  { abort;
  }
}
cmInit:
{ var jj :word;
  for(jj:=11;jj<=20;jj++)
  { cfsSetProp('c_TRTMPTREE01_TEMPDESCR.SUM['+string(jj)+']_Стр.взносы_'+string(jj-10),'Visible',(jj<=kol_nalog+10) and ((UserDeskRep.ResWord[40] and 32)>0)); 
    cfsSetProp('c_TRTMPTREE01_TEMPDESCR.SUM['+string(jj+20)+']_База.взносы_'+string(jj-10),'Visible',(jj<=kol_nalog+10) and ((UserDeskRep.ResWord[40] and 512)>0)); 
    if jj-10<=kol_nalog
    { w_vidper:=dm_nalog[jj-10]
      if getfirst perech1=0
      {  cfsSetProp('c_TRTMPTREE01_TEMPDESCR.SUM['+string(jj)+']_Стр.взносы_'+string(jj-10),'Title',string(jj-10)+','+perech1.nameper); 
         cfsSetProp('c_TRTMPTREE01_TEMPDESCR.SUM['+string(jj+20)+']_База.взносы_'+string(jj-10),'Title','База '+string(jj-10)+','+perech1.nameper); 
      }
    }
  } //for(jj:=11;jj<=20;jj++)
  cfsSetProp('c_TRTMPTREE01_TEMPDESCR.SUM[21]_Итого_Стр.взносы','Visible',(UserDeskRep.ResWord[40] and 32)>0); 

}//cmInit:
cmHotKeys:
{ PutCommand(RunMenu('mnFZ21_Print')) ;
}
cmValue2: PrintDoc_01(2);
cmPrintDoc: 
{ PrintDoc_01(0);
}
cmPlansNo:
{ PrintDoc_01(1);
}
end; //HandleEvent
end; //window wnReport  'Отчет;
//==================================
#declare SBOR_VAR
VAR
  WCKAU:COMP;
  wtbl :word;
  kl_vihod : boolean;
  i,j,k : word;
  ww_analitik_lev:word;
  ww_str1 :string;
#END  
#declare SBOR_SUM(tablename,wtype,wvidopl,summa,koldn,chasf,sisopl)
  inc(chet)
  if (chet mod 100)=0 
    if not nextvisual then exit;
  w_lschet:=#tablename.clsch;
  w_person:=#tablename.tperson;
  // надо по режиму
  if (userDeskRep.ResWord[1] and 8)>0  
  { if getfirst fastfirstrow lschet=0 {}
    if not Chk_Filter(#tablename.cexoz,#tablename.kateg,#tablename.cappoint,if(getfirst fastfirstrow lstab=0,lstab.rejim,lschet.rejim) ) then continue;
  }
  else
  { if not Chk_Filter(#tablename.cexoz,#tablename.kateg,#tablename.cappoint,0) then continue;
  }
  // обрезать по входимости в проводки
  if (USERDESKREP.RESWORD[40] and 256)>0
  { if #wtype=1
    { if(getfirst fastfirstrow klvidopl1 where (( #tablename.#wvidopl == klvidopl1.vidopl ))=0)
      { if klvidopl1.vhv<>'+' then continue;
      }
    }
  }
//  for(i:=1;i<=Grp_Count+1;i++)
  for(i:=1;i<=Grp_Count;i++)
  { wc_lev:=0;
    if i<=Grp_Count
    {case mTable[i] of
     coKatPodr:
     { case UserDeskRep.ResWord[11+(i-1)*2] of
       42://'Подразделение+доп/аналитика' //42
       { wc_lev  :=GetKatpodrIe(
              GetPodrNrecByCexDopAn(#tablename.cexoz,#tablename.OLDCLSCH)
             ,mIeSvertka[i],wNameGr)
       }
       else
         wc_lev:=GetKatpodrIe(#tablename.cexoz,mIeSvertka[i],wNameGr)
       end;  
     }
     coKlKatego:
     { wc_lev:= GetKategNrec(#tablename.kateg)
       if  i=Grp_Count
         wNameGr:=GetKategName(#tablename.kateg)
     }
     coPersons:
     { wc_lev:=#tablename.tperson
       if getfirst fastfirstrow tmp_persons=0 
       { if  i=Grp_Count
           wNameGr:=tmp_persons.fio;
       }
       else
       { if  i=Grp_Count
           wNameGr:='??? '+string(#tablename.tperson);
       }
           
     }
     coTmpKatalog:
     { ww_analitik_lev:=1
       case MGroup[i] of//UserDeskRep.ResWord[11+(i-1)*2] of
       5:
       { 
        // wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],GetNameSpr(2,coCatalogs,#tablename.cappoint))
         wc_lev:=InsTmpKatalog(CurCode,i,GetNameSpr(2,coCatalogs,#tablename.cappoint))
       }
       6:{//,'По виду оплат/удержаний'             //6
         
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],if(#wtype=1 or #wtype=3,GetNameSpr(2,coKlvidopl,#tablename.#wvidopl)
         wc_lev:=InsTmpKatalog(CurCode,i,if(#wtype=1 or #wtype=3,GetNameSpr(2,coKlvidopl,#tablename.#wvidopl)
           ,GetNameSpr(2,coKlvidud,#tablename.#wvidopl )));
       }
       7:{//,'По типу начисления/ненач.доход/удержания/страх.налоги' //7
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2], if(#wtype=1,'1.Начисления',if(#wtype=2,'2.Удержания'
         wc_lev:=InsTmpKatalog(CurCode,i, if(#wtype=1,'1.Начисления',if(#wtype=2,'2.Удержания'
           , '3.Страх.взносы '+GetNameSpr(2,coPerech,w_vidper1) )));
       }
       8:{//,'По счету/субсчету'                   //8
         if #wtype=1 or   #wtype=3
         { wsch:=#tablename.cschetd; wsubsch:=#tablename.csubschd
         }
         else
         { wsch:=#tablename.cschetk; wsubsch:=#tablename.csubschk
         }
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],wsch+'/'+wsubsch)
         wc_lev:=InsTmpKatalog(CurCode,i,wsch+'/'+wsubsch)
       }
       18:{//,'По счету/субсчету'                   //8
         if #wtype=1 or   #wtype=3
         { wsch:=#tablename.cschetk; wsubsch:=#tablename.csubschk
         }
         else
         { wsch:=#tablename.cschetd; wsubsch:=#tablename.csubschd
         }
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],wsch+'/'+wsubsch)
         wc_lev:=InsTmpKatalog(CurCode,i,wsch+'/'+wsubsch)
       }
       15:
       { if getfirst fastfirstrow tmp_persons=0 {};
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],string(tmp_persons.sex))
         wc_lev:=InsTmpKatalog(CurCode,i,string(tmp_persons.sex))
       }
       16:
       { if getfirst lstab=0
         if getfirst klrejim=0 {}
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2], GetNameSpr(2,coKlRejim,lstab.rejim));
         wc_lev:=InsTmpKatalog(CurCode,i, GetNameSpr(2,coKlRejim,lstab.rejim));
       }
       17://17,'По системе оплат'
       { if #wtype=1 or #wtype=3
         { w_sisopl:=#tablename.#sisopl
           //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2], string(#tablename.#sisopl)
           wc_lev:=InsTmpKatalog(CurCode,i, string(#tablename.#sisopl)
                     +'/'+if(getfirst fastfirstrow klsisopl=0,klsisopl.NASISOPL,' не задана'));
         }
       }
       3,9..14:
       { 
         case UserDeskRep.ResWord[11+(i-1)*2] of
         9: ww_analitik_lev:=1;
         10: ww_analitik_lev:=2;
         11: ww_analitik_lev:=3;
         12: ww_analitik_lev:=4;
         13: ww_analitik_lev:=5;
         14: ww_analitik_lev:=6;
         end;
         if #wtype=1 or   #wtype=3
         { wsch:=#tablename.cschetd; wsubsch:=#tablename.csubschd
           wckau:= #tablename.CKAUD[ww_analitik_lev]
           wTBL := #tablename.TBLD[ww_analitik_lev]
         }
         else
         { wsch:=#tablename.cschetk; wsubsch:=#tablename.csubschk
           wckau:= #tablename.CKAUK[ww_analitik_lev]
           wTBL := #tablename.TBLK[ww_analitik_lev]
         }
         wc_lev:=Analitik_InsValue(CurCode,wtbl,wckau,mHierar[i], mIeSvertka[i],wNameGr,if((UserDeskRep.ResWord[40] and 2)>0,1,0))
       }
       19..24,31:
       { 
         case UserDeskRep.ResWord[11+(i-1)*2] of
         19: ww_analitik_lev:=1;
         20: ww_analitik_lev:=2;
         21: ww_analitik_lev:=3;
         22: ww_analitik_lev:=4;
         23: ww_analitik_lev:=5;
         24: ww_analitik_lev:=6;
         31: 
         { if #tablename.TBLD[1]=kod_StZatrat
           { ww_analitik_lev:=1;
           }
           else 
           { ww_analitik_lev:=0
             wc_lev:=Analitik_InsValue(CurCode,kod_StZatrat,0,mHierar[i], mIeSvertka[i],wNameGr,if((UserDeskRep.ResWord[40] and 2)>0,1,0))             
             continue;
           }
         }
         end;
         
         if not ( #wtype=1 or   #wtype=3)
         { wsch:=#tablename.cschetd; wsubsch:=#tablename.csubschd
           wckau:= #tablename.CKAUD[ww_analitik_lev]
           wTBL := #tablename.TBLD[ww_analitik_lev]
         }
         else
         { wsch:=#tablename.cschetk; wsubsch:=#tablename.csubschk
           wckau:= #tablename.CKAUK[ww_analitik_lev]
           wTBL := #tablename.TBLK[ww_analitik_lev]
         }
         wc_lev:=Analitik_InsValue(CurCode,wtbl,wckau,mHierar[i], mIeSvertka[i],wNameGr,if((UserDeskRep.ResWord[40] and 2)>0,1,0))
       }
       25://'По хозоперации' // 25
       { 
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2], GetNameSpr(2,coHozoper,#tablename.chozoper));
         wc_lev:=InsTmpKatalog(CurCode,i, GetNameSpr(2,coHozoper,#tablename.chozoper));
       }
       26://'По параметру выбора' //26 
       { 
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2], #tablename.param);
         wc_lev:=InsTmpKatalog(CurCode,i, #tablename.param);
       }
       27:{//'По месяцу начисления' //27
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2], string(#tablename.mesn,2));
         wc_lev:=InsTmpKatalog(CurCode,i, string(#tablename.mesn,2));
        
       }
       28:{//'По месяцу за который' //28
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2], string(#tablename.mes,2));
         wc_lev:=InsTmpKatalog(CurCode,i, string(#tablename.mes,2));
       }  
       29:{//'БДР
         if '#tablename'='TMP_SBSQL'
         { //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],  
           //  ArrAlgP[0].GetValue(tmp_sbsql.Nrec,tmp_sbsql.wtable));
           wckau:=comp(ArrAlgP[0].GetValue(tmp_sbsql.Nrec,tmp_sbsql.wtable))
         }
         else
         { //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2], 
           //    ArrAlg[0].GetValue(#tablename.Nrec,co#tablename));
           wckau:=comp(ArrAlgP[0].GetValue(#tablename.Nrec,co#tablename));
         }
         if logfilekl
            mylogwrite(false,'БДР '+string(kod_bdr)+'='+string(wckau)) 
        
         wc_lev:=Analitik_InsValue(CurCode,kod_bdr,wckau,mHierar[i], mIeSvertka[i],wNameGr,if((UserDeskRep.ResWord[40] and 2)>0,1,0))
         
       }  
       30:{//'ЕСОТ
         if '#tablename'='TMP_SBSQL'
         { //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],  
           wc_lev:=InsTmpKatalog(CurCode,i,  
            ArrAlg[1].GetValue(tmp_sbsql.nrec,tmp_sbsql.wtable));
         }
         else
         { //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],  
           wc_lev:=InsTmpKatalog(CurCode,i,  
               ArrAlg[1].GetValue(#tablename.Nrec,co#tablename));
         }
         
       } 
       32: // По виду работы
       {  w_lschet:=#tablename.clsch
          if getfirst fastfirstrow lschet=0 {}
          //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2], GetNameSpr(2,coKlSovm,lschet.sovm));
          wc_lev:=InsTmpKatalog(CurCode,i, GetNameSpr(2,coKlSovm,lschet.sovm));
       } 
       33://Наличие инвалидности  - льгота по инвалидам
       { w_lschet:=#tablename.clsch
         if getfirst fastfirstrow sumulsoc=0 {}
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],if(sumulsoc.summa2[w_MesRas]=0,'Нет','Льгота инвалид') );
         wc_lev:=InsTmpKatalog(CurCode,i,if(sumulsoc.summa2[w_MesRas]=0,'Нет','Льгота инвалид') );
       }
       34: // Возрастная группа
       { w_person:=#tablename.tperson
         if getfirst fastfirstrow tmp_persons=0 {}
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],if(tmp_persons.borndate<date(1,1,1900)
         wc_lev:=InsTmpKatalog(CurCode,i,if(tmp_persons.borndate<date(1,1,1900)
            ,' !нет даты рождения',if(tmp_persons.borndate<date(1,1,1967),'Для лиц 1966 года рождения  и старше',    'Для лиц 1967 года рождения и моложе')));
       }  
       35: // Табельный номер
       { w_lschet:=#tablename.clsch
         if getfirst fastfirstrow lschet=0 {}
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],GetStrTabn(lschet.tabn,lschet.strtabn));
         wc_lev:=InsTmpKatalog(CurCode,i,GetStrTabn(lschet.tabn,lschet.strtabn));
       }
       36: //ВА к штатному/должности
       { wTBL := ATTRNAM_SH.ROBJECT
         wckau:=GetAttrStaffByCexDol(UserDeskRep.ResComp[20],#tablename.Cexoz,#tablename.cAppoint)
         wc_lev:=Analitik_InsValue(CurCode,wtbl,wckau,mHierar[i], mIeSvertka[i],wNameGr,if((UserDeskRep.ResWord[40] and 2)>0,1,0))
       }  
       37: //Категория с иерархией
       { wTBL := 69
         wckau:=GetKategNrec(#tablename.kateg)
         wc_lev:=Analitik_InsValue(CurCode,wtbl,wckau,mHierar[i], mIeSvertka[i],wNameGr,if((UserDeskRep.ResWord[40] and 2)>0,1,0))
       }
       38:// Нахождение в декретном отпуске 
       { w_lschet:=#tablename.clsch
         var ww_dt:date;
         ww_dt :=date(1,#tablename.mesn,w_YearRas)
         
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2]
         wc_lev:=InsTmpKatalog(CurCode,i
           ,if(Decret_Check(#tablename.clsch,ww_dt,date(last_day(ww_dt),#tablename.mesn,w_YearRas) ) 
             ,'Декрет','Нет')   )
           ;

       
       }
       39: //
       { w_lschet:=#tablename.clsch
         if getfirst fastfirstrow lschet=0 {}
          
         wsch   :=GetKategSovmName(#tablename.kateg, lschet.sovm)
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],wsch)
         wc_lev:=InsTmpKatalog(CurCode,i,wsch)
       }
       40://'Регион(c уч.доп.аналитики)' //40
       { ww_str1  :=GetRegionNameByCexDopAn(#tablename.cexoz,#tablename.OLDCLSCH)
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],wsch)
         wc_lev:=InsTmpKatalog(CurCode,i,ww_str1)
       }
       41://'ОКВЭД (c уч.доп.аналитики)'  //41
       { ww_str1   :=GetOKVEDNameByCexDopAn(#tablename.cexoz,#tablename.OLDCLSCH)
         //wc_lev:=InsTmpKatalog(CurCode,UserDeskRep.ResWord[11+(i-1)*2],wsch)
         wc_lev:=InsTmpKatalog(CurCode,i,ww_str1)
       }
       43: // объект строительства
       { ww_str1:='=='
          wckau:=0
        
         for(k:=1;k<=6;k++)
         { if #tablename.TBLD[k]=40
           { wckau:=#tablename.CKAUD[k]
             if getfirst fastfirstrow katstroy where (( wckau == katstroy.nrec )) =0
             ww_str1:=' '+katstroy.name+'='+DateToStr(katstroy.DENDPROEKT,'DD/MM/YYYY')
           }
         }
         if wckau=0 //         ww_str='=='
         { wckau:=#tablename.cexoz
           if getfirst katpodr where (( wckau == katpodr.nrec ))=0
             ww_str1:=katpodr.name
         }
         wc_lev:=InsTmpKatalog(CurCode,i,ww_str1);
         
       }

       end;
       if  i=Grp_Count
         wNameGr:=TmpKatalog.name;
       
     } //coTmpKatalog:
     end;
    }else
    { wc_lev:=#tablename.tperson
      if getfirst tmp_persons=0
      { wNameGr:=tmp_persons.fio;
      }
      else
      { wNameGr:='-'
      }
    } 
     case i of
     1: wc_cut1:=wc_lev;
     2: wc_cut2:=wc_lev;
     3: wc_cut3:=wc_lev;
     4: wc_cut4:=wc_lev;
     5: wc_cut5:=wc_lev;
     6: wc_cut6:=wc_lev;
     end;
  } //for(i:=1;i<=6;i:=i+1) 
  Tobot_ins;
  if #wtype=1
  { Tobot.Sum[1]:=Tobot.Sum[1]+#tablename.#koldn;  
    Tobot.Sum[2]:=Tobot.Sum[2]+#tablename.#chasf;
    if (UserDeskRep.ResWord[40] and 512)>0 // собрать базу
    { w_vidopl:=#tablename.#wvidopl
      for(i:=1;i<=kol_nalog;i++)
      { if getfirst tmp_klperopl where (( w_vidopl == tmp_klperopl.vidopl and dm_nalog[i] == tmp_klperopl.vidper ))=0
        { Tobot.Sum[30+i]:=Tobot.Sum[30+i]+#tablename.#summa;
        }
      }  
    }

  } 
  if #wtype=3 and (UserDeskRep.ResWord[40] and 32)>0
  { if w_vidper1>0 and w_vidper1<=10
    { Tobot.Sum[10+dm_nalog1[w_vidper1]]:=Tobot.Sum[10+dm_nalog1[w_vidper1]]+#tablename.#summa;
    }
    else
    {  Tobot.Sum[10+1]:=Tobot.Sum[10+1]+#tablename.#summa;
    }
    Tobot.Sum[21]:=Tobot.Sum[21]+#tablename.#summa;
  }
  else
  { Tobot.Sum[3]:=Tobot.Sum[3]+#tablename.#summa;
  }
  update current Tobot;
#end
//=====================================
//
//=====================================
Function Sql_Run(ww_table:string) :boolean;
#SBOR_VAR
  stmt, stmt_err : LongInt; 
  stmt_str :longint;
  ww_type:word;
//=====
   ww_str,ww_fld1:string;
   ww_cappoint :comp;
   ww_summa   :double;
   ww_koldn   :double;
   ww_chasf   :double;
   ww_cschetd :string[20];
   ww_csubschd:string[20];
   ww_tbld    :array [1..6] of word;
   ww_ckaud   :array [1..6] of comp;
   ww_cschetk :string[20];
   ww_csubschk:string[20];
   ww_tblk    :array [1..6] of word;
   ww_ckauk   :array [1..6] of comp;
   ww_nrec:   comp;
   ww_vidopl  :longint;
   ww_sisopl  :longint;
   ww_clsch :comp;
   ww_tperson :comp; 
   ww_cexoz:comp;
   ww_kateg:word;
   ww_chozoper:comp;
   ww_param:string;
   ww_mesn :word;
   ww_mes  :word;
   ww_dop_an:comp;
   wwtable:word;
   ww_vidper :word;
   num_column :word;
   ww_err:word;
   ww_YearRas, ww_MesRas :longint;
{ delete all tmp_sbsql;
  ww_type:=1;
  if ww_table='PEREVOD' or ww_table='PEREVODTEK' ww_type:=3;
  if ww_table='SUMVIDUD' or ww_table='UDER' ww_type:=2;
  SQL_RUN:=False;
  ww_YearRas:=w_YearRas; ww_MesRas:=w_MesRas;
//=================
   ww_cappoint :=0;
   ww_summa    :=0;
   ww_koldn   :=0;
   ww_chasf   :=0;
   ww_cschetd :=''; ww_csubschd:='';
   for(ww_vidper:=1;ww_vidper<=6;ww_vidper++)
   { ww_tbld[ww_vidper] :=0;
     ww_ckaud[ww_vidper]:=0;
     ww_tblk[ww_vidper] :=0;
     ww_ckauk[ww_vidper]:=0;
   }
     
   ww_cschetk :='';
   ww_csubschk:='';
   ww_vidopl  :=0;  ww_sisopl  :=0;
   ww_clsch :=0;   ww_tperson :=0; 
   ww_cexoz:=0;   ww_kateg:=0;
   ww_chozoper:=0;
   ww_param:='';
   ww_mesn :=0; ww_mes  :=0;
   ww_vidper :=0;
  
//=================
  stmt := sqlAllocStmt;
//  message('1')
  sqlFreeStmt(stmt_str);
  case ww_table of
  'SUMVIDOP'   : ww_str:=sql_fields1;
  'NACHISL'    : ww_str:=sql_fields1d;
  'NENACH'     : ww_str:=sql_fields1d;
  'SUMVIDUD'   : ww_str:=sql_fields2;
  'UDER'       : ww_str:=sql_fields2d;
  'PEREVOD'    : ww_str:=sql_fields3;
  'PEREVODTEK' : ww_str:=sql_fields3;
  end;
  //ww_str:=replace(ww_str,'cexoz', 'dbo.toInt64(T$'+ww_table+'.f$cexoz) as cexoz_1')
  // dbo.toInt64(katsopr.f$corg) as k2

  sqlAddStr(stmt_str, ww_str ); //
  if logfilekl
    mylogwrite(false,ww_str)
  ww_fld1:=''  
  case ww_table of
  'SUMVIDOP'   : ww_fld1:=sql_fields1k;
  'NACHISL'    : ww_fld1:=sql_fields1k;
  'NENACH'     : ww_fld1:=sql_fields1k;
  'SUMVIDUD'   : ww_fld1:=sql_fields2k;
  'UDER'       : ww_fld1:=sql_fields2k;
  'PEREVOD'    : ww_fld1:=sql_fields3k;
  'PEREVODTEK' : ww_fld1:=sql_fields3k;
  end;
  if ww_fld1<>''
  { //ww_str:=replace(ww_str,'cexoz', 'dbo.toInt64(T$'+ww_table+'.f$cexoz) as cexoz_1')

    sqlAddStr(stmt_str, ww_fld1 ); //
    if logfilekl
      mylogwrite(false,ww_fld1)
  }
  ww_str:='from '+ww_table+' N'
  if logfilekl
    mylogwrite(false,ww_str)
  sqlAddStr(stmt_str, ww_str);
  if need_dop_an
  { ww_str:='left outer join OtpDop on OtpDop.Nrec = N.OLDCLSCH' //+ww_table
    sqlAddStr(stmt_str, ww_str);
    if logfilekl
      mylogwrite(false,ww_str)
  }
  //where
  case ww_table of
  'SUMVIDOP'   : { ww_str:=sql_where1;wwtable:=coSUMVIDOP;}
  'NACHISL'    : { ww_str:=sql_where1d;wwtable:=coNACHISL;}
  'NENACH'     : { ww_str:=sql_where1d;wwtable:=coNENACH ;}
  'SUMVIDUD'   : { ww_str:=sql_where2;wwtable:=coSUMVIDUD;}
  'UDER'       : { ww_str:=sql_where2d;wwtable:=coUDER;}
  'PEREVOD'    : { ww_str:=sql_where3;wwtable:=coPEREVOD;}
  'PEREVODTEK' : { ww_str:=sql_where3;wwtable:=coPEREVODTEK;}
  end;
  if logfilekl
    mylogwrite(false,ww_str)
  sqlAddStr(stmt_str, ww_str)
  if (UserDeskRep.ResWord[40] AND 64)>0 and ww_table='NENACH'
  { ww_str:=' and (N.vidopls)<>'+string(w_vidopl_97) ;
    sqlAddStr(stmt_str, ww_str)
    if logfilekl
      mylogwrite(false,ww_str)
  }
  if (UserDeskRep.ResWord[40] AND 64)>0 and ww_table='NACHISL'
  { ww_str:=' and (N.vidopls)<>'+string(143) ;
    sqlAddStr(stmt_str, ww_str)
    if logfilekl
      mylogwrite(false,ww_str)
  }
  if (UserDeskRep.ResWord[40] AND 64)>0 and ww_table='SUMVIDOP'
  { ww_str:=' and (N.vidopl)<>'+string(143) ; //SUMVIDOP
    sqlAddStr(stmt_str, ww_str)
    if logfilekl
      mylogwrite(false,ww_str)
  }
  //использовать group by
  if (UserDeskRep.ResWord[40] and 128)>0
  { ww_str:=''
    case ww_table of
    'SUMVIDOP'   : ww_str:=sql_groupby1;
    'NACHISL'    : ww_str:=sql_groupby1d;
    'NENACH'     : ww_str:=sql_groupby1d;
    'SUMVIDUD'   : ww_str:=sql_groupby2;
    'UDER'       : ww_str:=sql_groupby2d;
    'PEREVOD'    : ww_str:=sql_groupby3;
    'PEREVODTEK' : ww_str:=sql_groupby3;
    end;
    if trim(ww_str)<>''  or ww_fld1<>''
    { ww_str:=' group by '+ww_str
      if logfilekl
        mylogwrite(false,ww_str)
      sqlAddStr(stmt_str,ww_str);
      if ww_fld1<>''
      { if ww_str=' group by '
        { ww_fld1:=substr(trim(ww_fld1),2,250)
        } 
        if logfilekl
        mylogwrite(false,ww_fld1)
        sqlAddStr(stmt_str,ww_fld1);

      }
      if need_dop_an
      { ww_str:=' ,COALESCE(OTPDOP.tbld[1],0),COALESCE(OTPDOP.cKaud[1],0)'
               +' ,COALESCE(OTPDOP.tbld[2],0),COALESCE(OTPDOP.cKaud[2],0)'
               +' ,COALESCE(OTPDOP.tbld[3],0),COALESCE(OTPDOP.cKaud[3],0)'
        if logfilekl
          mylogwrite(false,ww_str)
        sqlAddStr(stmt_str,ww_str);
        ww_str:=' ,COALESCE(OTPDOP.tbld[4],0),COALESCE(OTPDOP.cKaud[4],0)'
               +' ,COALESCE(OTPDOP.tbld[5],0),COALESCE(OTPDOP.cKaud[5],0)'
               +' ,COALESCE(OTPDOP.tbld[6],0),COALESCE(OTPDOP.cKaud[6],0)'
        if logfilekl
          mylogwrite(false,ww_str)
        sqlAddStr(stmt_str,ww_str);
        
      }
    }  
    
  } //if (UserDeskRep.ResWord[40] and 128)>0
  //message('2')
  //==================
  stmt_err:=sqlPrepare(stmt, stmt_str)
  mylogwrite(false,'sqlPrepare ='+string(stmt_err));
  if stmt_err>0
  { message('Ошибка выполнения запроса '+string(stmt_err));
  }
  //================
  num_column:=1
  sqlBindParam(stmt,  num_column, ww_YearRas);inc(num_column);
  sqlBindParam(stmt,  num_column, ww_MesRas);inc(num_column);
  if c1>0
  { sqlBindParam(stmt,  num_column, wc_podr);inc(num_column);
  }
  if ww_type=1 or ww_type=3
  { if c2>0 
    { sqlBindParam(stmt,  num_column, w_vidopl);inc(num_column);
    }
  }
  if ww_type=3 and c4>0
  { sqlBindParam(stmt,  num_column, w_vidper);inc(num_column);
  
  }
  if ww_type=2
  { if c3>0 
    { sqlBindParam(stmt,  num_column, w_vidud);inc(num_column);
    }
  }
  num_column:=1;
  sqlBindCol(stmt,num_column, ww_summa );inc(num_column);
  if logfilekl  mylogwrite(false,'колонка ww_summa ')
  if ww_type=1
  { sqlBindCol(stmt,num_column, ww_koldn );inc(num_column);
    sqlBindCol(stmt,num_column, ww_chasf );inc(num_column);
    if logfilekl  mylogwrite(false,'колонка ww_koldn ')
    if logfilekl  mylogwrite(false,'колонка ww_chasf ')
  }  
  if need_post
  { sqlBindCol(stmt, num_column, ww_cappoint);inc(num_column);
    if logfilekl  mylogwrite(false,'колонка ww_cappoint')
  }
  if need_person
  { sqlBindCol(stmt,num_column, ww_clsch);inc(num_column);
    sqlBindCol(stmt,num_column, ww_tperson);  inc(num_column);
    if logfilekl  mylogwrite(false,'колонка ww_clsch')
    if logfilekl  mylogwrite(false,'колонка ww_tperson')
  }  
  if need_cex
  { sqlBindCol(stmt,num_column, ww_cexoz);  inc(num_column);
    if logfilekl  mylogwrite(false,'колонка ww_cexoz')
  }
  if need_mes
  { sqlBindCol(stmt,num_column, ww_mesn);  inc(num_column);
    sqlBindCol(stmt,num_column, ww_mes );  inc(num_column);
    if logfilekl  mylogwrite(false,'колонка ww_mesn')
    if logfilekl  mylogwrite(false,'колонка ww_mes')
  }  
  if need_nrec
  { sqlBindCol(stmt,num_column, ww_nrec );inc(num_column);
    if logfilekl  mylogwrite(false,'колонка ww_nrec')
  }
  if need_vidopl
  { sqlBindCol(stmt,num_column, ww_vidopl);inc(num_column);
    if logfilekl  mylogwrite(false,'колонка ww_vidopl')
  }
  if need_sisopl
  {  sqlBindCol(stmt,num_column, ww_sisopl);inc(num_column);
    if logfilekl  mylogwrite(false,'колонка ww_sisopl')
  }
  if ww_type=3
  { sqlBindCol(stmt,num_column, ww_vidper);  inc(num_column);
    if logfilekl  mylogwrite(false,'колонка ww_vidper')
  }
  if need_kateg
  { sqlBindCol(stmt,num_column, ww_kateg);  inc(num_column);
    if logfilekl  mylogwrite(false,'колонка ww_kateg')
  }
  if need_chozoper
  { sqlBindCol(stmt,num_column, ww_chozoper);  inc(num_column);
    if logfilekl  mylogwrite(false,'колонка ww_chozoper')
  }
  if need_param
  { sqlBindCol(stmt,num_column, ww_param);  inc(num_column);
    if logfilekl  mylogwrite(false,'колонка ww_param')
  }
  if need_dop_an
  { sqlBindCol(stmt,num_column, ww_dop_an);  inc(num_column);
    if logfilekl  mylogwrite(false,'колонка ww_dop_an')
  }
  if ((ww_type=1 or ww_type=3) and need_deb) or (ww_type=2 and need_kred)
  {sqlBindCol(stmt, num_column, ww_cschetd); inc(num_column);
   sqlBindCol(stmt, num_column, ww_csubschd);inc(num_column);
   if ww_type=2
   {if need_kauk1
    { sqlBindCol(stmt, num_column, ww_tbld[1]);inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckaud[1]);inc(num_column);
    }
    if need_kauk2
    { sqlBindCol(stmt, num_column, ww_tbld[2]);inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckaud[2]);inc(num_column);
    }
    if need_kauk3
    { sqlBindCol(stmt, num_column, ww_tbld[3]);inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckaud[3]);inc(num_column);
    }
    if need_kauk4
    { sqlBindCol(stmt, num_column, ww_tbld[4]);inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckaud[4]);inc(num_column);
    }
    if need_kauk5
    { sqlBindCol(stmt, num_column, ww_tbld[5]);inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckaud[5]);inc(num_column);
    }
    if need_kauk6
    { sqlBindCol(stmt, num_column, ww_tbld[6]);inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckaud[6]);inc(num_column);
    }

   }
   else
   {if need_kaud1
    { sqlBindCol(stmt, num_column, ww_tbld[1]);inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckaud[1]);inc(num_column);
    }
    if need_kaud2
    { sqlBindCol(stmt, num_column, ww_tbld[2]);inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckaud[2]);inc(num_column);
    }
    if need_kaud3
    { sqlBindCol(stmt, num_column, ww_tbld[3]);inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckaud[3]);inc(num_column);
    }
    if need_kaud4
    { sqlBindCol(stmt, num_column, ww_tbld[4]);inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckaud[4]);inc(num_column);
    }
    if need_kaud5
    { sqlBindCol(stmt, num_column, ww_tbld[5]);inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckaud[5]);inc(num_column);
    }
    if need_kaud6
    { sqlBindCol(stmt, num_column, ww_tbld[6]);inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckaud[6]);inc(num_column);
    }
   } 
  }  
  if ((ww_type=1 or ww_type=3) and need_kred) or (ww_type=2 and need_deb)
  {sqlBindCol(stmt,num_column, ww_cschetk );inc(num_column);
   sqlBindCol(stmt,num_column, ww_csubschk);inc(num_column);
   if ww_type=2
   {if need_kaud1
    { sqlBindCol(stmt,num_column, ww_tblk[1]); inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckauk[1]);inc(num_column);
    }
    if need_kaud2
    { sqlBindCol(stmt,num_column, ww_tblk[2]); inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckauk[2]);inc(num_column);
    }
    if need_kaud3
    { sqlBindCol(stmt,num_column, ww_tblk[3]); inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckauk[3]);inc(num_column);
    }
    if need_kaud4
    { sqlBindCol(stmt,num_column, ww_tblk[4]); inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckauk[4]);inc(num_column);
    }
    if need_kaud5
    { sqlBindCol(stmt,num_column, ww_tblk[5]); inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckauk[5]);inc(num_column);
    }
    if need_kaud6
    { sqlBindCol(stmt,num_column, ww_tblk[6]); inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckauk[6]);inc(num_column);
    }
   }
   else
   {if need_kauk1
    { sqlBindCol(stmt,num_column, ww_tblk[1]); inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckauk[1]);inc(num_column);
    }
    if need_kauk2
    { sqlBindCol(stmt,num_column, ww_tblk[2]); inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckauk[2]);inc(num_column);
    }
    if need_kauk3
    { sqlBindCol(stmt,num_column, ww_tblk[3]); inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckauk[3]);inc(num_column);
    }
    if need_kauk4
    { sqlBindCol(stmt,num_column, ww_tblk[4]); inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckauk[4]);inc(num_column);
    }
    if need_kauk5
    { sqlBindCol(stmt,num_column, ww_tblk[5]); inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckauk[5]);inc(num_column);
    }
    if need_kauk6
    { sqlBindCol(stmt,num_column, ww_tblk[6]); inc(num_column);
      sqlBindCol(stmt,num_column, ww_ckauk[6]);inc(num_column);
    }
   }  
  } 
  sqlFreeStr(stmt_str);
  //message('3')
  delete all tmp_sbsql;
  //message('4')
  ww_err:=sqlExecute(stmt)
  delete all tmp_sbsql;
  //message(ww_err)
  if ww_err=0
  { While(sqlFetch(stmt) = TsOk)
    {  //message(ww_variant)
       inc(chet)
       if chet mod 100=0
       { if not nextvisual
         { ww_err:=1;
           break;
         }
       }  
       tmp_sbsql.summa:=ww_summa ;
       if ww_type=1
       { tmp_sbsql.koldn:=ww_koldn ;
         tmp_sbsql.chasf:=ww_chasf ;
       }  
       if need_post tmp_sbsql.cappoint:=ww_cappoint;
       if need_person
       { tmp_sbsql.clsch:=ww_clsch;
         tmp_sbsql.tperson:=ww_tperson;  
       }
       if need_cex    tmp_sbsql.cexoz  :=ww_cexoz;  
       if need_nrec   tmp_sbsql.nrec  :=ww_nrec;
       if need_vidopl tmp_sbsql.vidopl:=ww_vidopl;
       if need_sisopl tmp_sbsql.sisopl:=ww_sisopl;
       if need_kateg  tmp_sbsql.kateg  :=ww_kateg;  
       if need_chozoper tmp_sbsql.chozoper:=ww_chozoper;  
       if need_param  tmp_sbsql.param   :=ww_param;  
       if need_dop_an tmp_sbsql.OLDCLSCH:=ww_dop_an
       if ww_type=3 tmp_sbsql.vidper  :=ww_vidper;  
       if need_mes
       { tmp_sbsql.mesn:= ww_mesn;
         tmp_sbsql.mes := ww_mes ;
       }
       if ((ww_type=1 or ww_type=3) and need_deb) or (ww_type=2 and need_kred)
       {tmp_sbsql.cschetd:=ww_cschetd;
        tmp_sbsql.csubschd:=ww_csubschd;
        tmp_sbsql.tbld[1]:=ww_tbld[1];
        tmp_sbsql.tbld[2]:=ww_tbld[2];
        tmp_sbsql.tbld[3]:=ww_tbld[3];
        tmp_sbsql.tbld[4]:=ww_tbld[4];
        tmp_sbsql.tbld[5]:=ww_tbld[5];
        tmp_sbsql.tbld[6]:=ww_tbld[6];
        tmp_sbsql.ckaud[1]:=ww_ckaud[1];
        tmp_sbsql.ckaud[2]:=ww_ckaud[2];
        tmp_sbsql.ckaud[3]:=ww_ckaud[3];
        tmp_sbsql.ckaud[4]:=ww_ckaud[4];
        tmp_sbsql.ckaud[5]:=ww_ckaud[5];
        tmp_sbsql.ckaud[6]:=ww_ckaud[6];
       }
       if ((ww_type=1 or ww_type=3) and need_kred) or (ww_type=2 and need_deb)
       {tmp_sbsql.cschetk:=ww_cschetk ;
        tmp_sbsql.csubschk:=ww_csubschk;
        tmp_sbsql.tblk[1]:=ww_tblk[1]; 
        tmp_sbsql.tblk[2]:=ww_tblk[2]; 
        tmp_sbsql.tblk[3]:=ww_tblk[3]; 
        tmp_sbsql.tblk[4]:=ww_tblk[4]; 
        tmp_sbsql.tblk[5]:=ww_tblk[5]; 
        tmp_sbsql.tblk[6]:=ww_tblk[6]; 
        tmp_sbsql.ckauk[1]:=ww_ckauk[1];
        tmp_sbsql.ckauk[2]:=ww_ckauk[2];
        tmp_sbsql.ckauk[3]:=ww_ckauk[3];
        tmp_sbsql.ckauk[4]:=ww_ckauk[4];
        tmp_sbsql.ckauk[5]:=ww_ckauk[5];
        tmp_sbsql.ckauk[6]:=ww_ckauk[6];
       } 
       tmp_sbsql.wtable:=wwtable;
       insert current tmp_sbsql;
    }
  } //if ww_err=0 
  sqlFreeStmt(stmt);
  if ww_err=0
  { _Loop tmp_sbsql
    { if ww_type=3
      { w_vidper1:=tmp_sbsql.vidper;
      }
       if logfilekl
       { mylogwrite(false,'== '+string(tmp_sbsql.vidopl)+'/'+string(tmp_sbsql.kateg)+'/'+string(tmp_sbsql.mesn)+'/'+string(tmp_sbsql.mes)+'/'+string(tmp_sbsql.vidper))
       }
      #SBOR_SUM(TMP_SBSQL,WW_TYPE,VIDOPL,SUMMA,KOLDN,CHASF,SISOPL)

    }
    SQL_RUN:=True;
  }  
}
//=====================================
Function SborPerevod:boolean;
#SBOR_VAR
{ SborPerevod:=false
  mylogwrite(false,'SborPerevod')
  if type_period=0 or type_period=2
  { if (UserDeskRep.ResWord[40] and 8)=0
    { _loop fullcache perevod
      { w_vidper1:=perevod.vidper;
        #SBOR_SUM(PEREVOD,3,VIDOPLS,SUMPER,NREC,NREC,SISOPL)
      }
    }
    else SQL_RUN('PEREVOD')  
  }  
  if type_period=0 or type_period=1
  if w_YearRas>=YearCur-1
  { if (UserDeskRep.ResWord[40] and 8)=0
    { _loop fullcache perevodtek
      { w_vidper1:=perevodtek.vidper;
        #SBOR_SUM(PEREVODTEK,3,VIDOPLS,SUMPER,NREC,NREC,SISOPL)
      }
    }
    else SQL_RUN('PEREVODTEK')   
  }  
  SborPerevod:=true;
}
//=====================================
Function SborNachPerevod(ww_c4:longint):boolean;
#SBOR_VAR
  ii:longint;
{ SborNachPerevod:=false;
  mylogwrite(false,'SborNachPerevod 1 '+string(wc_podr)+' , '+string( w_YearRas)+' , '+string(w_MesRas))
  if (UserDeskRep.ResWord[38] and 4)>0
  { IF ww_c4>0
    { for(ii:=0;ii<WW_C4;inc(ii))
      { if not GetMarker(MarkerVidPER, II, w_vidPER) then continue;
        IF NOT SborPerevod then exit;  
      }
    }
    ELSE
    { IF NOT SborPerevod then exit;  

    
    }
  }
  mylogwrite(false,'SborNachPerevod 2 '+string(wc_podr)+' , '+string( w_YearRas)+' , '+string(w_MesRas))
  if (UserDeskRep.ResWord[38] and 1)>0
  { mylogwrite(false,'Sbor Nach')

    if type_period=0 or type_period=2
    { if (UserDeskRep.ResWord[40] and 8)=0
      { mylogwrite(false,'Sbor Sumvidop')
        _loop fullcache sumvidop
        { if (UserDeskRep.ResWord[40] AND 64)>0 
          { if sumvidop.vidopl=143 then continue;
          }
          mylogwrite(false,'Tabn='+string(sumvidop.tabn)+'/'+sumvidop.strtabn)
          #SBOR_SUM(SUMVIDOP,1,VIDOPL,SUMMA,KOLDN,CHASF,SISOPL)
        }
      }  
      else SQL_RUN('SUMVIDOP')   
    }  
    if type_period=0 or type_period=1
    if w_YearRas>=YearCur-1
    { if (UserDeskRep.ResWord[40] and 8)=0
      { mylogwrite(false,'Sbor nachisl')
        _loop fullcache nachisl
        { if (UserDeskRep.ResWord[40] AND 64)>0 
          { if nachisl.vidopls=143 then continue;
          }

          #SBOR_SUM(nachisl,1,VIDOPLS,SUMMA,KOLDN,CHASF,SISOPL)
        }
      }  
      else SQL_RUN('NACHISL')   
    }  
    if (UserDeskRep.ResWord[40] and 8)=0
    { mylogwrite(false,'Sbor nenach')
        
      _loop fullcache nenach
      { if (UserDeskRep.ResWord[40] AND 64)>0 
        { if nenach.vidopls=w_vidopl_97 then continue;
        }

        #SBOR_SUM(nenach,1,VIDOPLS,SUMMA,KOLDN,CHASF,SISOPL)
      }
    }  
    else SQL_RUN('NENACH')   
  }
  SborNachPerevod:=true;
}
//=====================================
Function SborUder:boolean;
#SBOR_VAR
{ SborUder:=false;
  if type_period=0 or type_period=1
  if w_YearRas>=YearCur-1
  { if (UserDeskRep.ResWord[40] and 8)=0
    { _loop fullcache uder
      { #SBOR_SUM(uder,2,viduds,SUMUD,NREC,NREC,NREC)
      }
    }  
    else SQL_RUN('UDER')   
  }  
  if type_period=0 or type_period=2
  { if (UserDeskRep.ResWord[40] and 8)=0
    { _loop fullcache sumvidud
      { #SBOR_SUM(sumvidud,2,vidud,sumud,NREC,NREC,NREC)
      }
    }
    else SQL_RUN('SUMVIDUD')   
  }    
  SborUder:=true;
}// Function SborUder:boolean;
//=====================================
Function CREATEZAPROS:boolean;
{ CREATEZAPROS:=False
 sql_fields1:='';sql_fields2:='';
 sql_from_add:='';
 sql_where1:='';sql_where2:='';
 sql_groupby1:='';sql_groupby2:='';sql_groupby3;
 if (UserDeskRep.ResWord[40] and 128)>0
   sql_fields1:='select sum(N.summa),sum(N.koldn),sum(N.chasf)'
 else  
   sql_fields1:='select N.summa,N.koldn,N.chasf'
 sql_fields1k:='';sql_fields2k:='';sql_fields3k:=''
 if need_post
 { sql_fields1:=sql_fields1+',N.cappoint'
 }
 if need_deb
 { sql_fields1k:=sql_fields1k+',N.cschetd'
   sql_fields1k:=sql_fields1k+',N.csubschd'
   if need_kaud1
   { sql_fields1k:=sql_fields1k+',N.tbld[1]'
     sql_fields1k:=sql_fields1k+',N.ckaud[1]'
   }
   if need_kaud2
   { sql_fields1k:=sql_fields1k+',N.tbld[2]'
     sql_fields1k:=sql_fields1k+',N.ckaud[2]'
   }
   if need_kaud3
   { sql_fields1k:=sql_fields1k+',N.tbld[3]'
     sql_fields1k:=sql_fields1k+',N.ckaud[3]'
   }
   if need_kaud4
   { sql_fields1k:=sql_fields1k+',N.tbld[4]'
     sql_fields1k:=sql_fields1k+',N.ckaud[4]'
   }
   if need_kaud5
   { sql_fields1k:=sql_fields1k+',N.tbld[5]'
     sql_fields1k:=sql_fields1k+',N.ckaud[5]'
   }
   if need_kaud6
   { sql_fields1k:=sql_fields1k+',N.tbld[6]'
     sql_fields1k:=sql_fields1k+',N.ckaud[6]'
   }
 }  
 if need_kred
 { sql_fields1k:=sql_fields1k+',N.cschetk'
   sql_fields1k:=sql_fields1k+',N.csubschk'
   if need_kauk1
   { sql_fields1k:=sql_fields1k+',N.tblk[1]'
     sql_fields1k:=sql_fields1k+',N.ckauk[1]'
   }
   if need_kauk2
   { sql_fields1k:=sql_fields1k+',N.tblk[2]'
     sql_fields1k:=sql_fields1k+',N.ckauk[2]'
   }
   if need_kauk3
   { sql_fields1k:=sql_fields1k+',N.tblk[3]'
     sql_fields1k:=sql_fields1k+',N.ckauk[3]'
   }
   if need_kauk4
   { sql_fields1k:=sql_fields1k+',N.tblk[4]'
     sql_fields1k:=sql_fields1k+',N.ckauk[4]'
   }
   if need_kauk5
   { sql_fields1k:=sql_fields1k+',N.tblk[5]'
     sql_fields1k:=sql_fields1k+',N.ckauk[5]'
   }
   if need_kauk6
   { sql_fields1k:=sql_fields1k+',N.tblk[6]'
     sql_fields1k:=sql_fields1k+',N.ckauk[6]'
   }
 } 
 if need_person
 { sql_fields1:=sql_fields1+',N.clsch'
   sql_fields1:=sql_fields1+',N.tperson'
 }
 if need_cex
 { sql_fields1:=sql_fields1+',N.cexoz'
 }
 if need_mes
 { sql_fields1:=sql_fields1+',N.mesn' 
   sql_fields1:=sql_fields1+',N.mes' 
 }  
 if need_nrec
 { sql_fields1:=sql_fields1+',N.nrec'
 }
 if (USERDESKREP.RESWORD[40] and 256)>0
 { need_vidopl:=true;
 }
 IF need_vidopl sql_fields1:=sql_fields1+',N.vidopl'
 if need_sisopl sql_fields1:=sql_fields1+',N.sisopl'
 sql_fields1d:=replace(sql_fields1,',N.vidopl',    ', N.vidopls')
 sql_fields3 :=replace(sql_fields1d,'summa','sumper')
 sql_fields3 :=replace(sql_fields3,',sum(N.koldn)',    '')
 sql_fields3 :=replace(sql_fields3,',sum(N.chasf)',    '')
 sql_fields3 :=replace(sql_fields3,',N.koldn,N.chasf',    '')
 sql_fields3 :=sql_fields3+', N.vidper'
 if need_kateg
 {  sql_fields1 :=sql_fields1+',N.kateg'
    sql_fields1d:=sql_fields1d+',N.kateg'
    sql_fields3 :=sql_fields3+',N.kateg'
 }
 if need_chozoper 
 { sql_fields1 :=sql_fields1 +',N.chozoper'
   sql_fields1d:=sql_fields1d+',N.chozoper'
   sql_fields3 :=sql_fields3 +',N.chozoper'
 }
 if need_param
 { sql_fields1 :=sql_fields1 +',N.param' 
   sql_fields1d:=sql_fields1d+',N.param' 
   sql_fields3 :=sql_fields3 +',N.param' 
 }
 if need_dop_an
 { sql_fields1 :=sql_fields1 +',min(N.OLDCLSCH)' 
   sql_fields1d:=sql_fields1d+',min(N.OLDCLSCH)' 
   sql_fields3 :=sql_fields3 +',min(N.OLDCLSCH)' 
 }
 sql_fields3k :=sql_fields1k
//=============
 sql_fields2:='select sum(N.sumud)'
 if need_post
 { sql_fields2:=sql_fields2+',N.cappoint'
 }
 if need_deb
 { sql_fields2k:=sql_fields2k+',N.cschetk'
   sql_fields2k:=sql_fields2k+',N.csubschk'
   if need_kaud1
   { sql_fields2k:=sql_fields2k+',N.tblk[1]'
     sql_fields2k:=sql_fields2k+',N.ckauk[1]'
   }
   if need_kaud2
   { sql_fields2k:=sql_fields2k+',N.tblk[2]'
     sql_fields2k:=sql_fields2k+',N.ckauk[2]'
   }
   if need_kaud3
   { sql_fields2k:=sql_fields2k+',N.tblk[3]'
     sql_fields2k:=sql_fields2k+',N.ckauk[3]'
   }
   if need_kaud4
   { sql_fields2k:=sql_fields2k+',N.tblk[4]'
     sql_fields2k:=sql_fields2k+',N.ckauk[4]'
   }
   if need_kaud5
   { sql_fields2k:=sql_fields2k+',N.tblk[5]'
     sql_fields2k:=sql_fields2k+',N.ckauk[5]'
   }
   if need_kaud6
   { sql_fields2k:=sql_fields2k+',N.tblk[6]'
     sql_fields2k:=sql_fields2k+',N.ckauk[6]'
   }
 }  
 if need_kred
 { sql_fields2k:=sql_fields2k+',N.cschetd'
   sql_fields2k:=sql_fields2k+',N.csubschd'
   if need_kauk1
   { sql_fields2k:=sql_fields2k+',N.tbld[1]'
     sql_fields2k:=sql_fields2k+',N.ckaud[1]'
   }
   if need_kauk2
   { sql_fields2k:=sql_fields2k+',N.tbld[2]'
     sql_fields2k:=sql_fields2k+',N.ckaud[2]'
   }
   if need_kauk3
   { sql_fields2k:=sql_fields2k+',N.tbld[3]'
     sql_fields2k:=sql_fields2k+',N.ckaud[3]'
   }
   if need_kauk4
   { sql_fields2k:=sql_fields2k+',N.tbld[4]'
     sql_fields2k:=sql_fields2k+',N.ckaud[4]'
   }
   if need_kauk5
   { sql_fields2k:=sql_fields2k+',N.tbld[5]'
     sql_fields2k:=sql_fields2k+',N.ckaud[5]'
   }
   if need_kauk6
   { sql_fields2k:=sql_fields2k+',N.tbld[6]'
     sql_fields2k:=sql_fields2k+',N.ckaud[6]'
   }
 } 
 if need_person
 { sql_fields2:=sql_fields2+',N.clsch'
   sql_fields2:=sql_fields2+',N.tperson'
 }  
 if need_cex
 {  sql_fields2:=sql_fields2+',N.cexoz'
 }
 if need_mes 
 { sql_fields2:=sql_fields2+',N.mesn' 
   sql_fields2:=sql_fields2+',N.mes' 
 }  
 if need_nrec
 { sql_fields2:=sql_fields2+',N.nrec'
 }
 if need_vidopl
 { sql_fields2:=sql_fields2+',N.vidud'
 }
 if need_sisopl
 {  sql_fields2:=sql_fields2+',N.sisopl'
 }
 if need_kateg
 { sql_fields2:=sql_fields2+',N.kateg'
 }
 if need_chozoper sql_fields2:=sql_fields2+',N.chozoper'
 if need_param    sql_fields2:=sql_fields2+',N.param' 
 sql_fields2d:=replace(sql_fields2,',N.vidud',    ',N.viduds')
 if (UserDeskRep.ResWord[40] and 16)>0
 { sql_where1:='where N.Yeark = ? and N.mes=?'
   sql_where2:='where N.Yeark = ? and N.mes=?'
   sql_where3:='where N.Yeark = ? and N.mes=?'
 }
 else
 { sql_where1:='where N.Yearn = ? and N.mesn=?'
   sql_where2:='where N.Yearv = ? and N.mesv=?'
   sql_where3:='where N.Yearn = ? and N.mesn=?'
 }
 if c1>0
 { sql_where1:=sql_where1+' and N.cexoz=?'
   sql_where2:=sql_where2+' and N.cexoz=?'
   sql_where3:=sql_where3+' and N.cexoz=?'
 }
 sql_where1d:=sql_where1
 sql_where2d:=sql_where2
 sql_where2d:=replace(sql_where2 , 'N.Yeark','N.Yearv')
 if c2>0 
 { sql_where1 :=sql_where1 +' and N.vidopl=?'
   sql_where1d:=sql_where1d+' and N.vidopls=?'
   sql_where3 :=sql_where3 +' and N.vidopls=?'
 }
 if c3>0
 { sql_where2 :=sql_where2 +' and N.vidud=?'
   sql_where2d:=sql_where2d+' and N.viduds=?'
 }
 if c4>0  
 { sql_where3 :=sql_where3+' and N.vidper=?'
 }
 sql_groupby1 :=trim(replace(sql_fields1 ,'select sum(N.summa),sum(N.koldn),sum(N.chasf)',     ''))
 sql_groupby1 :=trim(replace(sql_groupby1 ,',min(N.OLDCLSCH)',    ''))

 if substr(sql_groupby1,1,1)=',' sql_groupby1:=substr(sql_groupby1,2,250)
 sql_groupby1d:=trim(replace(sql_fields1d,'select sum(N.summa),sum(N.koldn),sum(N.chasf)',     ''))
 sql_groupby1d :=trim(replace(sql_groupby1d ,',min(N.OLDCLSCH)',    ''))
 if substr(sql_groupby1d,1,1)=',' sql_groupby1d:=substr(sql_groupby1d,2,250)
 sql_groupby2 :=trim(replace(sql_fields2 ,'select sum(N.sumud)',     ''))
 sql_groupby2 :=trim(replace(sql_groupby2 ,',min(N.OLDCLSCH)',    ''))
 if substr(sql_groupby2,1,1)=',' sql_groupby2:=substr(sql_groupby2,2,250)
 sql_groupby2d :=trim(replace(sql_fields2d,'select sum(N.sumud)',     ''))
 sql_groupby2d :=trim(replace(sql_groupby2d ,',min(N.OLDCLSCH)',    ''))
 if substr(sql_groupby2d,1,1)=',' sql_groupby2d:=substr(sql_groupby2d,2,250)
 sql_groupby3 :=trim(replace(sql_fields3 ,'select sum(N.sumper)',    ''))
 sql_groupby3 :=trim(replace(sql_groupby3 ,',min(N.OLDCLSCH)',    ''))
 if substr(sql_groupby3,1,1)=',' sql_groupby3:=substr(sql_groupby3,2,250)
 /*
 sql_groupby1:='b.vidopl'
 sql_groupby2:='b.vidud'
 sql_groupby3:='b.vidopl'
 if c1>0 or need_cex
 { sql_groupby1:=sql_groupby1+', b.cexoz'
   sql_groupby2:=sql_groupby3+', b.cexoz'
   sql_groupby3:=sql_groupby3+', b.cexoz'
 }
 if need_person
 { sql_groupby1:=sql_groupby1+', b.clsch, b.tperson'
   sql_groupby2:=sql_groupby3+', b.clsch, b.tperson'
   sql_groupby3:=sql_groupby3+', b.clsch, b.tperson'
 }
 if need_sisopl
 { sql_groupby1:=sql_groupby1+', b.sisopl'
   sql_groupby2:=sql_groupby3+', b.sisopl'
   sql_groupby3:=sql_groupby3+', b.sisopl'
 }
 if need_kateg
 { sql_groupby1:=sql_groupby1+', b.kateg'
   sql_groupby2:=sql_groupby3+', b.kateg'
   sql_groupby3:=sql_groupby3+', b.kateg'
 }
 if need_post
 { sql_groupby1:=sql_groupby1+', b.cappoint'
   sql_groupby2:=sql_groupby3+', b.cappoint'
   sql_groupby3:=sql_groupby3+', b.cappoint'
 }
 sql_groupby1d:=replace(sql_groupby1,'.vidopl'   , '.vidopls')
 */
 CREATEZAPROS:=True;
} //Function CREATEZAPROS:boolean;
//=====================================
// сбор данных
//=====================================
Function SborData01:boolean;
var i,j :longint;
{ SborData01:=false;
  if not inextvisual('Сбор данных за '+string(w_MesRas)+' мес.'+string(w_YearRas)+' год')
    then exit
  chet:=0  
  if (UserDeskRep.ResWord[1] and 1)>0
  { for(i:=0;i<c1;inc(i))
    { if not GetMarker(MarkerPodr, i, wc_podr) then continue;
      mylogwrite(false,'Цех = '+string(wc_podr));
      if not inextvisual('Сбор данных за '+string(w_MesRas)+' мес.'
         +string(w_YearRas)+' год'
         +chr(13)+' подразд.'+string(i)+' из '+string(c1))
      then exit
      if c2>0
      { for(j:=0;j<c2;inc(j))
        { if not GetMarker(MarkerVidopl, j, w_vidopl) then continue;
          if not SborNachPerevod(c4) then exit;
        }
      }
      else
      { if not SborNachPerevod(c4) then exit;
      }
      if (UserDeskRep.ResWord[38] and 2)>0
      { if c3>0
        { for(j:=0;j<c3;inc(j))
          { if not GetMarker(MarkerVidud, j, w_vidud) then continue;
            if not SborUder then exit;
          }
        }
        else
        { if not SborUder then exit;
        }
      }  
    }
  }  //if (UserDeskRep.ResWord[1] and 1)>0
  else
  { if c2>0
    { for(j:=0;j<c2;inc(j))
      { if not GetMarker(MarkerVidopl, j, w_vidopl) then continue;
        if not  SborNachPerevod(c4) then exit;
      }
    }
    else
    { if not SborNachPerevod(c4) then exit;
    }
    if (UserDeskRep.ResWord[38] and 2)>0
    { if c3>0
      { for(j:=0;j<c3;inc(j))
        { if not GetMarker(MarkerVidud, j, w_vidud) then continue;
          if not SborUder then exit;
        }
      }
      else
      { if not SborUder then exit;
      }
    }  
  }  //ELSE if (UserDeskRep.ResWord[1] and 1)>0
  SborData01:=true;
} //Function SborData01:boolean;
//=====================================
// сбор данных прямые запросы
//=====================================
Function SborData01Direct:boolean;
{ SborData01Direct:=false;

  SborData01Direct:=true;
} //Function SborData01Direct:boolean;
//==============================
// добавить настройки группировок
//==============================
Procedure Add_Group1(ww_num:word;ww_gr :word;ww_ie:word;ww_iesv:word);
{ if ww_gr=0 then exit;
  len1:=len1+1;
//mLevel[Len1]    := RepGroup.Nomer;
  mLevel[Len1]    := len1;
  mHierar[Len1]   := if(ww_ie>0,1,0);
  mKol[Len1]      := ww_ie;
  mGrupSort[Len1] := 0;
  mIeSvertka[Len1]:=ww_iesv;
  mVnKau[Len1]:=0;
  mGroup[Len1]:=ww_gr   
    
  case ww_gr of
  99:
  {  mTable[Len1] := 0;
     mName[Len1]  :='Всего по отчету'

  }
  1: {  
      mTable[Len1]    := coKatPodr;
      mName[Len1]:='Подр.:'
      mVnKau[Len1]:=2;
      need_cex:=true;
  }
  2:
  {
     mTable[Len1]    := coKlKatego;
     mName[Len1]:='Категория:'
     need_kateg:=true;
  }
  3:{
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Аналитика:'
    need_deb:=true;
  }
  4:{
    mTable[Len1]    := coPersons;
    mGrupSort[Len1] := 0;
    mName[Len1]:=''
    need_person:=true;
  }
  5:{//'По должности'  //5
    mTable[Len1]    := coTmpKatalog;//coCatalogs;
    mGrupSort[Len1] := 0;
    mName[Len1]:='Должность:'
    need_post:=true;
  }
  6:{//,'По виду оплат/удержаний'             //6
    mTable[Len1]    := coTmpKatalog;
    mGrupSort[Len1] := 0;
    mName[Len1]:='код оплаты/удерж:'
    need_vidopl:=true;
  }
  7:{//,'По типу начисления/ненач.доход/удержания/страх.налоги' //7
    mTable[Len1]    := coTmpKatalog;
    mGrupSort[Len1] := 0;
    mName[Len1]:='тип :'
  }
  8:{//,'По счету/субсчету'                   //8
    mTable[Len1]    := coTmpKatalog;
    mGrupSort[Len1] := 0;
    mName[Len1]:='Счет/субсчет:'
    need_deb:=true;
  }
  9:{//,'По аналитике 1 уровня'               //9
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Аналитика 1:'
    need_deb:=true;
    need_kaud1:=true;
  }
  10:{//,'По аналитике 2 уровня'               //10
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Аналитика 2:'
    need_deb:=true;
    need_kaud2:=true;
  }
  11:{//,'По аналитике 3 уровня'               //11
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Аналитика 3:'
    need_deb:=true;
    need_kaud3:=true;
  }
  12:{//,'По аналитике 4 уровня'               //12
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Аналитика 4:'
    need_deb:=true;
    need_kaud4:=true;
  }
  13:{//,'По аналитике 5 уровня'               //13
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Аналитика 5:'
    need_deb:=true;
    need_kaud5:=true;
  }
  14:{//,'По аналитике 6 уровня'               //14
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Аналитика 6:'
    need_deb:=true;
    need_kaud6:=true;
  }
  15:{//,'По полу'                             //15
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Пол:'
    need_person:=true;
  }
  16:{//,'По режиму'                           //16
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Режим:'
    need_person:=true;
  }
  17:{//,'По системе оплат'                    //17
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Система оплат:'
    need_sisopl:=true;
  }
  18:{//,'По кор.счету/субсчету'               //18
    mTable[Len1]    := coTmpKatalog;
    mGrupSort[Len1] := 0;
    mName[Len1]:='Счет/субсчет:'
    need_kred:=true;
  }
  19:{//,'По кор.аналитике 1 уровня'           //19
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Кор.Аналитика 1:'
    need_kred:=true;
    need_kauk1:=true;
  }
  20:{//,'По кор.аналитике 2 уровня'           //20
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Кор.Аналитика 2:'
    need_kred:=true;
    need_kauk2:=true;

  }
  21:{//,'По кор.аналитике 3 уровня'           //21
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Кор.Аналитика 3:'
    need_kred:=true;
    need_kauk3:=true;
  }
  22:{//,'По кор.аналитике 4 уровня'           //22
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Кор.Аналитика 4:'
    need_kred:=true;
    need_kauk4:=true;
  }
  23:{//,'По кор.аналитике 5 уровня'           //23
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Кор.Аналитика 5:'
    need_kred:=true;
    need_kauk5:=true;
  }
  24:{//,'По кор.аналитике 6 уровня'           //24
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Кор.Аналитика 6:'
    need_kred:=true;
    need_kauk6:=true;
  }
  25:{//Хозоперация           //25
    mTable[Len1]    := coTmpKatalog;
    mName[Len1]:='Хозоперация:'
    need_chozoper:=true;
  }
  26:{//,'По параметру выбору           //26
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :='Параметр выбора:'
    need_param:=true;
  }
  27:{//'По месяцу начисления' //27
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :='По месяцу начисления:'
    need_mes:=true;
  }
  28:{//'По месяцу за который' //28
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :='По месяцу за который:'
    need_mes:=true;
  }
  29:{//'БДР' //28
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :='БДР:'
   // need_deb:=true;
    need_nrec:=true;
    need_kaud1:=true;
  }
  30:{//ESOT
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :='ЕСОТ:'
    //need_deb:=true;
    need_nrec:=true;
  }
  31:{//Статьи затрат
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :='Статьи затрат:'
    need_deb:=true;
  }
  32://Вид работы
  { mTable[Len1] := coTmpKatalog;
    mName[Len1]  :='Вид работы:'
    need_person:=true;

  }
  33://Наличие инвалидности  - льгота по инвалидам
  { need_person:=true;
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :='Вид льготы по страховым налогам:'
  }
  34: // Возрастная группа
  { need_person:=true;
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :='Возрастная группа:'
  }
  35: // Табельный номер
  { need_person:=true;
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :=''
  }
  36: // ВА к штатному расписанию
  { need_post:=true;
    need_cex:=true;
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :=''
  }
  37: // Категория с иерархией
  { need_kateg:=True
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :=''
  }
  38: // Находится или нет в декретном отпуске
  { need_person:=true;
    need_mes:=true;
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :=''
    Decret_Fill(UserDeskRep.ResDate[1],UserDeskRep.ResDate[2]);
  }
  39: // Вид работы категория
  { need_kateg:=True
    mTable[Len1] := coTmpKatalog;
    need_person:=true;
    mName[Len1]  :=''
    
  }
  39: // Вид работы категория
  { need_kateg:=True
    mTable[Len1] := coTmpKatalog;
    need_person:=true;
    mName[Len1]  :=''
    
  }
  40://'Регион(c уч.доп.аналитики)' //10
  { need_dop_an:=True
    need_cex:=true;
    
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :=''
  }
  41://'ОКВЭД (c уч.доп.аналитики)'  //11
  { need_dop_an:=True
    need_cex:=true;
    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :=''
  }
  42://'Подразделение+доп/аналитика' //12
  { need_dop_an:=True
    need_cex:=true;
    mTable[Len1] := coKatPodr;
    mVnKau[Len1]:=2;
    mName[Len1]  :=''
  }
  43: //Объект строительства
  { //need_dop_an:=True
    need_cex:=true;
    need_kaud1:=true;

    mTable[Len1] := coTmpKatalog;
    mName[Len1]  :=''
  }
  end;   

} //Procedure Add_Group1(ww_num:word;ww_gr :word;ww_ie:word;ww_iesv:word);
//========================================
Procedure MakeBounds_Svod;
{ PushBounds(tnSumvidop);PushBounds(tnNachisl);
  PushBounds(tnSumvidud);PushBounds(tnUder);
  PushBounds(tnPerevod) ;PushBounds(tnPerevodTek);
  PushBounds(tnNenach);
  if (UserDeskRep.ResWord[40] and 16)>0 // по месяцу за который
  { if (UserDeskRep.ResWord[1] and 1)>0
    { if GetMarkerCount(MarkerVidopl)>0
      { PushBounds(tbbyZCVSumvidop)
        PushBounds(tbbyZCVNenach)
        PushBounds(tbbyZCVNachisl)
        PushBounds(tbbyZCVPerevod)
        PushBounds(tbbyZCVPerevodTek)
      }
      else
      { PushBounds(tbbyZCSumvidop)
        PushBounds(tbbyZCNenach)
        PushBounds(tbbyZCNachisl)
        PushBounds(tbbyZCPerevod)
        PushBounds(tbbyZCPerevodTek)
      }
      if GetMarkerCount(MarkerVidUd)>0
      { PushBounds(tbbyZCVSumvidud)
        PushBounds(tbbyZCVUder)
      }
      else
      { PushBounds(tbbyZCSumvidud)
        PushBounds(tbbyZCUder)
      }
     
    } 
    else
    { if GetMarkerCount(MarkerVidopl)>0
      { PushBounds(tbbyZVSumvidop)
        PushBounds(tbbyZVNenach)
        PushBounds(tbbyZVNachisl)
        PushBounds(tbbyZVPerevod)
        PushBounds(tbbyZVPerevodTek)
      }
      else
      { PushBounds(tbbyZSumvidop)
        PushBounds(tbbyZNenach)
        PushBounds(tbbyZNachisl)
        PushBounds(tbbyZPerevod)
        PushBounds(tbbyZPerevodTek)
      }
      if GetMarkerCount(MarkerVidUd)>0
      { PushBounds(tbbyZVSumvidud)
        PushBounds(tbbyZVUder)
      }
      else
      { PushBounds(tbbyZSumvidud)
        PushBounds(tbbyZUder)
      }
    }
  
  } //if (UserDeskRep.ResWord[40] and 16)>0
  else
  { if (UserDeskRep.ResWord[1] and 1)>0
    { if GetMarkerCount(MarkerVidopl)>0
      { PushBounds(tbbyCVSumvidop)
        PushBounds(tbbyCVNenach)
        PushBounds(tbbyCVNachisl)
        PushBounds(tbbyCVPerevod)
        PushBounds(tbbyCVPerevodTek)
      }
      else
      { PushBounds(tbbyCSumvidop)
        PushBounds(tbbyCNenach)
        PushBounds(tbbyCNachisl)
        PushBounds(tbbyCPerevod)
        PushBounds(tbbyCPerevodTek)
      }
      if GetMarkerCount(MarkerVidUd)>0
      { PushBounds(tbbyCVSumvidud)
        PushBounds(tbbyCVUder)
      }
      else
      { PushBounds(tbbyCSumvidud)
        PushBounds(tbbyCUder)
      }
     
    } 
    else
    { if GetMarkerCount(MarkerVidopl)>0
      { PushBounds(tbbyVSumvidop)
        PushBounds(tbbyVNenach)
        PushBounds(tbbyVNachisl)
        PushBounds(tbbyVPerevod)
        PushBounds(tbbyVPerevodTek)
      }
      if GetMarkerCount(MarkerVidUd)>0
      { PushBounds(tbbyVSumvidud)
        PushBounds(tbbyVUder)
      }
    }
  }
  if GetMarkerCount(MarkerVidper)>0
  { AddBounds(tbbyVidper)
    AddBounds(tbbyVidperT)
  }
  pushbounds(tbbyLschet_Lstab);
} // MakeBounds_Svod

Procedure MakeNameColumnFot;
var i,j:word;
{ kol_nalog:=0;
  if GetMarkerCount(MarkerVidper)>0
  { for(i:=0;i<GetMarkerCount(MarkerVidper);i++)
    { if not GetMarker(MarkerVidper, i, j) then continue;
      if kol_nalog<10
      { kol_nalog++;
        dm_nalog[kol_nalog]:=j;
        if j<100 and j>0
          dm_nalog1[j]:=kol_nalog;
      }  
    }
  } //if GetMarkerCount(MarkerVidper)>0
  else
  { resetbounds(#perech1)
    _loop perech1
    {  if kol_nalog<10
      { kol_nalog++;
        dm_nalog[kol_nalog]:=perech1.vidper;
        if perech1.vidper<100 and perech1.vidper>0
          dm_nalog1[perech1.vidper]:=kol_nalog;
      }
    
    }
    setbounds(#perech1)
    if (UserDeskRep.ResWord[40] and 512)>0
    { delete all tmp_KLPEROPL ;
      insert into tmp_KLPEROPL select KLPEROPL.VIDOPL,KLPEROPL.VIDPER from KLPEROPL;
    }    
  } //else if GetMarkerCount(MarkerVidper)>0
}
//=====================================
// создание отчета
//=====================================
Function CreateReport01 :boolean;
var ww_dt :date;
    ww_su:double;
    i,j :word;

{ CreateReport01:=false;
  if UserDeskRep.ResWord[38]=0
  { message('Нужно отметить хотя бы один пункт в "Вывести"')
    exit;
  }
  MakeNameColumnFot;
  //logfilenm:='!wt_balans.log'
  // для свертки подразделений
  iPodrFilterDef.katpodrGetLevelInit;
  iPodrFilterDef.SetLogFile(if(logfilekl,logfilenm,'')) 
  //=======================
  //MyLogwrite(true,'START')
  //=======================
  w_vidopl_97:=0;
  resetbounds(#klvidopl1)
  if (getfirst fastfirstrow klvidopl1 
    where ((97==klvidopl1.nalg(noindex) )))=0 
  then w_vidopl_97:=klvidopl1.vidopl
  mylogwrite(false,'Имущественный вычет '+string(w_vidopl_97))
  setbounds(#klvidopl1)
  c1:=GetMarkerCount(MarkerPodr)
  c2:=GetMarkerCount(MarkerVidopl)
  c3:=GetMarkerCount(MarkerVidud)
  c4:=GetMarkerCount(MarkerVidper)
  need_deb:=false;need_kred:=false;
  need_cex:=false;need_person:=false;need_sisopl:=false;need_kateg:=false;need_post:=false;
  need_vidopl:=false;need_chozoper:=false;
  need_param:=false;  need_mes:=false;
  need_nrec:=false;
  need_kaud1:=false;  need_kaud2:=false;  need_kaud3:=false;  need_kaud4:=false;  need_kaud5:=false;  need_kaud6:=false;
  need_kauk1:=false;  need_kauk2:=false;  need_kauk3:=false;  need_kauk4:=false;  need_kauk5:=false;  need_kauk6:=false;
  need_dop_an:=false;
  //=======================
  CurGroup:=0;
  len1:=0
  if (UserDeskRep.ResWord[1] and 1)>0 need_cex:=true else c1:=0;
  if (UserDeskRep.ResWord[1] and 2)>0 need_kateg:=true ;
  if (UserDeskRep.ResWord[1] and 4)>0 need_post:=true;
  if (UserDeskRep.ResWord[40] and 512)>0 need_vidopl:=true;
  
   Add_Group1(1,UserDeskRep.ResWord[11],UserDeskRep.ResWord[12],UserDeskRep.ResWord[31])
   Add_Group1(2,UserDeskRep.ResWord[13],UserDeskRep.ResWord[14],UserDeskRep.ResWord[32])
   Add_Group1(3,UserDeskRep.ResWord[15],UserDeskRep.ResWord[16],UserDeskRep.ResWord[33])
   Add_Group1(4,UserDeskRep.ResWord[17],UserDeskRep.ResWord[18],UserDeskRep.ResWord[34])
   Add_Group1(5,UserDeskRep.ResWord[19],UserDeskRep.ResWord[20],UserDeskRep.ResWord[35])
   Grp_Count:=Len1
   mylogwrite(false,'Число уровней '+string(Grp_Count));
  
  //================
 if((UserDeskRep.ResWord[40] and 8 )=0 )
 { MakeBounds_Svod;
 }// if((UserDeskRep.ResWord[40] and 8 )=0 
 else
 { CREATEZAPROS;
 } //else if((UserDeskRep.ResWord[40] and 8 )=0 
  //======= 
  logfilekl:=if((UserDeskRep.ResWord[40] and 4 )>0,true,false)
  ww_dt:=UserDeskRep.ResDate[1]
  if UserDeskRep.ResDate[1]>UserDeskRep.ResDate[2]
  { message('Дата конца периода меньше начала')
    exit;
  }
  //CurCode:=0;
  ClearTable(CurCode,False)
   do 
   { 
     w_YearRas:=year(ww_dt)
     w_MesRas :=month(ww_dt)
     type_period:=0;
     if (UserDeskRep.ResWord[40] and 16)=0
     {  // по месяцу в котором
       if w_YearRas=YearCur and w_MesRas=MesCur
       { type_period:=1;
       }
       else
       { type_period:=2;
       }
       
     }
     if w_MesRas=month(UserDeskRep.ResDate[2]) and year(UserDeskRep.ResDate[2])=w_YearRas
     { dte:=UserDeskRep.ResDate[2]
     }
     else
     { dte:=date(last_day(ww_dt),w_MesRas,w_YearRas)
     }
     if w_MesRas=month(UserDeskRep.ResDate[1]) and year(UserDeskRep.ResDate[1])=w_YearRas
     { dtb:=UserDeskRep.ResDate[1]
     }
     else
     { dtb:=date(1,w_MesRas,w_YearRas)
     }
     day_b:=day(dtb); day_e:=day(dte);
     mylogwrite(false,'=========Дата == '+Datetostr(dtb,'DD/MM/YYYY')
        +'-'+Datetostr(dte,'DD/MM/YYYY')
        +','+string(day_b)+','+string(day_e))
     //========================= 
     if not SborData01 then exit;
     //=========================
     if month(ww_dt)=month(UserDeskRep.ResDate[2]) and year(UserDeskRep.ResDate[2])=year(ww_dt)
     { break
     }
     ww_dt:=add_months(ww_dt,1)
     
   } while true;
   if not inextVisual('Подсчет итогов') then exit;
   // Построить дерево
   if not inextVisual('Построение дерева') then exit;
   
   // будем строить только для определенных отчетов
   if  UserDeskRep.ResWord[39]=1
   { cRep := InitTreeBuilder(#Tobot);
     if cRep=0 { message('Ошибка инициализации дерева!'); exit; }
     Var nParam : LongInt;

     for(i:=1;i<=Grp_Count;i:=i+1)
     { nParam:=if(mkol[i]=0,tsNoExpand,0)
       if (UserDeskRep.ResWord[40] and 1024 )>0 and mVnKau[i]>0
       { nParam := nParam Or TuneKAULevel( cRep, i, mVnKau[i] )
       }
       TuneLevel(cRep, i, mTable[i], nParam, mName[i],0 , mGrupSort[i], mkol[i]);
       for(j:=1;j<=30;j++)
       {  TuneSum(cRep, j, 0, 0);
       }
       Mylogwrite(false,'Группировки '+string(mTable[i])+','+mName[i]+','+string(mkol[i])+','+string(mIeSvertka[Len1]))
     }
     SetReportStyles(cRep, rsNodeReport+if(logfilekl,rsShowStat,0), UserDeskRep.RepName)
     BuildTunedTree(crep, CurCode); 
     if (cRep<>0)
       DoneTreeBuilder(cRep);
   }    
   StopVisual('',0)  
   TreeGetFirstEx(MainTree );
   case UserDeskRep.ResWord[39] of  
   1: RunWindowModal(wnReport01) ;
   end; 
   rescanpanel(#UserDeskRep)

  CreateReport01:=true
} //CreateReport01
//===================================
Function PrintDoc_01(ww_type:word) : boolean;
VAR
 boIsTerm :boolean;
 wnpp:longint;
 wwkl:boolean;
 wLevel_Start: word;
 wCurLevel,wPrevLevel:longint;
 i:word;
{ PrintDoc_01 :=false
  wexrow:=2;wexcol:=1;
  if ExcelInit(nmtemplate,true,2009)<>0
  { message('Ошибка инициализации шаблона')
    exit ;
  }
  StartNewVisual(vtNumericVisual,vfTimer+vfBreak,'Идет печать...', vfTimer+vfBreak);
  MyPutExcel('Отчет о оплате труда за период с '
    +DateToStr(UserDeskRep.ResDate[1],'DD/MM/YYYY по ') 
    +DateToStr(UserDeskRep.ResDate[2],'DD/MM/YYYY') 
    ,10,0,-1,-1)
  if (UserDeskRep.ResWord[40] and 32)>0
  { wexrow:=7;wexcol:=6;
    for(i:=1;i<=kol_nalog;i++)
    { w_vidper:=dm_nalog[i]
      if getfirst fastfirstrow perech1=0
      { MyPutExcel(perech1.nameper,0,0,-1,-1)
      }
    }
    MyPutExcel('Итого стп.налогов',0,0,-1,-1)
    wexrow:=8;wexcol:=6;
    for(i:=1;i<=kol_nalog+1;i++)
    { MyPutExcel(string(wexcol),0,0,-1,-1)
    }
    xlSetbackcolor(0FFBBFFh, 7, 6, wexrow, 5+kol_nalog)

  } //if (UserDeskRep.ResWord[40] and 32)>0 
  if (UserDeskRep.ResWord[40] and 512)>0
  { wexrow:=7;wexcol:=6;
    for(i:=1;i<=kol_nalog;i++)
    { w_vidper:=dm_nalog[i]
      if getfirst fastfirstrow perech1=0
      { MyPutExcel('База '+perech1.nameper,0,0,-1,-1)
      }
    }
    wexrow:=8;wexcol:=6;
    for(i:=1;i<=kol_nalog;i++)
    { MyPutExcel(string(wexcol),0,0,-1,-1)
    }
    xlSetbackcolor(0FFBBFFh, 7, 6, wexrow, 5+kol_nalog)

  } //if (UserDeskRep.ResWord[40] and 32)>0 
  HeaderStrCount:=8;  
  wexrow:=HeaderStrCount+1;
  MyXlCreaMatrix(10000,70)
  wexrow:=wexrow-1;
  case ww_type of
  0,2: wwkl:=TreeGetFirstEx(MainTree );
  1: { wwkl:=true; wLevel_Start:=TreeLevel(MainTree);}
  else exit;
  end;
  wnpp:=0;
  if  wwkl
  do
  {   if not nextvisual then break;
      Mylogwrite(false,'TempDescr.name='+TempDescr.name+'/'+string(wnpp))
      wPrevLevel := wCurLevel;
      wCurLevel  := TreeLevel(MainTree);
      boIsTerm   := TreeIsTerminal( MainTree );
      if (not boIsTerm) //or ((UserDeskRep.ResWord[40] and 8)>0) 
      { wexrow:=wexrow+1; wexcol:=1;
        wnpp:=wnpp+1;
        MyPutExcelNumber(WNPP,1,10,0,-1,-1)
        MyPutExcel(lpad(' ',wcurlevel*2)+PrintName(TempDescr.name),10,0,-1,-1)
        for(i:=1;i<=3;i++)
        { MyPutExcelNumber(round(TempDescr.sum[i],2),1,10,0,-1,-1)
        }// for(i:=3;i<=64) 
        if (UserDeskRep.ResWord[40] and 32)>0
        { for(i:=11;i<=10+kol_nalog;i++)
          { MyPutExcelNumber(round(TempDescr.sum[i],2),1,10,0,-1,-1)
          }// for(i:=3;i<=64) 
          MyPutExcelNumber(round(TempDescr.sum[21],2),1,10,0,-1,-1)
        }
        if (UserDeskRep.ResWord[40] and 512)>0
        { for(i:=31;i<=30+kol_nalog;i++)
          { MyPutExcelNumber(round(TempDescr.sum[i],2),1,10,0,-1,-1)
          }// for(i:=3;i<=64) 
        }
      } //  
      case ww_type of
      0:
      { wwkl:=TreeGetNextEx(MainTree)
      }
      1:
      { wwkl:=TreeGetNextEx(MainTree)
        if wwkl
        if  ww_type=1 and TreeLevel(MainTree)<=wLevel_Start wwkl:=false;
      }
      2:
      { wwkl:=TreeGetNext(MainTree)
      }
      else
      { wwkl:=false;
      }
      end;
  }    
  While ( wwkl );
  MyxlWriteMatrix(wexrow);
  xlFreeMatrix;
  
  matrixkl:=False;
  MyxlFrameCells(63, 2, 1, 1, HeaderStrCount,1,wexrow,5);
  if (UserDeskRep.ResWord[40] and 32)>0
  { MyxlFrameCells(63, 2, 1, 1, HeaderStrCount-2,6,wexrow,6+kol_nalog);
  }   
  //xlSetFontStyle(xlBold, wexrow,1,wexrow,17);
  MyXlEnd;
  StopVisual('',0);
  PrintDoc_01 :=true;
}