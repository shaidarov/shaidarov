table struct SelPodr( NREC	: comp)		//Код записи
with index (ind1=NREC);
table struct DopSoglPers(	NOMDOGOVOR	: string,	DATDOGOVOR	: string,	SOTRUDNIK	: string,	ADDRESS		: string,	PASSPORT	: string,  SEX		: byte,	INICIALS	: string );
Interface DopSoglRep                    
create view 
var 
  mMarkDoc	: longint;
  IndexNo       : longint;
  dateRep	: date; 
  podrfilter	: boolean;
  stop		: boolean;
  typerep	: byte;
as select * from PERSONS, DOPINFO, APPOINTMENTS, selPodr, ForMarks, SYNONYM APPOINTMENTS APPOINTFIRST, SYNONYM CATALOGS CATALOGSPOST, SYNONYM CATALOGS CATALOGSDEP, PASSPORTS,
                 SYNONYM PERSONS PERSONSMARK, SYNONYM DOPINFO DOPINFOMARK, SYNONYM APPOINTMENTS APPOINTMENTSMARK, SYNONYM selPodr selPodrMark, SYNONYM CATALOGS CATALOGSPOSTMARK, SYNONYM CATALOGS CATALOGSDEPMARK,
		 SYNONYM PASSPORTS PASSPORTSMARK, SYNONYM APPOINTMENTS APPOINTFIRSTMARK 
where ((
        Word(0) 			== ForMarks.Choice
and	Formarks.tPerson		== PERSONSMARK.NREC
and 	PERSONSMARK.NREC		== DOPINFOMARK.CPERSON
and	PERSONSMARK.APPOINTCUR		== APPOINTMENTSMARK.NREC
and	APPOINTMENTSMARK.POST		== CATALOGSPOSTMARK.NREC
and	APPOINTMENTSMARK.DEPARTMENT	== SelPodrMark.NREC
and	APPOINTMENTSMARK.DEPARTMENT	== CATALOGSDEPMARK.NREC
and	PERSONSMARK.PASSPRUS		== PASSPORTSMARK.NREC
and	PERSONSMARK.APPOINTFIRST	== APPOINTFIRSTMARK.NREC
and 	PERSONS.NREC		== DOPINFO.CPERSON
and	PERSONS.APPOINTCUR	== APPOINTMENTS.NREC
and	APPOINTMENTS.POST	== CATALOGSPOST.NREC
and	APPOINTMENTS.DEPARTMENT	== SelPodr.NREC
and	APPOINTMENTS.DEPARTMENT	== CATALOGSDEP.NREC
and	PERSONS.PASSPRUS	== PASSPORTS.NREC
and	PERSONS.APPOINTFIRST	== APPOINTFIRST.NREC
));
form DopSoglReport('DopSoglReport.out');
procedure ReadMarkers;
{ delete all selPodr;
  podrfilter := false;
  var i : word;
  var z : comp;
  mMarkDoc := InitMarker('CatalogsMarker',8,1,1);
  z := 0
  for(i:=0; i < GetMarkerCount(mMarkDoc); i:=i+1)
  { podrfilter := true;
    IndexNo := i;
    GetMarker(mMarkDoc,IndexNo,z);
    insert into SelPodr set NREC := z;  }
  donemarker(mMarkDoc,'CatalogsMarker');
}
Procedure OutFullForm;
{  _loop DopSoglPers
  { DopSoglReport.PutEventByID(feDoLoop,fcDopSoglRep)	//Цикл с проверкой checkenter
    DopSoglReport.Write(DopSoglPers.NOMDOGOVOR);
    DopSoglReport.Write(DopSoglPers.DATDOGOVOR,'DD.MM.YYYY');
    DopSoglReport.Write(DopSoglPers.SOTRUDNIK);
    DopSoglReport.Write(DopSoglPers.ADDRESS);
    DopSoglReport.Write(DopSoglPers.PASSPORT);
    DopSoglReport.Write(DopSoglPers.SEX);
    DopSoglReport.Write(DopSoglPers.INICIALS);
    DopSoglReport.PutEventByID(feBreak,fcDopSoglRep);	  }
  if not DopSoglReport.Error DopSoglReport.ShowFile('Формирование доп. соглашений');}
procedure GetReport;
{
  var count : word;
  var dirpost, dirfio : string;
  var myorg	: comp;
  var adr : AddressFunc;
  var stadr	: string;
  var numcont	: string;
  var datcont	: date;
  var persfunc	: StringFunctions;
  var inic	: string;
  count := 0;
  StartNewVisual(vtNumericVisual,vfBreak,'Формирование отчета ...',0);
  stop := false;
  _loop ForMarks where (( Word(0) == ForMarks.Choice ))
  {    if PERSONSMARK.DISDATE > 0 continue;
    inic := SubStr(persfunc.GetLastName(Formarks.FIO),1,1) + '.' + SubStr(persfunc.GetPatronymic(Formarks.FIO),1,1) + '. ' + persfunc.GetFirstName (Formarks.FIO);
    if PERSONSMARK.APPDATE < date(1,1,2002)
    {      numcont := APPOINTMENTSMARK.CONTRACTNMB;
      datcont := APPOINTMENTSMARK.CONTRACTDATE;    }
    else
    {      numcont := APPOINTFIRSTMARK.CONTRACTNMB;
      datcont := APPOINTFIRSTMARK.CONTRACTDATE;    }
    if stop break;
    count := count + 1;
    insert into DopSoglPers set
	DopSoglPers.NOMDOGOVOR	:= numcont,
	DopSoglPers.DATDOGOVOR	:= if(datcont>0,DateToStr(datcont,'DD.MM.YYYY'),''),
	DopSoglPers.SOTRUDNIK	:= Formarks.FIO,
	DopSoglPers.ADDRESS	:= adr.GetFullAddress(PERSONSMARK.PASSPADDR),
	DopSoglPers.PASSPORT	:= PASSPORTSMARK.SER + ' № ' + PASSPORTSMARK.NMB + ', выдан ' + DateToStr(PASSPORTSMARK.GIVENDATE, 'DD.MM.YYYY') + ' ' + PASSPORTSMARK.GIVENBY,
	DopSoglPers.SEX		:= if(PERSONSMARK.SEX = 'М',0,1),
	DopSoglPers.INICIALS	:= inic;
    if(not NextVisual) 
    {      stop := true;
      break;    }
  }
  if count = 0
  {
    _loop PERSONS
    {
      if podrfilter and not isvalid(#SelPodr) continue;
      if PERSONS.DISDATE > 0 continue;
      inic := SubStr(persfunc.GetLastName(PERSONS.FIO),1,1) + '.' + SubStr(persfunc.GetPatronymic(PERSONS.FIO),1,1) + '. ' + persfunc.GetFirstName (PERSONS.FIO);
      if PERSONS.APPDATE < date(1,1,2002)
      {        numcont := APPOINTMENTS.CONTRACTNMB;
        datcont := APPOINTMENTS.CONTRACTDATE;      }
      else
      {        numcont := APPOINTFIRST.CONTRACTNMB;
        datcont := APPOINTFIRST.CONTRACTDATE;      }
      count := count + 1;
      if stop break;
      insert into DopSoglPers set
	DopSoglPers.NOMDOGOVOR	:= numcont,
	DopSoglPers.DATDOGOVOR	:= if(datcont>0,DateToStr(datcont,'DD.MM.YYYY'),''),
	DopSoglPers.SOTRUDNIK	:= PERSONS.FIO,
	DopSoglPers.ADDRESS	:= adr.GetFullAddress(PERSONS.PASSPADDR),
	DopSoglPers.PASSPORT	:= PASSPORTS.SER + ' № ' + PASSPORTS.NMB + ', выдан ' + DateToStr(PASSPORTS.GIVENDATE, 'DD.MM.YYYY') + ' ' + PASSPORTS.GIVENBY,
	DopSoglPers.SEX		:= if(PERSONS.SEX = 'М',0,1),
	DopSoglPers.INICIALS	:= inic;
      if(not NextVisual) 
      {        stop := true;
        break;      }
    }
  }
  OutFullForm;
  StopVisual('',0); 
}
HandleEvent
   cmInit :
   {
     ReadMarkers;
     GetReport;
   }
end;

end.
