/*
ТДФ00041 от 21/01/2008
fTT"Сырье и материалы"

возмажна следующая схема работы
в первой проводке [ЭТАП:"НАЧ"]
в последующей     [ЭТАП:"СЛЕД"]
в последней [ЭТАП:"КОН"] (без фильтров)
тогда все что не отобралось в предыдущих проводках попадет в последнюю
&VIP_[Obj:"SCHFACT"][ТИП:"ВКЛ"][АТТР:"4612130662701380473"][АТТРФЛТ:"DDD"][СУМ:НДС][ЭТАП:"НАЧ"]
&VIP_[Obj:"SCHFACT"][ТИП:"ВКЛ"][СУМ:НДС][ЭТАП:"КОН"]
Измерительные и регулирующие приборы;Вычислительная техника;Транспортные средства;Библиотечный фонд;Прочие активы стоимостью не более 10 тыс. руб.;Инвентарь
описание изменений
//20080425 - отключена проверка по партии и отпускной един.измерения

10 по типу мц
01 = fTT"Сырье и материалы"
02 = fTT"Покупные полуфабрикаты, комплект., констр., детали"
03 = fTT"Топливо"
04 = fTT"Тара и тарные материалы"
05 = fTT"Запасные части"
06 = fTT"Строительные материалы"
07 = fTT"Активы стоимостью не более 10 тыс. руб.;Хоз.инвентарь;Машины и оборудование#"
     fTT"Измерительные и регулирующие приборы;Вычислительная техника;Транспортные средства#"
     fTT"Библиотечный фонд;Прочие активы стоимостью не более 10 тыс. руб.;Инвентарь#"     
08 = fTT"Специальная оснастка и специальная одежда"
10 = fTT"Прочие материалы"
11 = fTT"Трубы"
99 = fU

86 fGP"006"






┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                                     TEST_txoapi_sCHfACT                                                        │
├────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤
│Регистр учета: План счетов 2001г. (в ред. Приказа Минфина РФ от 07.05.2003 №38н)                                                │
├────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───┬────────┤
│ No │ Корреспонденция                                                                                              │Вх.│ Процент│
├────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───┼────────┤
│   1│ ДЕБЕТ : 19.02                                                                                                │ + │100.0000│
│    │ КАУ 1 : <авто - Организации>                                                                                 │   │        │
│    │ КАУ 2 : <авто - Материальные ценности>                                                                       │   │        │
│    │ КАУ 3 : <авто - Документы-основания>                                                                         │   │        │
│    │ КАУ 4 : <авто - Центры ответственности>                                                                      │   │        │
│    │ Подразделение: <авто - Подразделения>                                                                        │   │        │
│    ├──────────────────────────────────────────────────────────────────────────────────────────────────────────────┤   │        │
│    │ КРЕДИТ: 68.03                                                                                                │   │        │
│    │ Подразделение: <авто - Подразделения>                                                                        │   │        │
│    ├──────────────────────────────────────────────────────────────────────────────────────────────────────────────┤   │        │
│    │ Дата проводки: <авто - дата>                                                                                 │   │        │
│    │ Содержание проводки:                                                                                         │   │        │
│    │ Алгоритм в НДЕ     : &VIP_[Obj:"SCHFACT"][ТИП:ВКЛ][СУМ:НДС]                                                  │   │        │
│    │ Алгоритм в валюте <по настройке>:                                                                            │   │        │
│    │ Алгоритм количество:                                                                                         │   │        │
│    │ Вычисление формул  : Вычислять все формулы по списку                                                         │   │        │
│    │ Фильтр для циклической обработки:                                                                            │   │        │
│    │ Циклическая обработка: <Организации> <Подразделения> <Материальные ценности> <Документы-основания> <Центры   │   │        │
│    │                        ответственности>                                                                      │   │        │
│    │ Результат: положительная, при смене знака изменить корреспонденцию счетов                                    │   │        │
│    │ Сумму в проводке: не конвертировать                                                                          │   │        │
│    │ Внешняя классификация:                                                                                       │   │        │
└────┴──────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───┴────────┘


*/

#ifdef ComponentVersion
#Component "F_TxoApi"
#end

#include TxoApi.vih

VipInterface Txo_PLporBASEDOC implements ObjTxoIdentPlugin
#ifdef ATL51
 licensed (FREE) 
#endif 

;

Interface Txo_PLporBASEDOC cacheable;
table struct tmp_sch
( sch :string[20] ,
  sub :string[20] ,
  name:string  ,
  nrec :comp
)
with index
( tmp_sch01 =sch+sub
) ;
var
  wsch ,wsub : string ;
  wschm ,wsubm : string ;
  wsch_f,wsub_f: string ;
  wsch_tp,wsch_tpm,wwsch_tp :word ; // 0 - затратные, 1 - 73 , 2 - 76
  wwsch ,wwsub: string ;
  wschet_nrec :comp ;
  i: longint ;
create view  vTxo_PLporBASEDOC
var
  CurSoprHoz : comp;
  CurSoprDoc : comp;
  CurDatOb : date;
  curTidk :longint  ;
  MyPlansNo:comp ;
  klfilter:boolean ;
  tp_filtr :word ; // логическое условие
  tp_filtr_mcusl :word ; // тип фильтра по мц услугам
  filtr_mcusl: string ; // фильтр по МЦ
  filtr_arrtval : string ; // фильтр по внешнему атрибуту  
  filtr_attrnam :comp ;
  marker_deist :longint ;
  tp_summ :word ; // 0 - вся сумма, 1 без ндс, 2 ндс
  marker_spstep,IndexNoOt,marker_vib :longint ;
  wnrec :comp ;
  wcpodr,wcpodrm :comp ; // для поиска счета сбусчета
  wattr_table :word ; // для вывода атрибутов по таблице
  wattr_nrec : comp ;
  w_CKAELEM : comp ;
  w_cfpco   : comp ;
  w_cfpco1  : comp ;
  w_cpersons: comp ;
  w_corg    : comp ;
  tp_schet  :word ; // 0 - затратные,1 - 73,2 -76
  wnmdesgr  :string ; // группа организаций по умолчанию
as select Basedoc.nrec 
from
  Basedoc,spstep
,attrnam ,attrval 
,attrnam attrnamk,attrval attrvalk
,attrnam attrnams,attrval attrvals
,stepdoc 
, katmc,groupmc,katusl , groupusl  
,katpodr ,grpodr ,KatOrg 
,KatOrgDescr ,KatOrgDescr KatOrgDescr1
,fpco,fpco fpco1
,planssch
,tmp_sch(tmp_sch01)
, BUHSCHET
, katotped
, spsopr
, spsophoz
, specmtr sopr_specmtr
, stepdoc sopr_stepdoc , basedoc sopr_basedoc   ,katmc sopr_katmc , katusl sopr_katusl
, groupmc sopr_groupmc, groupusl sopr_groupusl
where
((
  CurSoprDoc == Plpor.nrec
 and PlPor.nrec == basefin.cplpor 
 and CurSoprHoz == basefin.csoprhoz(noindex)
// распределение по накладным 
 and CurSoprHoz == spsophoz.csoprhoz
 and spsophoz.cspsopr == spsopr.nrec
 and spsopr.csopr == katsopr.nrec
 and katsopr.cstepdoc == sopr_stepdoc.nrec 
 and sopr_stepdoc.cbasedoc == sopr_basedoc.nrec
 and cospsopr     == sopr_SpecMTR.coTable  
 and spsopr.nrec  == sopr_SpecMTR.cSpec
 and spsopr.cmcusl ==sopr_katmc.nrec
 and sopr_katmc.cgroupmc == sopr_groupmc.nrec
 and spsopr.cmcusl ==sopr_katusl.nrec
 and sopr_katusl.cgroupusl == sopr_groupusl.nrec
 
 //===========================
// по до 
 and basefin.cbasedoc ==  Basedoc.nrec   // накладная
 AND Basedoc.nrec == stepdoc.cbasedoc // до
 and stepdoc.nrec ==   spstep.cstepdoc // спецификация
 and MyPlansNo == planssch.nrec // план счетов
 and w_corg == katorg.nrec // организация
 and KatOrg.nrec == KatOrgDescr.cRec //группа организаций
 and 0 << KatOrgDescr.cgroup(noindex)
 // для установки фильтра по атрибуту
 and filtr_attrnam == attrnam.nrec
 and cospstep == attrval.wtable
 and filtr_attrnam ==attrval.cattrnam
 and spstep.nrec == attrval.crec
  // тип спецификации 
 and spstep.cmcusl ==katmc.nrec
 and katmc.cgroupmc == groupmc.nrec
 and spstep.cmcusl ==katusl.nrec
 and katusl.cgroupusl == groupusl.nrec
 // отпускная единица измерения
 and spstep.cotped == katotped.nrec
 // для вывода анешних атрибутов по таблицам
 and wattr_table == attrnamk.wtable
 and wattr_table == attrvalk.wtable
 and attrnamk.nrec ==attrvalk.cattrnam
 and wattr_nrec == attrvalk.crec
 // для поиска центров ответственности
 and w_cfpco  == fpco.nrec
 and fpco.cnode == fpco1.nrec
 // объект целевого учета
 and cospstep     == SpecMTR.coTable  
 and spstep.nrec  == SpecMTR.cSpec
 // для поиска подразделений
 and wcpodr == katpodr.nrec
 and katpodr.cgrpodr  == GRPODR.Nrec
// счет субсчет во внешнем атрибуте
 and wattr_table    == attrnams.wtable
 and 'Счет/субсчет' == attrnams.name
 and wattr_table    == attrvals.wtable
 and attrnams.nrec  == attrvals.cattrnam
 and wattr_nrec     == attrvals.crec
// группа организаций по умолчанию
 and 1 == KATORGDESCR1.code
 and 0 == KATORGDESCR1.CGROUP
 and wnmdesgr ==  KatOrgDescr1.name
// and SPSCHF.PRNONDS ==spstep.price 
// and SPSCHF.PRICE   ==spstep.PRICE 
));
Const
  idVipInfo        = '&VIP[Obj:"SchFact"]';
  idVipTag         = 'SchFact';
end;
//**************************Наименование интерфейса
function GetInfo : string;
{
  GetInfo := 'Формирование проводок по книге покупок';
}
//**************************выбор параметров
function ParamGen : string;
{  var s : String;
   s:='' ;
   s :='['+'ТИП:'+chr(34)+if(tp_filtr=0,'ВКЛ','ИСКЛ')+chr(34)+']';
   if tp_filtr_mcusl>0
   { s :=s+'['+'ТИПМЦУСЛ:'+chr(34)+string(tp_filtr_mcusl)+chr(34)+']';
     s :=s+'['+'ФЛТМЦУСЛ:'+chr(34)+filtr_mcusl+chr(34)+']';
   }
   if filtr_attrnam>0
   {  s :=s+'['+'АТТР:'+chr(34)+string(filtr_attrnam)+chr(34)+']';
      s :=s+'['+'АТТРФЛТ:'+chr(34)+string(filtr_arrtval)+chr(34)+']';
   }
   if tp_summ>0
   { s:=s+'[СУМ:' //[
     case tp_summ of 
     1:s:=s+'"НДС"' ;
     2:s:=s+'"БЕЗНДС"' ;
     3:s:=s+'"NREC"' ;
     4:s:=s+'"ПРИХ"' ;
     5:s:=s+'"РАСХ"' ;
     end ;
     s:=s+ ']';    
   }
   if wsch_f<>''
   { s:=s+'[СЧЕТ:"'+wsch_f+'"]';
     if wsub_f<>''
        s:=s+'[СУБСЧ:"'+wsub_f+'"]';
   }
   else
   { case tp_schet of
     1: s:=s+'[ТИПСЧ:"ЗАТР"]' ;
     2: s:=s+'[ТИПСЧ:"73"]' ;
     3: s:=s+'[ТИПСЧ:"76"]' ;
     end ;
   }  
   ParamGen := s;
}
//**************************Разбор параметров при обработке в ТХО
procedure ParamParser(hTxo : longint);
var 
!   s : String;
    i : Longint;
{  tp_filtr :=0 ;tp_filtr_mcusl:=0 ;filtr_mcusl:='' ; 
   tp_schet:=0 ;
   filtr_attrnam:=0 ;filtr_arrtval:='' ;tp_summ:=0 ;
   wsch_f:='' ;wsub_f:=''
   for(i:=1; i<=TxoParamCount(hTxo); i:=i+1)
   { 
     case TxoParamName(hTxo,i) of
     'ТИП'      : tp_filtr :=if(TxoParamValue(hTxo,i)='ИСКЛ',1,0) ;
     'ТИПМЦУСЛ' : tp_filtr_mcusl:=word(TxoParamValue(hTxo,i))   ;
     'ФЛТМЦУСЛ' : set filtr_mcusl:=TxoParamValue(hTxo,i)        ;
     'АТТР'     : set filtr_attrnam:=comp(TxoParamValue(hTxo,i));
     'АТТРФЛТ'  : set filtr_arrtval:=TxoParamValue(hTxo,i)      ;
     'СУМ'      : 
     { case TxoParamValue(hTxo,i) of
       'НДС' : tp_summ:=1 ;
       'БЕЗНДС' : tp_summ:=2 ;
       'NREC' :tp_summ:=3 ;
       'ПРИХ' :tp_summ:=4 ;
       'РАСХ' :tp_summ:=5 ;
       else tp_summ:=0 ;
       end ;
     }  
     'ТИПСЧ' :
     { case TxoParamValue(hTxo,i) of
       'ЗАТР': tp_schet:=1;
       '73'  : tp_schet:=2;
       '76'  : tp_schet:=3;
       else {  tp_schet:=0;}
       end ;
     }
     'СЧЕТ':
     { wsch_f:=TxoParamValue(hTxo,i) ;
     }
    'СУБСЧ':
     { wsub_f:=TxoParamValue(hTxo,i) ;
     }
     end ;
   }
   Rereadrecord ;

} //procedure ParamParser(hTxo : longint);

//**************************Окно Фейса
Window winParam 'Параметры идентификатора' (,,sci13Esc) EscClose, DoAccept;
Show at (10,1,90,28);
Screen scInfo 'Информация';
table attrnam;
Fields
 tp_filtr : noprotect ;
 tp_filtr_mcusl: noprotect ;
 filtr_mcusl : noprotect,pickbutton ;
 Attrnam.name : protect ,pickbutton ;
 filtr_arrtval : noprotect ;
 tp_summ : [list 0 'Вся сумма','НДС','БЕЗ НДС','NREC','Цена пр.ордера','Цена расх.ордера'],protect ;
 tp_schet: [list 0 'Все','Затратные','73(сотрудники)','76(организация)'],protect ;
 wsch_f : noprotect ;
 wsub_f : noprotect ;
   buttons
        cmOk, default,, '',,;
        cmCancel,,, '',,;
<<
 Установка параметров
 Вид фильтра по спецификации    'Режим 0'
 (.) входит в фильтр   `        'подр.,мол куда'
 (.) не входит в фильтр`        'объект строит.из спец.'
 Фильтровать по МЦ/Услугам      'счет/субсчет из подр.'
 (.) Нет       `                'Режим 1'
 (.) Только МЦ `                'по вн.атриб.к спец.'  
 (.) По заданой МЦ`             'счет/субсчет из группы МЦ'
 (.) По заданой Группе МЦ`      'Режим 2'  
 (.) Только Услуги`             'по вн.атриб.к накл.'  
 (.) По заданой Услуге`         'Режим 9 код 9999'
 (.) По заданой Группе Услуг`   'spstep.nrec'
 Значение фильтра
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   
 Фильтр по атрибуту спец. накладной   
 Атрибут  .@@@@@@@@@@@@@@@@@@@@@@@@@
 Значение .@@@@@@@@@@@@@@@@@@@@@@@@@
 Тип суммы.@@@@@@@@@@@@@@@@@@@@@@@@@ 
 Тип счета.@@@@@@@@@@@@@@@@@@@@@@@@@ или Счет .@@@@ Субсч .@@@
   <.~П~родолжить.>                             <.Отмена.>
>>
End;

HandleEvent
  cmCheckField :
  { case curfield of
    #tp_filtr_mcusl :filtr_mcusl:='' ;
    end ;
    SetWindowTitle(winParam, 'Параметры'+idVipInfo+ParamGen);
    RescanPanel(#attrnam) ;

  } //cmCheckField :
  cmIdle:
    SetWindowTitle(winParam, 'Параметры'+idVipInfo+ParamGen);
  cmInit :
    {
      SetWindowTitle(winParam, 'Параметры'+idVipInfo+ParamGen);
      RescanPanel(#attrnam) ;
      MyPlansNo:=0 ;
      // так то все подкэшируется
      tp_filtr :=0 ;tp_filtr_mcusl:=0 ;filtr_mcusl:='' ; 
      filtr_attrnam:=0 ;filtr_arrtval:='' ;tp_summ:=0 ;
   
    }
  cmPick:
  { case curfield of
    #filtr_mcusl: 
    { wnrec:=0 ;
/*      
Parameters
   wIntMode  // Режим выбора  1 - один.выбор
  ,wKatKau   // Исходная выбираемая аналитика (Например, Код синонима)
  ,cKau      // Выбранная запись
  ,Markers   // Рабочий маркер - надо инициализировать
  #ifdef AddKauParameters
    #AddKauParameters
  #end
*/      
      marker_vib:=InitMarker('marker_vib', 8, 200, 10) 
      ClearMarker(marker_vib) ;
      case tp_filtr_mcusl of
      2 : 
      { runinterface(F_GETAN::GTCGKAU_KATMC,1,4,wnrec,marker_vib)
        if getfirst katmc where (( wnrec == katmc.nrec ))=0 then filtr_mcusl:=katmc.barkod
      }
      3: {
        runinterface(F_GETAN::GTCGKAU_GroupMc,1,8,wnrec,marker_vib)
        if getfirst GroupMc where (( wnrec == groupmc.nrec ))=0 then filtr_mcusl:=groupmc.kod
      }
      5: {
        runinterface(F_GETAN::GTCGKAU_KATUSL,1,5,wnrec,marker_vib)
        if getfirst katUSL where (( wnrec == katusl.nrec ))=0 then filtr_mcusl:=katusl.kod
      }
      6:{
        runinterface(F_GETAN::GTCGKAU_Groupusl,1,9,wnrec,marker_vib)
        if getfirst GroupuSL where (( wnrec == groupusl.nrec ))=0 then filtr_mcusl:=groupusl.kod
      }
      end ; //case tp_filtr_mcusl of
      ClearMarker(marker_vib) ;
      DoneMarker(marker_vib, 'marker_vib') ;
    } //#filtr_mcusl: {
    #Attrnam.name : 
    {
      runinterface(C_EXTCLASS::PICKATTRNAM, filtr_attrnam , cospstep ) ;
    }  //#Attrnam.name : {
    end;
    SetWindowTitle(winParam, 'Параметры'+idVipInfo+ParamGen);
    RescanPanel(#attrnam) ;
  } //cmPick:
  cmDelOnProtect :
  { message('1') ;
    case curfield of
    #filtr_mcusl:{SET  filtr_mcusl:='' ;}
    #Attrnam.name :
    { SET filtr_attrnam:=0 ;
      message('2 '+string(filtr_attrnam)) ;
    }
    end ;
    RescanPanel(#attrnam) ;
    SetWindowTitle(winParam, 'Параметры'+idVipInfo+ParamGen);
  }  //cmDelOnProtect :
  cmOk :
  { MyPlansNo:=1
    closewindow(winParam) ;
  }
End;
End; //Window winParam 'Параметры идентификатора' (,,sci13Esc) EscClose, DoAccept;


  

//**************************Мастер параметров
function ParamMaster : string;
{  ParamMaster := '';
   if( RunWindowModal(winParam)=cmDefault ) or MyPlansNo=1
   {  //PackFields;
      ParamMaster := ParamGen;
   }
}
//************ для вывода аналитик по внешним атрибутам
Procedure   Attr_Analitik(hTxo : longint;wwFlKau_Mode:word ; wwtable :word ;wwnrec :comp ) ;
{ set wAttr_table :=wwtable ;
  set wAttr_nrec  :=wwnrec ;
  _loop fullcache attrnamk
  { if attrnamk.AttrType=5 and isvalid(#attrvalk)
    { if attrvalk.vcomp>0
      { if attrnamk.ROBJECT=5017 and w_CKAELEM=0 then w_CKAELEM:=attrvalk.vcomp ; // элемент затрат
        TxoBodyAddKau(hTxo, wwFlKau_Mode, attrnamk.ROBJECT, attrvalk.vcomp)        
        TxoDebugMsg(hTxo, 'TXO_PLporBASEDOC','аналитика к таблице '+string(wAttr_table)+',значение='+attrvalk.vstring+',режим='+string(wwFlKau_Mode)+'/'+string(attrnamk.ROBJECT)+'/'+string(attrvalk.vcomp))
      }  
    } //if attrnamk.AttrType=5 and isvalid(#attrvalk)
  } //_loop attrnamk
} //Proccedure   Attr_Analitik(hTxo : longint;wwFlKau_Mode:word ; wwtable :word ;wwnrec :comp ) ;

//************ для получения счета субсчета из внешнего атрибута
Function GetSchetAttr(wwtable :word ;wwnrec :comp ) :string ;
{ GetSchetAttr:='' ;
  set wAttr_table :=wwtable ;
  set wAttr_nrec  :=wwnrec ;
  if getfirst fastfirstrow attrnams=0
  { if getfirst fastfirstrow attrvals=0
    { if getfirst fastfirstrow buhschet where (( attrvals.vcomp == buhschet.nrec ))=0
      { GetSchetAttr:=substr(buhschet.schet,2,20) ;
      } 
    } //if getfirst attrvals=0 
  } //if getfirst attrnams=0
} //Function GetSchetAttr(wwtable :word ;wwnrec :comp ) :string ;

//************ для установки счета субсчета во внешний атрибут
Function SetSchetAttr(wwtable :word ;wwnrec :comp ; wnrecbuh:comp ) : boolean ;
{ SetSchetAttr:=false ;
  set wAttr_table :=wwtable ;
  set wAttr_nrec  :=wwnrec ;
  if getfirst fastfirstrow attrnams=0
  { if getfirst fastfirstrow attrvals<>0
    { insert into attrvals set
         attrvals.WTABLE:=wAttr_table 
        ,attrvals.CATTRNAM :=attrnams.nrec
        ,attrvals.CREC :=wAttr_nrec
    }
    if getfirst fastfirstrow buhschet where (( wnrecbuh == buhschet.nrec ))=0
    { update current attrvals  set    
         attrvals.VSTRING:= buhschet.schet+'.'+buhschet.subsch+' '+buhschet.name ,
         attrvals.VCOMP  :=buhschet.nrec ;
      SetSchetAttr:=true ;   
    }     
  } //if getfirst attrnams=0
} //Function GetSchetAttr(wwtable :word ;wwnrec :comp ) :string ;

//********** ищем счет/субсчет по группе подразделений
Function GetSchetByGrPodr(htxo:longint ; wtp :word ) :string ;
{   
    TxoDebugMsg(hTxo, 'TXO_PLporBASE','Ищем счет по группе подразделений в  '+chr(39)+katpodr.name+chr(39))
    case wtp of
    1: { wwsch_tp:=wsch_tpm ; wwsch:=GetSchetAttr(coBasedoc,Basedoc.nrec ) ; }
    2: { wwsch_tp:=wsch_tp  ;wwsch:=GetSchetAttr(cospstep,spstep.nrec ) ; }
    end ;
    wwsub:='' ;
    TxoDebugMsg(hTxo, 'TXO_PLporBASE', 'Счет в атрибутах к '
       + if(wtp=1,'накладной','спец.')
       +' = '+wwsch+',тип='+string(wwsch_tp) ) ;
    if wwsch=''
    {if wwsch_tp=1 
     { wwsch:='73' ; wwsub:='02' ; // будет вшит в ТХО :)
     }
     else
     if wwsch_tp=2 
     { wwsch:='76' ; wwsub:='17' ; // будет вшит в ТХО :)
     }
     else
     {
      if getfirst fastfirstrow grpodr=0
      { 
        TxoDebugMsg(hTxo, 'TXO_PLporBASE','Группа подразделений = '+grpodr.name) ;
        if pos(':',grpodr.name)>0
        { wwsch:=trim(substr(grpodr.name,1,pos(':',grpodr.name)-1))
          if pos('.',wwsch)>0
          { wwsub:=substr(wwsch,pos('.',wwsch)+1,10)
            wwsch:=substr(wwsch,1,pos('.',wwsch)-1)
          }
        }
        else //if pos(':',grpodr.name)>0
        { TxoDebugMsg(hTxo, 'TXO_PLporBASE','ищем счет по выбору !!! ') ;
        
          delete all tmp_sch ;
          i:=0 ;
          do 
          { i:=i+1 ;
            wwsch:=trim(ExtractDelimitedWord(grpodr.name,i,'/')) ;
            if wwsch<>''
            { wwsch:=planssch.kod+wwsch ;
                insert tmp_sch select
                 substr(buhschet.schet,2,20),buhschet.SUBSCH,buhschet.name,buhschet.nrec
                where (( wwsch /==  buhschet.schet )) ;
              TxoDebugMsg(hTxo, 'TXO_PLporBASE','выбрали для счета '+string(wwsch)) ;  
            }
          }   while wwsch<>''
          wwsch:='' ;
        } //else if pos(':',grpodr.name)>0
      }  //if getfirst grpodr=0
     } 
    } //if wwsch='' 
    else wwsub:=buhschet.subsch ;
  
    case wtp of 
    1 : { wschm:=wwsch ;wsubm :=wwsub ;}
    2 : { wsch:=wwsch ;wsub :=wwsub ;}
    end ;
    GetSchetByGrPodr:=wwsch ;
} //Function GetSchetByGrPodr(htxo:longint ; wtp :word ) :string ;

//**************************ОСНОВНАЯ ПРОЦЕДУРА ОБРАБОТКИ ТХО
procedure StoreCycles(hTxo : longint; buf : TTxoApiInfoDoc);
var 
   wstr:string ;
   wkoef_main : double ;
//   wkoef_pos  : double ;
   wsu :double  ;
   wsuval:double ;
   wsu_b :double  ;
   wsuval_b:double ;
{
  set CurSoprDoc := buf.cSoprDoc;
  set CurSoprHoz := buf.cSoprHoz;
  set CurDatOb := buf.DatOb;
  set CurTidk := buf.TidkGal;
  set MyPlansNo:= buf.cplanssch ;
  ParamParser(hTxo);
  TxoAllowRecallStoreCycles(hTxo);
  
  TxoDebugMsg(hTxo, 'TXO_PLporBASEDOC','tp_filtr='+string(tp_filtr))
  TxoDebugMsg(hTxo, 'TXO_PLporBASEDOC','tp_filtr_mcusl='+string(tp_filtr_mcusl))
  TxoDebugMsg(hTxo, 'TXO_PLporBASEDOC','filtr_mcusl='+filtr_mcusl)
  TxoDebugMsg(hTxo, 'TXO_PLporBASEDOC','filtr_attrnam='+string(filtr_attrnam))
  TxoDebugMsg(hTxo, 'TXO_PLporBASEDOC','filtr_arrtval='+filtr_arrtval)
  TxoDebugMsg(hTxo, 'TXO_PLporBASEDOC','tp_summ='+string(tp_summ))
  TxoDebugMsg(hTxo, 'TXO_PLporBASEDOC','tp_schet='+string(tp_schet))
  if wsch_f<>''
  { tp_schet:=999 ;
    TxoDebugMsg(hTxo, 'TXO_PLporBASEDOC','Задан счет! tp_schet='+string(tp_schet)
        + ',wsch_f='+wsch_f+ ',wsub_f='+wsub_f)
  
  }
  if CurTidk>100 // покупки
  { wstr:='Не тот тип документа '+string(CurTidk)
    TxoDebugMsg(hTxo, 'TXO_PLporBASE',wstr)    
    message(wstr)
    exit ; 
  }
  TxoDebugMsg(hTxo, 'TXO_PLporBASE','1 ');
  if getfirst PlPor<>0
  { wstr:=('Не нашли документ '+string(CurTidk))
    TxoDebugMsg(hTxo, 'TXO_PLporBASE',wstr)    
    message(wstr)
    exit ;
  }
  marker_spstep:=InitMarker('', 8, 200, 10) 
  marker_deist:=InitMarker('deist', 8, 200, 10) 
  ClearMarker(marker_spstep) ;
  DoneMarker(marker_spstep,'') ;
  marker_spstep:=InitMarker('', 8, 200, 10) 
    TxoDebugMsg(hTxo, 'TXO_PLporBASE','2');
  IndexNoOt:=0 ;  
  wkoef_main:=1 ; 
  _loop basefin
  { TxoDebugMsg(hTxo, 'TXO_PLporBASE','Счет '+Basedoc.nodoc+DatetoStr(Basedoc.ddoc,' от DD/MM/YYYY'))
    w_cfpco :=Basedoc.cotvpodr ;
    wcpodr:=0 ;
    
    wsu_b:=0
    wsuval_b:=0
    //======================
    // по распределению
    //=====================
    _loop spsophoz
    {  if getfirst spsopr=0 {}
       if getfirst katsopr=0 {}
       if getfirst sopr_stepdoc=0 {}
       if getfirst sopr_basedoc=0 {}
       TxoDebugMsg(hTxo, 'TXO_PLporBASE','Позиция по распределению='+spsopr.npp) ; 
       
       w_cfpco :=sopr_Basedoc.cotvpodr ;
       wcpodr:=0 ;
       wschm :='' ; wsubm:='' ;
       wsu_b:=wsu_b+round(spsophoz.summa,2)
       wsuval_b:=wsuval_b+round(spsophoz.sumval,2)
        if tp_filtr_mcusl>0// отработаем фильтр по мц
        { klfilter:=false
          wstr:='' ;
          case tp_filtr_mcusl of
          1  : { klfilter:=spsopr.prmc=1 }
          2  : 
          { if spsopr.prmc=1 and sopr_katmc.barkod=filtr_mcusl then klfilter:=true ;
           wstr:='МЦ '+sopr_katmc.name+'/'+sopr_katmc.barkod ;
          }
          3  : 
          { if spsopr.prmc=1 and substr(sopr_groupmc.kod,1,length(filtr_mcusl))=filtr_mcusl then klfilter:=true ; 
            wstr:='Гр.МЦ '+sopr_groupmc.name+'/'+sopr_groupmc.kod ;
          }
          4  : { klfilter:=spsopr.prmc<>1 }
          5  : 
          { if spsopr.prmc<>1 and sopr_katusl.kod=filtr_mcusl then klfilter:=true ; 
            wstr:='Усл. '+sopr_katusl.name+'/'+sopr_katusl.kod ;
          }
          6  : 
          { if spsopr.prmc<>1 and sopr_groupusl.kod=filtr_mcusl then klfilter:=true ; 
             wstr:='Гр.Усл '+sopr_groupusl.name+'/'+sopr_groupusl.kod ;
          }
          end ;
          if tp_filtr<>0 klfilter:=not klfilter ;
          if not klfilter then
          { TxoDebugMsg(hTxo, 'TXO_PLporBASE','  не прошла по фильтру,тип '+string(spsopr.prmc)+','+wstr)
            continue ;
          }
        }  //if tp_filtr_mcusl>0

        if filtr_attrnam>0
        { klfilter:=false ;
          if isvalid(tnattrval) 
          { TxoDebugMsg(hTxo, 'TXO_PLporBASE','атрибут= '+attrval.vstring)
            if upcase(substr(attrval.vstring,1,length(filtr_arrtval)))=upcase(filtr_arrtval)
            { 
              klfilter:=true ;
            }  
            if attrval.vcomp=comp(filtr_arrtval) then klfilter:=true ;
          }
          if tp_filtr<>0 klfilter:=not klfilter ;
          if not klfilter then
          { TxoDebugMsg(hTxo, 'TXO_PLporBASE','  не прошла по фильтру на внешний атрибут')
           continue ;
          }
        } //if filtr_attrnam>0
        TxoBodyClear(hTxo);
        TxoDebugMsg(hTxo, 'TXO_PLporBASE','сумма= '+string(spsophoz.summa,0,2)+', '+string(spsophoz.sumval,0,2)+', '+string(wkoef_main,0,5))
        // на коэф по позиции умножать не надо ! можно конечно еще по цене проверку добавить
        set w_corg:=sopr_Basedoc.corg ;
        TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_KatOrg, sopr_Basedoc.corg)        
        TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_Basedoc, sopr_stepdoc.cbasedoc)        
        if spsopr.prmc=1
        { TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_KatMC, spsopr.cmcusl)        
          TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_GroupMC, sopr_katmc.cgroupmc)        
        } else
        { TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_KatUsl, spsopr.cmcusl)        
          TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_GroupUsl, sopr_katusl.cgroupusl)        
        }
        TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_KatParty, spsopr.cparty)        
        TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_BASEDOC, sopr_Basedoc.nrec)        
        TxoBodyAddKau(hTxo, wFlKau_Auto, 5022, sopr_Basedoc.ccalplan)        
        TxoBodyAddKau(hTxo, wFlKau_Mode5, cgKau_katpodr, wcpodrm) // главное подразделение по накладной
                
        if sopr_Basedoc.cOtvPodr>0
        { TxoBodyAddKau(hTxo, wFlKau_Mode3, cgKau_FPCO, sopr_Basedoc.cOtvPodr)        
          
        }
        
        if isvalid(#katorg)
        { TxoDebugMsg(hTxo, 'TXO_PLporBASE',' организация='+katorg.name)
          if isvalid(#KatOrgDescr)
          {  TxoBodyAddKau(hTxo, wFlKau_Auto, 68, KatOrgDescr.cgroup)   
             TxoDebugMsg(hTxo, 'TXO_PLporBASE',' группа ='+string(KatOrgDescr.cgroup))            
          }
          else
          { set wnmdesgr:=if(sopr_Basedoc.VIDDOC<200,'Поставщики','Заказчики')
            if getfirst KatOrgDescr1=0
            { TxoBodyAddKau(hTxo, wFlKau_Auto, 68, KatOrgDescr1.nrec) 
              TxoDebugMsg(hTxo, 'TXO_PLporBASE',' группа ='+KatOrgDescr1.name)       
            }
            else
            { TxoDebugMsg(hTxo, 'TXO_PLporBASE','нет группы '+wnmdesgr)       
            }
          }  
        }  
        
        TxoBodyAddKau(hTxo, wFlKau_Mode9, 9999, spsopr.nrec)     
        w_CKAELEM:=0 ;   
        // заполняем по аналитике
        Attr_Analitik(hTxo, wFlKau_Mode2,coBasedoc,sopr_basedoc.nrec )
        Attr_Analitik(hTxo, wFlKau_Mode2,coBasedoc,sopr_Basedoc.nrec )
        // Эдуард просил - из кау справочника с большим приоритетом
        if spstep.prmc=1 // А может и не надо !
          Attr_Analitik(hTxo, wFlKau_Mode1,coKatmc,spsopr.cmcusl )
        else
          Attr_Analitik(hTxo, wFlKau_Mode1,coKatusl,spsopr.cmcusl )
        Attr_Analitik(hTxo, wFlKau_Mode1,cospsopr,spsopr.nrec )
        

        if w_CKAELEM=0
        { w_CKAELEM:=if(spsopr.prmc=1,sopr_katmc.CKAELEM,sopr_katusl.CKAELEM) ;
        }
        TxoDebugMsg(hTxo, 'TXO_PLporBASE','Элемент затрат='+string(w_CKAELEM) )       
        wcpodr:=0 ;
        TxoBodyAddKau(hTxo, wFlKau_Auto, 5017, w_CKAELEM)
        TxoBodyAddKau(hTxo, wFlKau_Mode0, 5017, w_CKAELEM)
        w_cfpco:=0 ; //Basedoc.cOtvPodr ;
        if isvalid(#sopr_SpecMtr)
        { TxoDebugMsg(hTxo, 'TXO_PLporBASE','нашли объект строительства '+string(SpecMtr.cobj)+'/'+string(cgKau_ObjBuild))
          TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_ObjBuild, sopr_SpecMtr.cobj)        
          TxoBodyAddKau(hTxo, wFlKau_Mode0, cgKau_ObjBuild, sopr_SpecMtr.cobj)        
          TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_FPCO , sopr_SpecMtr.ckau[1])        
          set w_cfpco:=sopr_SpecMtr.ckau[1] ;           
           wsch_tp:=wsch_tpm ;
        }
        else
         TxoDebugMsg(hTxo, 'TXO_PLporBASE',' не нашли объект строительства !!!')
        if w_cfpco=0
        { w_cfpco:=sopr_basedoc.cotvpodr ;
        } 
        if w_cfpco>0  
        { if getfirst fastfirstrow fpco=0 
          { TxoDebugMsg(hTxo, 'TXO_PLporBASE','Нашли центр ответсвенности '+fpco.name)
            case fpco.COTABLE of
            2 :
            { set wcpodr:=fpco.CMEAN  
               wsch_tp:=0 ;
//              TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_katpodr, fpco.CMEAN)
               TxoBodyAddKau(hTxo, wFlKau_mode1, cgKau_katpodr, fpco.CMEAN)
            }
            3: // сотрудники 
            { wsch_tp:=1
               TxoBodyAddKau(hTxo, wFlKau_mode2, cgKau_Persons, fpco.CMEAN)
               if getfirst fastfirstrow fpco1=0 and fpco1.COTABLE=2   set wcpodr:=fpco1.CMEAN ; 
            }
            1: 
            { // организация
              wsch_tp:=2 ;
              TxoBodyAddKau(hTxo, wFlKau_mode2, cgKau_Katorg, fpco.CMEAN)
              set w_corg:=fpco.CMEAN ;
              if getfirst fastfirstrow fpco1=0 and fpco1.COTABLE=2   set wcpodr:=fpco1.CMEAN ; 
              if isvalid(#katorg)
              { TxoDebugMsg(hTxo, 'TXO_PLporBASE',' организация='+katorg.name)
                if isvalid(#KatOrgDescr)
                { TxoBodyAddKau(hTxo, wFlKau_mode2, 68, KatOrgDescr.cgroup)        
                }
              }  

            }
            end ;
          }
          //'400093017AAC5E2Fh' ,
          //'400093017AAC5E2Fh', 
          //'400093017AAC5E2Fh' 
          //'400093017AAC5E2Fh'
        }
        if w_cfpco=0 and sopr_Basedoc.cOtvPodr>0
        { TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_FPCO, Basedoc.cOtvPodr)        
          
        }
        if wcpodr=0
        { wcpodr:=wcpodrm ; 
        }
        TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_katpodr, wcpodr)
        if sopr_Basedoc.VIDDOC<>600 and sopr_Basedoc.VIDDOC<>611 // Для внутреннего перемещения и актов об излишках не нужно
        { wsch:=GetSchetAttr(cospsopr,spsopr.nrec ) ;
          if wsch=''
          { if w_cfpco<>sopr_Basedoc.cOtvPodr and w_cfpco>0
            { GetSchetByGrPodr(htxo,2) ;
            }
           
            if wsch=''
            { wsch:=wschm ;
              wsub:=wsubm ;
            
            }  
          }  
          else wsub:=buhschet.subsch ;
          TxoDebugMsg(hTxo, 'TXO_PLporBASE', 'счет= '+wsch+',субсч='+string(wsub) ) ;
          klfilter:=true ;
          case tp_schet of
          1:
          { if wsch='73' or wsch='76' then 
            { TxoBodyClear(hTxo); continue ;       }
          }    
          2 :
          { if wsch<>'73' then
            { TxoBodyClear(hTxo); continue ;}
          }
          3 :
          { if wsch<>'76' then
            { TxoBodyClear(hTxo); continue ;
            }
          }  
          999: // прочие !!
          { if wsch_f<>wsch
            { TxoBodyClear(hTxo); continue ;
            }
            if wsub_f<>'' and wsub_f<>wsub then
            { TxoBodyClear(hTxo); continue ;
            }
              
          }
          end ;
          TxoDebugMsg(hTxo, 'TXO_PLporBASE', 'формируем на сумму '+string(spsophoz.summa)+'/'+string(spsopr.kol) ) ;
          TxoBodyAddSchet(hTxo, wFlKau_Mode0, PLANSSCH.KOD + wsch, wsub); 
        } //if Basedoc.VIDDOC<>600
        if spsopr.prmc=1
        { wsch:=GetSchetAttr(cogroupmc,sopr_katmc.cgroupmc )
          if wsch<>''
          { wsub:=buhschet.subsch ;
            TxoBodyAddSchet(hTxo, wFlKau_Mode1, PLANSSCH.KOD + wsch, wsub);
          }
          wsch:=GetSchetAttr(cotypemc,sopr_katmc.ctype )
          if wsch<>''
          { wsub:=buhschet.subsch ;
            TxoBodyAddSchet(hTxo, wFlKau_Mode2, PLANSSCH.KOD + wsch, wsub);
          }
        }
        wsu:=0 ; wsuval:=0 ;
        if abs(wsu_b-basefin.summa)<=0.02
        { wsu   :=-wsu_b   +basefin.summa
        }
        
        if abs(wsu_b-basefin.sumval)<=0.01
        {  wsuval:=-wsuval_b+basefin.sumval
        }
        wsu_b:=wsu_b+wsu
        wsuval_b:=wsuval_b+wsuval
        TxoBodySetSum(hTxo,round(spsophoz.summa,2)+wsu,spsophoz.sumval+wsuval,spsophoz.kolvo);
        
        TxoBodyInsert(hTxo);
        if abs(wsu_b-basefin.summa)<=0.01
        { break
        }
    
    } //spsophoz
    //======================
    wsu_b:=basefin.summa - wsu_b
    wsuval_b:=basefin.sumval-wsuval_b
    
    if abs(wsu_b)<0.01 then continue ;
    w_cfpco :=Basedoc.cotvpodr ;
    wcpodr:=0 ;
    wschm :='' ; wsubm:='' ;
    if BASEDOC.tipmoney<>3
    { wkoef_main:=wsu_b/basedoc.total ;
    }
    else
    { wkoef_main:=wsuval_b/basedoc.total ;
    }
    if getfirst fastfirstrow fpco=0 
    { case fpco.COTABLE of
      2 :
      { set wcpodr:=fpco.CMEAN  
        wsch_tpm:=0 ;
        wcpodr:=fpco.CMEAN  
        TxoDebugMsg(hTxo, 'TXO_PLporBASE','Нашли центр ответсвенности '+fpco.name)
      }
      3: // сотрудники 
      { wsch_tpm:=1
        if getfirst fastfirstrow fpco1=0 and fpco1.COTABLE=2   set wcpodr:=fpco1.CMEAN ; 
      }
      1: 
      { // организация
        wsch_tpm:=2 ;
        if getfirst fastfirstrow fpco1=0 and fpco1.COTABLE=2   set wcpodr:=fpco1.CMEAN ; 
        TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_Katorg, fpco.CMEAN)
      }
      end ;
    } // if getfirst fpco=0 
    else
    { 
      TxoDebugMsg(hTxo, 'TXO_PLporBASE','Не нашли центр ответсвенности !!!')
    }  
    wsu:=0 ;
//-----------------------------------------
    wcpodrm:=wcpodr ;
    if Basedoc.VIDDOC<>600 and Basedoc.VIDDOC<>611 // Для внутреннего перемещения и актов об излишках не нужно
    { if getfirst katpodr<>0
      { TxoDebugMsg(hTxo, 'TXO_PLporBASE','Не найдено подразделение !! ')
      }
      else
      { TxoDebugMsg(hTxo, 'TXO_PLporBASE','Ищем счет по группе подразделений в  '+chr(39)+katpodr.name+chr(39))
        GetSchetByGrPodr(htxo,1) ;
      } // else if getfirst katpodr<>0
      TxoDebugMsg(hTxo, 'TXO_PLporBASE','Счет|субсчет к накладной = '+wschm+'/'+wsubm) ;
    }
//=========================
// обработка спецификации  
//=========================
      _loop fullcache spstep
      { TxoDebugMsg(hTxo, 'TXO_PLporBASE','Позиция='+spstep.npp) ; 
        if SearchMarker(marker_spstep,spstep.nrec,IndexNoOt) then continue ;
        TxoDebugMsg(hTxo, 'TXO_PLporBASE','----') ; 
        InsertMarker(marker_spstep,spstep.nrec);
        TxoDebugMsg(hTxo, 'TXO_PLporBASE',' позиция счета '+string(spstep.cmcusl)
          +',цена*кол-во='+string(spstep.price*spstep.kol)
          +',ндс '+string(spstep.nds))
        if tp_filtr_mcusl>0// отработаем фильтр по мц
        { klfilter:=false
          wstr:='' ;
          case tp_filtr_mcusl of
          1  : { klfilter:=spstep.prmc=1 }
          2  : 
          { if spstep.prmc=1 and katmc.barkod=filtr_mcusl then klfilter:=true ;
           wstr:='МЦ '+katmc.name+'/'+katmc.barkod ;
          }
          3  : 
          { if spstep.prmc=1 and substr(groupmc.kod,1,length(filtr_mcusl))=filtr_mcusl then klfilter:=true ; 
            wstr:='Гр.МЦ '+groupmc.name+'/'+groupmc.kod ;
          }
          4  : { klfilter:=spstep.prmc<>1 }
          5  : 
          { if spstep.prmc<>1 and katusl.kod=filtr_mcusl then klfilter:=true ; 
            wstr:='Усл. '+katusl.name+'/'+katusl.kod ;
          }
          6  : 
          { if spstep.prmc<>1 and groupusl.kod=filtr_mcusl then klfilter:=true ; 
             wstr:='Гр.Усл '+groupusl.name+'/'+groupusl.kod ;
          }
          end ;
          if tp_filtr<>0 klfilter:=not klfilter ;
          if not klfilter then
          { TxoDebugMsg(hTxo, 'TXO_PLporBASE','  не прошла по фильтру,тип '+string(spstep.prmc)+','+wstr)
            continue ;
          }
        }  //if tp_filtr_mcusl>0

        if filtr_attrnam>0
        { klfilter:=false ;
          if isvalid(tnattrval) 
          { TxoDebugMsg(hTxo, 'TXO_PLporBASE','атрибут= '+attrval.vstring)
            if upcase(substr(attrval.vstring,1,length(filtr_arrtval)))=upcase(filtr_arrtval)
            { 
              klfilter:=true ;
            }  
            if attrval.vcomp=comp(filtr_arrtval) then klfilter:=true ;
          }
          if tp_filtr<>0 klfilter:=not klfilter ;
          if not klfilter then
          { TxoDebugMsg(hTxo, 'TXO_PLporBASE','  не прошла по фильтру на внешний атрибут')
           continue ;
          }
        } //if filtr_attrnam>0
        TxoBodyClear(hTxo);
        wsu:=0 ;wsuval:=0 ;
        case tp_summ of
        0 : { // сумма
          if BASEDOC.tipmoney<>3 // не валютный
          { wsu:=spstep.price*spstep.kol+if(Basedoc.vhodnal=1,0,spstep.nds) 
            wsuval:=spstep.sumval 
          }  
          else
          { wsuval:=spstep.price*spstep.kol+if(Basedoc.vhodnal=1,0,spstep.nds) 
            wsu:=wsuval*basefin.summa/basefin.sumval
          }
        }
        1 : {// НДС
          if BASEDOC.tipmoney<>3
          { wsu:=spstep.nds 
            wsuval:=spstep.Nds 
          }  
          else
          { wsuval:=spstep.nds 
            wsu:=wsuval*basefin.summa/basefin.sumval
          }
        }
        2: { // без НДС
          if BASEDOC.tipmoney<>3
          { wsu:=spstep.price*spstep.kol-if(Basedoc.vhodnal<>1,0,spstep.nds) 
            wsuval:=spstep.sumval
          }
          else
          { wsuval:=spstep.price*spstep.kol-if(Basedoc.vhodnal<>1,0,spstep.nds) 
            wsu:=wsuval*basefin.summa/basefin.sumval
          }  
        }
        end ; //case tp_sum of
        TxoDebugMsg(hTxo, 'TXO_PLporBASE','сумма= '+string(wsu,0,2)+', '+string(wsuval,0,2)+', '+string(wkoef_main,0,5))
        // на коэф по позиции умножать не надо ! можно конечно еще по цене проверку добавить
        wsu:=wsu*wkoef_main ; //*wkoef_pos ;
        wsuval:=wsuval*wkoef_main; //*wkoef_pos ;
        if tp_summ=3
        { wsu:=spstep.nrec ; wsuval:=0 ;
        } //if tp_sum=3
        set w_corg:=Basedoc.corg ;
        TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_KatOrg, Basedoc.corg)        
        TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_Basedoc, stepdoc.cbasedoc)        
        if spstep.prmc=1
        { TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_KatMC, spstep.cmcusl)        
          TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_GroupMC, katmc.cgroupmc)        
        } else
        { TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_KatUsl, spstep.cmcusl)        
          TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_GroupUsl, katusl.cgroupusl)        
        }
        TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_KatParty, spstep.cparty)        
        TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_BASEDOC, Basedoc.nrec)        
        TxoBodyAddKau(hTxo, wFlKau_Auto, 5022, Basedoc.ccalplan)        
        TxoBodyAddKau(hTxo, wFlKau_Mode5, cgKau_katpodr, wcpodrm) // главное подразделение по накладной
                
        if Basedoc.cOtvPodr>0
        { TxoBodyAddKau(hTxo, wFlKau_Mode3, cgKau_FPCO, Basedoc.cOtvPodr)        
          
        }
        if isvalid(#katorg)
        { TxoDebugMsg(hTxo, 'TXO_PLporBASE',' организация='+katorg.name)
          if isvalid(#KatOrgDescr)
          {  TxoBodyAddKau(hTxo, wFlKau_Auto, 68, KatOrgDescr.cgroup)   
             TxoDebugMsg(hTxo, 'TXO_PLporBASE',' группа ='+string(KatOrgDescr.cgroup))            
          }
          else
          { set wnmdesgr:=if(Basedoc.VIDDOC<200,'Поставщики','Заказчики')
            if getfirst KatOrgDescr1=0
            { TxoBodyAddKau(hTxo, wFlKau_Auto, 68, KatOrgDescr1.nrec) 
              TxoDebugMsg(hTxo, 'TXO_PLporBASE',' группа ='+KatOrgDescr1.name)       
            }
            else
            { TxoDebugMsg(hTxo, 'TXO_PLporBASE','нет группы '+wnmdesgr)       
            }
          }  
        }  
        
        TxoBodyAddKau(hTxo, wFlKau_Mode9, 9999, spstep.nrec)     
        w_CKAELEM:=0 ;   
        // заполняем по аналитике
        Attr_Analitik(hTxo, wFlKau_Mode2,coBasedoc,basedoc.nrec )
        Attr_Analitik(hTxo, wFlKau_Mode2,coBasedoc,Basedoc.nrec )
        // Эдуард просил - из кау справочника с большим приоритетом
        if spstep.prmc=1 // А может и не надо !
          Attr_Analitik(hTxo, wFlKau_Mode1,coKatmc,spstep.cmcusl )
        else
          Attr_Analitik(hTxo, wFlKau_Mode1,coKatusl,spstep.cmcusl )
        Attr_Analitik(hTxo, wFlKau_Mode1,cospstep,spstep.nrec )
        

        if w_CKAELEM=0
        { w_CKAELEM:=if(spstep.prmc=1,katmc.CKAELEM,katusl.CKAELEM) ;
        }
        TxoDebugMsg(hTxo, 'TXO_PLporBASE','Элемент затрат='+string(w_CKAELEM) )       
        wcpodr:=0 ;
        TxoBodyAddKau(hTxo, wFlKau_Auto, 5017, w_CKAELEM)
        TxoBodyAddKau(hTxo, wFlKau_Mode0, 5017, w_CKAELEM)
        w_cfpco:=0 ; //Basedoc.cOtvPodr ;
        if isvalid(#SpecMtr)
        { TxoDebugMsg(hTxo, 'TXO_PLporBASE','нашли объект строительства '+string(SpecMtr.cobj)+'/'+string(cgKau_ObjBuild))
          TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_ObjBuild, SpecMtr.cobj)        
          TxoBodyAddKau(hTxo, wFlKau_Mode0, cgKau_ObjBuild, SpecMtr.cobj)        
          TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_FPCO , SpecMtr.ckau[1])        
          set w_cfpco:=SpecMtr.ckau[1] ;           
           wsch_tp:=wsch_tpm ;
        }
        else
         TxoDebugMsg(hTxo, 'TXO_PLporBASE',' не нашли объект строительства !!!')
        if w_cfpco>0  
        { if getfirst fastfirstrow fpco=0 
          { TxoDebugMsg(hTxo, 'TXO_PLporBASE','Нашли центр ответсвенности '+fpco.name)
            case fpco.COTABLE of
            2 :
            { set wcpodr:=fpco.CMEAN  
               wsch_tp:=0 ;
//              TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_katpodr, fpco.CMEAN)
               TxoBodyAddKau(hTxo, wFlKau_mode1, cgKau_katpodr, fpco.CMEAN)
            }
            3: // сотрудники 
            { wsch_tp:=1
               TxoBodyAddKau(hTxo, wFlKau_mode2, cgKau_Persons, fpco.CMEAN)
               if getfirst fastfirstrow fpco1=0 and fpco1.COTABLE=2   set wcpodr:=fpco1.CMEAN ; 
            }
            1: 
            { // организация
              wsch_tp:=2 ;
              TxoBodyAddKau(hTxo, wFlKau_mode2, cgKau_Katorg, fpco.CMEAN)
              set w_corg:=fpco.CMEAN ;
              if getfirst fastfirstrow fpco1=0 and fpco1.COTABLE=2   set wcpodr:=fpco1.CMEAN ; 
              if isvalid(#katorg)
              { TxoDebugMsg(hTxo, 'TXO_PLporBASE',' организация='+katorg.name)
                if isvalid(#KatOrgDescr)
                { TxoBodyAddKau(hTxo, wFlKau_mode2, 68, KatOrgDescr.cgroup)        
                }
              }  

            }
            end ;
          }
          //'400093017AAC5E2Fh' ,
          //'400093017AAC5E2Fh', 
          //'400093017AAC5E2Fh' 
          //'400093017AAC5E2Fh'
        }
        if w_cfpco=0 and Basedoc.cOtvPodr>0
        { TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_FPCO, Basedoc.cOtvPodr)        
          
        }
        if wcpodr=0
        { wcpodr:=wcpodrm ; 
        }
        TxoBodyAddKau(hTxo, wFlKau_Auto, cgKau_katpodr, wcpodr)
        if Basedoc.VIDDOC<>600 and Basedoc.VIDDOC<>611 // Для внутреннего перемещения и актов об излишках не нужно
        { wsch:=GetSchetAttr(cospstep,spstep.nrec ) ;
          if wsch=''
          { if w_cfpco<>Basedoc.cOtvPodr and w_cfpco>0
            { GetSchetByGrPodr(htxo,2) ;
            }
           
            if wsch=''
            { wsch:=wschm ;
              wsub:=wsubm ;
            
            }  
          }  
          else wsub:=buhschet.subsch ;
          TxoDebugMsg(hTxo, 'TXO_PLporBASE', 'счет= '+wsch+',субсч='+string(wsub) ) ;
          klfilter:=true ;
          case tp_schet of
          1:
          { if wsch='73' or wsch='76' then 
            { TxoBodyClear(hTxo); continue ;       }
          }    
          2 :
          { if wsch<>'73' then
            { TxoBodyClear(hTxo); continue ;}
          }
          3 :
          { if wsch<>'76' then
            { TxoBodyClear(hTxo); continue ;
            }
          }  
          999: // прочие !!
          { if wsch_f<>wsch
            { TxoBodyClear(hTxo); continue ;
            }
            if wsub_f<>'' and wsub_f<>wsub then
            { TxoBodyClear(hTxo); continue ;
            }
              
          }
          end ;
          TxoDebugMsg(hTxo, 'TXO_PLporBASE', 'формируем на сумму '+string(wsu)+'/'+string(spstep.kol) ) ;
          TxoBodyAddSchet(hTxo, wFlKau_Mode0, PLANSSCH.KOD + wsch, wsub); 
        } //if Basedoc.VIDDOC<>600
        if spstep.prmc=1
        { wsch:=GetSchetAttr(cogroupmc,katmc.cgroupmc )
          if wsch<>''
          { wsub:=buhschet.subsch ;
            TxoBodyAddSchet(hTxo, wFlKau_Mode1, PLANSSCH.KOD + wsch, wsub);
          }
          wsch:=GetSchetAttr(cotypemc,katmc.ctype )
          if wsch<>''
          { wsub:=buhschet.subsch ;
            TxoBodyAddSchet(hTxo, wFlKau_Mode2, PLANSSCH.KOD + wsch, wsub);
          }
        }
        TxoBodySetSum(hTxo,wsu,wsuval,spstep.kol*if(isvalid(#katotped),katotped.koef,1));
        TxoBodyInsert(hTxo);
      } //_loop spstep
  } // loop basefin    
  ClearMarker(marker_spstep) ;
  DoneMarker(marker_spstep, '') ;
  DoneMarker(marker_deist, 'deist') ;

} //procedure StoreCycles(hTxo : longint; buf : TTxoApiInfoDoc);

HandleEvent
cmCheckField : 
{
  SetWindowTitle(winParam, 'Параметры'+idVipInfo+ParamGen);
  RescanPanel(#attrnam) ;

}
cmIdle:
{ SetWindowTitle(winParam, 'Параметры'+idVipInfo+ParamGen);
  RescanPanel(#attrnam) ;
}
end ;
end. //Конец основной процедуры

