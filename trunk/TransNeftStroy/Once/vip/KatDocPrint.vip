interface KatDocPrint;

File myFile;

const
  cgTiDk_LastUsers = 50000;
  cmPrintDoc = 3440;
end;

Table struct tTestSum (
  cKatDoc : comp
, Sum     : double
) with index (
  idx1 = cKatDoc
);

create view viewKatDoc
  var cParent : comp

  as select * from
  KatDoc
, tTestSum
 where (( KatDoc.nRec == tTestSum.cKatDoc ))

  bounds ShowTree = 0 == KatDoc.SysNum
  and cParent == KatDoc.cNode
  ordered by KatDoc.TiDkGal

  bounds ShowList = 0 == KatDoc.SysNum
  and 0 << KatDoc.TiDkGal
  and cgTiDk_LastUsers >>= KatDoc.TiDkGal
;

function GetIsDoc : boolean;
{
  result := ( KatDoc.TiDkGal <= cgTiDk_LastUsers );
}

function GetTiDkText : string;
{
  if( GetIsDoc )
    result := string(KatDoc.TiDkGal)
  else
    result := '';
}

screen DocScreen;
show at (,,,2);
buttons cmPrintDoc;
<<
 <.печать.>
>>
end

tree DocTree;
show at (,3,,);
table KatDoc;
fields
  KatDoc.Name  'Хозяйственный документ': [60], protect;
  GetTiDkText  'Код': [10], protect;
end;

tableevent table KatDoc
  cmTreeTop:
    cParent := 0;

  cmTreeUp:
    cParent := KatDoc.cNode;

  cmTreeDown:
    cParent := KatDoc.Nrec;

  cmTreeNodeType:
    if( GetIsDoc )
      TreeSetNodeType(DocTree, ntfText, '');
end;

var IsFirstRec : boolean;

DataStream DocDataStream
  (
    [User] UserName;   // элемент "нулевого уровня"

    table KatDoc       // элемент уровня table
    (
      KatDoc.Name;
      KatDoc.TiDkGal;
    );

    dataset KatDocTree // элемент уровня dataset
    (
      [Name]     KatDoc.Name;
      [TiDkGal]  KatDoc.TiDkGal;
      [TiDkText] GetTiDkText;
      [Level]    TreeLevel(DocTree);
    );

   table tTestSum (
     tTestSum.Sum;
   );

  )

  handleevent table KatDoc       // handleevent уровня table.
  cmPreProcess:
    PushBounds(tbShowList);

  cmOnProcess:
    if (not NextVisual)
      BreakProcess;
  end;

  handleevent dataset KatDocTree // handleevent уровня dataset.
  cmPreProcess:
  {
    PushBounds(tbShowTree);
    IsFirstRec := true;
  }

  cmOnProcess:
  {
    if( not NextVisual )
      BreakProcess;

    if( IsFirstRec )
    {
      IsFirstRec := false;

      if( TreeGetFirstEx(DocTree) )
        ContinueDataset;
    }
    else
    {
      if( TreeGetNextEx(DocTree) )
        ContinueDataset;
    }

   ClearBuffer(#tTestSum);
   tTestSum.cKatDoc := KatDoc.nRec;
   tTestSum.Sum     := 100000 + KatDoc.TiDkGal;
   Insert current tTestSum;
  }
  end;


  handleevent // handleevent уровня datastream
  cmPreProcess: {
    StartNewVisual(vtRotateVisual, vfTimer + vfBreak + vfConfirm, 'Формируется отчет', 0);
    }

  cmPostProcess:
    StopVisual('', 0);
  end;
end;

handleevent  // handleevent интерфейса
cmInit:
  PushBounds(tbShowTree);

cmPrintDoc : {

  var iRun, iRet: integer;
iRun := ExecProgram( 'start'
                   , 'Y:\TopSoft\_UnionData\_Нормативка ТНС_проектная\oit_приказ_593_от_19.08.2011.pdf'
                   ,'тестовый заголовок'
                   , pfDontWait
                   , iRet );

 Message( iRun + '~' + iRet);

!  mtClear(tntTestSum, mfNormal);

/*
  _Loop tTestSum {
  if (delete current tTestSum = tsOK) {
LogStrToFile('C:\dell_ok.log', tTestSum.Sum);
    } else {
LogStrToFile('C:\dell_er.log', tTestSum.Sum);
      }
  }
*/
!  RunFReport(DocDataStream, '', false);
  }

end;
end.
